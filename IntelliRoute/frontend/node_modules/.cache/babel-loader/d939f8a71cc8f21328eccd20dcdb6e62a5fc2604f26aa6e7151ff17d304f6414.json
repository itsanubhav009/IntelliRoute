{"ast":null,"code":"var _jsxFileName = \"/home/anubhav/project_6/auth-system/frontend/src/components/UserLocationMap.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, useMap, useMapEvents } from 'react-leaflet';\nimport { LocationContext } from '../context/LocationContext';\nimport { AuthContext } from '../context/AuthContext';\nimport { ChatContext } from '../context/ChatContext';\nimport ChatDialog from './ChatDialog';\nimport NotificationsPanel from './NotificationsPanel';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './UserLocationMap.css';\nimport NotificationButton from './NotificationButton';\n// Fix for default icons\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComments } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\n\n// Create custom icons\nconst createCustomIcon = color => {\n  return L.divIcon({\n    className: 'custom-div-icon',\n    html: `<div class=\"marker-pin\" style=\"background-color: ${color};\"></div>`,\n    iconSize: [30, 42],\n    iconAnchor: [15, 42]\n  });\n};\n\n// Helper to parse route data from PostGIS or OSRM\nconst parseRouteData = routeData => {\n  if (!routeData) return [];\n\n  // LINESTRING parsing\n  if (typeof routeData === 'string' && routeData.startsWith('LINESTRING')) {\n    try {\n      // Extract coordinates from LINESTRING(lng lat, lng lat, ...)\n      const coordsStr = routeData.substring(routeData.indexOf('(') + 1, routeData.lastIndexOf(')'));\n      return coordsStr.split(',').map(pair => {\n        const [lng, lat] = pair.trim().split(' ').map(parseFloat);\n        // Return [lat, lng] for Leaflet\n        return [lat, lng];\n      });\n    } catch (e) {\n      console.error('Error parsing LINESTRING:', e, routeData);\n      return [];\n    }\n  }\n\n  // If it's already an array, return it (assuming it's in Leaflet's [lat, lng] format)\n  if (Array.isArray(routeData)) {\n    return routeData;\n  }\n  return [];\n};\n\n// Component to update map bounds based on users' positions and routes\nfunction MapBoundsUpdater({\n  users,\n  paths\n}) {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    if (!users.length && !paths.length) return;\n    try {\n      const points = [];\n\n      // Add user points\n      users.forEach(user => {\n        if (user.latitude && user.longitude) {\n          points.push([user.latitude, user.longitude]);\n        }\n      });\n\n      // Add path points (with better handling for complex routes)\n      paths.forEach(path => {\n        if (path.parsedRoute && Array.isArray(path.parsedRoute)) {\n          // Don't add every point - just add first, last, and some in between\n          // to avoid overloading the bounds calculation with too many points\n          const routePoints = path.parsedRoute;\n          if (routePoints.length > 0) {\n            points.push(routePoints[0]); // Add first point\n\n            if (routePoints.length > 10) {\n              // Add a few points in the middle for long routes\n              points.push(routePoints[Math.floor(routePoints.length / 3)]);\n              points.push(routePoints[Math.floor(routePoints.length * 2 / 3)]);\n            }\n            if (routePoints.length > 1) {\n              points.push(routePoints[routePoints.length - 1]); // Add last point\n            }\n          }\n        }\n      });\n      if (points.length > 0) {\n        const bounds = L.latLngBounds(points);\n        map.fitBounds(bounds, {\n          padding: [50, 50]\n        });\n      }\n    } catch (error) {\n      console.error('Error updating map bounds:', error);\n    }\n  }, [users, paths, map]);\n  return null;\n}\n\n// Component to handle map clicks for route creation\n_s(MapBoundsUpdater, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = MapBoundsUpdater;\nfunction MapClickHandler({\n  routeMode,\n  selectedSource,\n  setSelectedSource,\n  createPath\n}) {\n  _s2();\n  useMapEvents({\n    click: e => {\n      if (!routeMode) return;\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      if (!selectedSource) {\n        // Set source\n        setSelectedSource({\n          lat,\n          lng\n        });\n      } else {\n        // Set destination and create path\n        const destination = {\n          lat,\n          lng\n        };\n        createPath(selectedSource, destination);\n\n        // Reset route mode (this will be handled by parent component)\n      }\n    }\n  });\n  return null;\n}\n_s2(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c2 = MapClickHandler;\nconst UserLocationMap = () => {\n  _s3();\n  const {\n    liveUsers,\n    fetchLiveUsers,\n    livePaths,\n    fetchLivePaths,\n    createPath\n  } = useContext(LocationContext);\n  const {\n    user\n  } = useContext(AuthContext);\n  // Get all the chat context values we need including activeChats\n  const {\n    sendChatRequest,\n    notifications,\n    currentChat,\n    openChat,\n    activeChats,\n    fetchActiveChats\n  } = useContext(ChatContext);\n  const [usersWithLocation, setUsersWithLocation] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastUpdated, setLastUpdated] = useState(new Date());\n  const [pathsWithCoordinates, setPathsWithCoordinates] = useState([]);\n  const [routeMode, setRouteMode] = useState(false);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const mapRef = useRef(null);\n\n  // Chat request handler\n  const handleChatRequest = userId => {\n    if (userId === user.id) {\n      // Don't allow chatting with yourself\n      return;\n    }\n    sendChatRequest(userId).then(response => {\n      console.log('Chat request sent successfully:', response);\n    }).catch(error => {\n      console.error('Failed to send chat request:', error);\n    });\n  };\n\n  // Fetch active chats on component mount\n  useEffect(() => {\n    if (user && fetchActiveChats) {\n      fetchActiveChats();\n    }\n  }, [user, fetchActiveChats]);\n\n  // Updated useEffect to better process livePaths\n  useEffect(() => {\n    if (!livePaths) {\n      console.log('[MAP] livePaths is null or undefined');\n      setPathsWithCoordinates([]);\n      return;\n    }\n    console.log(`[MAP] Processing ${livePaths.length} paths from LocationContext`);\n    try {\n      // Process each path\n      const parsed = livePaths.map((path, index) => {\n        // Check if this path has a route property\n        if (!path.route) {\n          console.log(`[MAP] Path ${index} has no route property:`, path);\n          // Check if it has route_wkt instead\n          if (path.route_wkt) {\n            console.log(`[MAP] Path ${index} has route_wkt property instead`);\n            path.route = path.route_wkt;\n          } else {\n            console.log(`[MAP] Path ${index} has no route data at all`);\n            return null;\n          }\n        }\n        const parsedRoute = parseRouteData(path.route);\n\n        // Check if we successfully parsed the route\n        if (parsedRoute.length === 0) {\n          console.log(`[MAP] Path ${index} (${path.id}) could not be parsed`);\n          return null;\n        }\n        console.log(`[MAP] Path ${index} (${path.id}): Successfully parsed ${parsedRoute.length} points`);\n\n        // Return the path with parsed route\n        return {\n          ...path,\n          parsedRoute\n        };\n      }).filter(Boolean); // Remove null entries\n\n      console.log(`[MAP] Setting ${parsed.length} paths with valid coordinates`);\n      setPathsWithCoordinates(parsed);\n\n      // If we have paths but none with valid coordinates, log a warning\n      if (livePaths.length > 0 && parsed.length === 0) {\n        console.warn('[MAP] All paths failed to parse:', livePaths);\n      }\n    } catch (error) {\n      console.error('[MAP] Error processing paths:', error);\n      setPathsWithCoordinates([]);\n    }\n  }, [livePaths]);\n  const toggleRouteMode = () => {\n    setRouteMode(!routeMode);\n    if (routeMode) {\n      // If turning off, clear selected source\n      setSelectedSource(null);\n    }\n  };\n  const handleCreatePath = async (source, destination) => {\n    try {\n      console.log('[MAP] Creating path from', source, 'to', destination);\n\n      // Show loading state\n      setIsLoading(true);\n\n      // Create the path\n      const result = await createPath(source, destination);\n      console.log('[MAP] Path created successfully:', result);\n\n      // Force a refresh of path data\n      await fetchLivePaths();\n\n      // Set last updated time\n      setLastUpdated(new Date());\n\n      // Exit route creation mode\n      setRouteMode(false);\n      setSelectedSource(null);\n    } catch (error) {\n      console.error('[MAP] Error creating path:', error);\n      // Show error to user\n      alert(`Failed to create path: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const formatTime = date => {\n    if (!(date instanceof Date)) {\n      try {\n        date = new Date(date);\n      } catch (e) {\n        return 'Unknown';\n      }\n    }\n    return date.toLocaleTimeString();\n  };\n  if (isLoading && usersWithLocation.length === 0 && pathsWithCoordinates.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-loading\",\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Calculate center point for map display or use a default\n  let centerLat = 0,\n    centerLng = 0;\n  if (usersWithLocation.length > 0) {\n    centerLat = usersWithLocation.reduce((sum, u) => sum + parseFloat(u.latitude || 0), 0) / usersWithLocation.length;\n    centerLng = usersWithLocation.reduce((sum, u) => sum + parseFloat(u.longitude || 0), 0) / usersWithLocation.length;\n  } else {\n    // Default to a central location if no users\n    centerLat = 0;\n    centerLng = 0;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Live User Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-controls\",\n          children: [/*#__PURE__*/_jsxDEV(NotificationButton, {\n            notificationCount: notifications ? notifications.length : 0,\n            onClick: () => setShowNotifications(!showNotifications)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 11\n          }, this), showNotifications && /*#__PURE__*/_jsxDEV(NotificationsPanel, {\n            onClose: () => setShowNotifications(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `route-button ${routeMode ? 'active' : ''}`,\n          onClick: toggleRouteMode,\n          children: routeMode ? 'Cancel Route' : 'Create Route'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 9\n        }, this), routeMode && !selectedSource && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-instructions\",\n          children: \"Click on map to set starting point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), routeMode && selectedSource && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-instructions\",\n          children: \"Click on map to set destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"last-updated\",\n          children: [\"Last updated: \", formatTime(lastUpdated)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [centerLat, centerLng],\n      zoom: 3,\n      style: {\n        height: '600px',\n        width: '100%'\n      },\n      ref: mapRef,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapClickHandler, {\n        routeMode: routeMode,\n        selectedSource: selectedSource,\n        setSelectedSource: setSelectedSource,\n        createPath: handleCreatePath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), usersWithLocation.map(u => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [parseFloat(u.latitude), parseFloat(u.longitude)],\n        icon: createCustomIcon(u.id === (user === null || user === void 0 ? void 0 : user.id) ? '#4285F4' : '#FF5722'),\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-popup\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: u.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-status\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 19\n              }, this), \"Online\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-location\",\n              children: [\"Coordinates: \", parseFloat(u.latitude).toFixed(4), \", \", parseFloat(u.longitude).toFixed(4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-last-active\",\n              children: [\"Last active: \", formatTime(u.last_active)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 17\n            }, this), u.id === (user === null || user === void 0 ? void 0 : user.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"current-user-tag\",\n              children: \"This is you\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-button-container\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chat-request-button\",\n                onClick: () => handleChatRequest(u.id),\n                children: [\"Chat with \", u.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this)\n      }, `user-${u.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this)), routeMode && selectedSource && /*#__PURE__*/_jsxDEV(Marker, {\n        position: [selectedSource.lat, selectedSource.lng],\n        icon: createCustomIcon('#00C853'),\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"Starting point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this), pathsWithCoordinates.map((path, idx) => /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: path.parsedRoute,\n        color: path.user_id === (user === null || user === void 0 ? void 0 : user.id) ? '#2196F3' : '#FF5722',\n        weight: 4,\n        opacity: 0.7,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"path-popup\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Route Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"User:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 20\n              }, this), \" \", path.username || 'Unknown']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Created:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 20\n              }, this), \" \", formatTime(path.created_at)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 17\n            }, this), path.parsedRoute.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"From:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 24\n                }, this), \" \", path.parsedRoute[0][0].toFixed(4), \", \", path.parsedRoute[0][1].toFixed(4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"To:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 24\n                }, this), \" \", path.parsedRoute[path.parsedRoute.length - 1][0].toFixed(4), \", \", path.parsedRoute[path.parsedRoute.length - 1][1].toFixed(4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Points:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 24\n                }, this), \" \", path.parsedRoute.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this)\n      }, `path-${path.id || idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(MapBoundsUpdater, {\n        users: usersWithLocation,\n        paths: pathsWithCoordinates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-legend\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Map Legend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-items\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-marker\",\n            style: {\n              backgroundColor: '#4285F4'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Your location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-marker\",\n            style: {\n              backgroundColor: '#FF5722'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Other users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-line\",\n            style: {\n              backgroundColor: '#2196F3'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Your paths\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-line\",\n            style: {\n              backgroundColor: '#FF5722'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Other users' paths\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this), routeMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-marker\",\n            style: {\n              backgroundColor: '#00C853'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Selected starting point\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-info-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Active Users:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this), \" \", usersWithLocation.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Active Paths:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this), \" \", pathsWithCoordinates.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Last Updated:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), \" \", formatTime(lastUpdated)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-chats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faComments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this), \" Active Chats\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chats-list\",\n          children: activeChats && activeChats.length > 0 ? activeChats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-item\",\n            onClick: () => openChat(chat.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-user\",\n              children: chat.otherParticipants && chat.otherParticipants.length > 0 ? chat.otherParticipants[0].username : 'Unknown User'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 19\n            }, this), chat.unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"unread-badge\",\n              children: chat.unreadCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 21\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-chats\",\n            children: \"No active chats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this), pathsWithCoordinates.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recent-paths\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Recent Paths\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paths-list\",\n          children: pathsWithCoordinates.slice(0, 5).map((path, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"path-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"path-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: path.username || 'Unknown user'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatTime(path.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"path-details\",\n              children: path.parsedRoute.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [\"From: \", path.parsedRoute[0][0].toFixed(4), \", \", path.parsedRoute[0][1].toFixed(4)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [\"To: \", path.parsedRoute[path.parsedRoute.length - 1][0].toFixed(4), \", \", path.parsedRoute[path.parsedRoute.length - 1][1].toFixed(4)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [\"Route Points: \", path.parsedRoute.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), currentChat && /*#__PURE__*/_jsxDEV(ChatDialog, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 5\n  }, this);\n};\n_s3(UserLocationMap, \"JBaW6+8eFledA4w1kA1PflTzmi4=\");\n_c3 = UserLocationMap;\nexport default UserLocationMap;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MapBoundsUpdater\");\n$RefreshReg$(_c2, \"MapClickHandler\");\n$RefreshReg$(_c3, \"UserLocationMap\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useRef","MapContainer","TileLayer","Marker","Popup","Polyline","useMap","useMapEvents","LocationContext","AuthContext","ChatContext","ChatDialog","NotificationsPanel","L","NotificationButton","icon","iconShadow","FontAwesomeIcon","faComments","jsxDEV","_jsxDEV","Fragment","_Fragment","DefaultIcon","iconUrl","shadowUrl","iconSize","iconAnchor","prototype","options","createCustomIcon","color","divIcon","className","html","parseRouteData","routeData","startsWith","coordsStr","substring","indexOf","lastIndexOf","split","map","pair","lng","lat","trim","parseFloat","e","console","error","Array","isArray","MapBoundsUpdater","users","paths","_s","length","points","forEach","user","latitude","longitude","push","path","parsedRoute","routePoints","Math","floor","bounds","latLngBounds","fitBounds","padding","_c","MapClickHandler","routeMode","selectedSource","setSelectedSource","createPath","_s2","click","latlng","destination","_c2","UserLocationMap","_s3","liveUsers","fetchLiveUsers","livePaths","fetchLivePaths","sendChatRequest","notifications","currentChat","openChat","activeChats","fetchActiveChats","usersWithLocation","setUsersWithLocation","isLoading","setIsLoading","lastUpdated","setLastUpdated","Date","pathsWithCoordinates","setPathsWithCoordinates","setRouteMode","showNotifications","setShowNotifications","mapRef","handleChatRequest","userId","id","then","response","log","catch","parsed","index","route","route_wkt","filter","Boolean","warn","toggleRouteMode","handleCreatePath","source","result","alert","message","formatTime","date","toLocaleTimeString","children","fileName","_jsxFileName","lineNumber","columnNumber","centerLat","centerLng","reduce","sum","u","notificationCount","onClick","onClose","center","zoom","style","height","width","ref","attribution","url","position","username","toFixed","last_active","idx","positions","user_id","weight","opacity","created_at","backgroundColor","chat","otherParticipants","unreadCount","slice","_c3","$RefreshReg$"],"sources":["/home/anubhav/project_6/auth-system/frontend/src/components/UserLocationMap.js"],"sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, useMap, useMapEvents } from 'react-leaflet';\nimport { LocationContext } from '../context/LocationContext';\nimport { AuthContext } from '../context/AuthContext';\nimport { ChatContext } from '../context/ChatContext';\nimport ChatDialog from './ChatDialog';\nimport NotificationsPanel from './NotificationsPanel';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './UserLocationMap.css';\nimport NotificationButton from './NotificationButton';\n// Fix for default icons\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComments } from '@fortawesome/free-solid-svg-icons';\n\n\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41]\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\n// Create custom icons\nconst createCustomIcon = (color) => {\n  return L.divIcon({\n    className: 'custom-div-icon',\n    html: `<div class=\"marker-pin\" style=\"background-color: ${color};\"></div>`,\n    iconSize: [30, 42],\n    iconAnchor: [15, 42]\n  });\n};\n\n// Helper to parse route data from PostGIS or OSRM\nconst parseRouteData = (routeData) => {\n  if (!routeData) return [];\n  \n  // LINESTRING parsing\n  if (typeof routeData === 'string' && routeData.startsWith('LINESTRING')) {\n    try {\n      // Extract coordinates from LINESTRING(lng lat, lng lat, ...)\n      const coordsStr = routeData.substring(routeData.indexOf('(') + 1, routeData.lastIndexOf(')'));\n      return coordsStr.split(',').map(pair => {\n        const [lng, lat] = pair.trim().split(' ').map(parseFloat);\n        // Return [lat, lng] for Leaflet\n        return [lat, lng]; \n      });\n    } catch (e) {\n      console.error('Error parsing LINESTRING:', e, routeData);\n      return [];\n    }\n  }\n  \n  // If it's already an array, return it (assuming it's in Leaflet's [lat, lng] format)\n  if (Array.isArray(routeData)) {\n    return routeData;\n  }\n  \n  return [];\n};\n\n// Component to update map bounds based on users' positions and routes\nfunction MapBoundsUpdater({ users, paths }) {\n  const map = useMap();\n  \n  useEffect(() => {\n    if (!users.length && !paths.length) return;\n    \n    try {\n      const points = [];\n      \n      // Add user points\n      users.forEach(user => {\n        if (user.latitude && user.longitude) {\n          points.push([user.latitude, user.longitude]);\n        }\n      });\n      \n      // Add path points (with better handling for complex routes)\n      paths.forEach(path => {\n        if (path.parsedRoute && Array.isArray(path.parsedRoute)) {\n          // Don't add every point - just add first, last, and some in between\n          // to avoid overloading the bounds calculation with too many points\n          const routePoints = path.parsedRoute;\n          if (routePoints.length > 0) {\n            points.push(routePoints[0]); // Add first point\n            \n            if (routePoints.length > 10) {\n              // Add a few points in the middle for long routes\n              points.push(routePoints[Math.floor(routePoints.length / 3)]);\n              points.push(routePoints[Math.floor(routePoints.length * 2 / 3)]);\n            }\n            \n            if (routePoints.length > 1) {\n              points.push(routePoints[routePoints.length - 1]); // Add last point\n            }\n          }\n        }\n      });\n      \n      if (points.length > 0) {\n        const bounds = L.latLngBounds(points);\n        map.fitBounds(bounds, { padding: [50, 50] });\n      }\n    } catch (error) {\n      console.error('Error updating map bounds:', error);\n    }\n  }, [users, paths, map]);\n  \n  return null;\n}\n\n// Component to handle map clicks for route creation\nfunction MapClickHandler({ routeMode, selectedSource, setSelectedSource, createPath }) {\n  useMapEvents({\n    click: (e) => {\n      if (!routeMode) return;\n      \n      const { lat, lng } = e.latlng;\n      \n      if (!selectedSource) {\n        // Set source\n        setSelectedSource({ lat, lng });\n      } else {\n        // Set destination and create path\n        const destination = { lat, lng };\n        createPath(selectedSource, destination);\n        \n        // Reset route mode (this will be handled by parent component)\n      }\n    }\n  });\n  \n  return null;\n}\n\nconst UserLocationMap = () => {\n  const { liveUsers, fetchLiveUsers, livePaths, fetchLivePaths, createPath } = useContext(LocationContext);\n  const { user } = useContext(AuthContext);\n  // Get all the chat context values we need including activeChats\n  const { \n    sendChatRequest, \n    notifications, \n    currentChat, \n    openChat,\n    activeChats,\n    fetchActiveChats\n  } = useContext(ChatContext);\n  \n  const [usersWithLocation, setUsersWithLocation] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastUpdated, setLastUpdated] = useState(new Date());\n  const [pathsWithCoordinates, setPathsWithCoordinates] = useState([]);\n  const [routeMode, setRouteMode] = useState(false);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const mapRef = useRef(null);\n\n  // Chat request handler\n  const handleChatRequest = (userId) => {\n    if (userId === user.id) {\n      // Don't allow chatting with yourself\n      return;\n    }\n    \n    sendChatRequest(userId)\n      .then((response) => {\n        console.log('Chat request sent successfully:', response);\n      })\n      .catch((error) => {\n        console.error('Failed to send chat request:', error);\n      });\n  };\n\n  // Fetch active chats on component mount\n  useEffect(() => {\n    if (user && fetchActiveChats) {\n      fetchActiveChats();\n    }\n  }, [user, fetchActiveChats]);\n\n// Updated useEffect to better process livePaths\nuseEffect(() => {\n  if (!livePaths) {\n    console.log('[MAP] livePaths is null or undefined');\n    setPathsWithCoordinates([]);\n    return;\n  }\n  \n  console.log(`[MAP] Processing ${livePaths.length} paths from LocationContext`);\n  \n  try {\n    // Process each path\n    const parsed = livePaths.map((path, index) => {\n      // Check if this path has a route property\n      if (!path.route) {\n        console.log(`[MAP] Path ${index} has no route property:`, path);\n        // Check if it has route_wkt instead\n        if (path.route_wkt) {\n          console.log(`[MAP] Path ${index} has route_wkt property instead`);\n          path.route = path.route_wkt;\n        } else {\n          console.log(`[MAP] Path ${index} has no route data at all`);\n          return null;\n        }\n      }\n      \n      const parsedRoute = parseRouteData(path.route);\n      \n      // Check if we successfully parsed the route\n      if (parsedRoute.length === 0) {\n        console.log(`[MAP] Path ${index} (${path.id}) could not be parsed`);\n        return null;\n      }\n      \n      console.log(`[MAP] Path ${index} (${path.id}): Successfully parsed ${parsedRoute.length} points`);\n      \n      // Return the path with parsed route\n      return {\n        ...path,\n        parsedRoute\n      };\n    }).filter(Boolean); // Remove null entries\n    \n    console.log(`[MAP] Setting ${parsed.length} paths with valid coordinates`);\n    setPathsWithCoordinates(parsed);\n    \n    // If we have paths but none with valid coordinates, log a warning\n    if (livePaths.length > 0 && parsed.length === 0) {\n      console.warn('[MAP] All paths failed to parse:', livePaths);\n    }\n  } catch (error) {\n    console.error('[MAP] Error processing paths:', error);\n    setPathsWithCoordinates([]);\n  }\n}, [livePaths]);\n\n  const toggleRouteMode = () => {\n    setRouteMode(!routeMode);\n    if (routeMode) {\n      // If turning off, clear selected source\n      setSelectedSource(null);\n    }\n  };\n\n  const handleCreatePath = async (source, destination) => {\n    try {\n      console.log('[MAP] Creating path from', source, 'to', destination);\n      \n      // Show loading state\n      setIsLoading(true);\n      \n      // Create the path\n      const result = await createPath(source, destination);\n      \n      console.log('[MAP] Path created successfully:', result);\n      \n      // Force a refresh of path data\n      await fetchLivePaths();\n      \n      // Set last updated time\n      setLastUpdated(new Date());\n      \n      // Exit route creation mode\n      setRouteMode(false);\n      setSelectedSource(null);\n    } catch (error) {\n      console.error('[MAP] Error creating path:', error);\n      // Show error to user\n      alert(`Failed to create path: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const formatTime = (date) => {\n    if (!(date instanceof Date)) {\n      try {\n        date = new Date(date);\n      } catch (e) {\n        return 'Unknown';\n      }\n    }\n    return date.toLocaleTimeString();\n  };\n\n  if (isLoading && usersWithLocation.length === 0 && pathsWithCoordinates.length === 0) {\n    return <div className=\"map-loading\">Loading map...</div>;\n  }\n\n  // Calculate center point for map display or use a default\n  let centerLat = 0, centerLng = 0;\n  \n  if (usersWithLocation.length > 0) {\n    centerLat = usersWithLocation.reduce((sum, u) => sum + parseFloat(u.latitude || 0), 0) / usersWithLocation.length;\n    centerLng = usersWithLocation.reduce((sum, u) => sum + parseFloat(u.longitude || 0), 0) / usersWithLocation.length;\n  } else {\n    // Default to a central location if no users\n    centerLat = 0;\n    centerLng = 0;\n  }\n\n  return (\n    <div className=\"map-container\">\n     <div className=\"map-header\">\n      <h3>Live User Map</h3>\n      <div className=\"map-controls\">\n        <div className=\"notification-controls\">\n          <NotificationButton \n            notificationCount={notifications ? notifications.length : 0}\n            onClick={() => setShowNotifications(!showNotifications)}\n          />\n          \n          {showNotifications && (\n            <NotificationsPanel onClose={() => setShowNotifications(false)} />\n          )}\n        </div>\n        \n        <button \n          className={`route-button ${routeMode ? 'active' : ''}`} \n          onClick={toggleRouteMode}\n        >\n          {routeMode ? 'Cancel Route' : 'Create Route'}\n        </button>\n        \n        {routeMode && !selectedSource && (\n          <div className=\"route-instructions\">Click on map to set starting point</div>\n        )}\n        \n        {routeMode && selectedSource && (\n          <div className=\"route-instructions\">Click on map to set destination</div>\n        )}\n        \n        <span className=\"last-updated\">\n          Last updated: {formatTime(lastUpdated)}\n        </span>\n      </div>\n    </div>\n      \n      <MapContainer \n        center={[centerLat, centerLng]} \n        zoom={3} \n        style={{ height: '600px', width: '100%' }}\n        ref={mapRef}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        \n        {/* Map click handler for route creation */}\n        <MapClickHandler \n          routeMode={routeMode} \n          selectedSource={selectedSource} \n          setSelectedSource={setSelectedSource} \n          createPath={handleCreatePath}\n        />\n        \n        {/* Display user markers */}\n        {usersWithLocation.map(u => (\n          <Marker \n            key={`user-${u.id}`} \n            position={[parseFloat(u.latitude), parseFloat(u.longitude)]}\n            icon={createCustomIcon(u.id === user?.id ? '#4285F4' : '#FF5722')}\n          >\n            <Popup>\n              <div className=\"user-popup\">\n                <h3>{u.username}</h3>\n                <div className=\"user-status\">\n                  <span className=\"status-dot\"></span>\n                  Online\n                </div>\n                <div className=\"user-location\">\n                  Coordinates: {parseFloat(u.latitude).toFixed(4)}, {parseFloat(u.longitude).toFixed(4)}\n                </div>\n                <div className=\"user-last-active\">\n                  Last active: {formatTime(u.last_active)}\n                </div>\n                {u.id === user?.id ? (\n                  <div className=\"current-user-tag\">This is you</div>\n                ) : (\n                  <div className=\"chat-button-container\">\n                    <button \n                      className=\"chat-request-button\"\n                      onClick={() => handleChatRequest(u.id)}\n                    >\n                      Chat with {u.username}\n                    </button>\n                  </div>\n                )}\n              </div>\n            </Popup>\n          </Marker>\n        ))}\n\n        {/* Display route source marker if in route mode */}\n        {routeMode && selectedSource && (\n          <Marker \n            position={[selectedSource.lat, selectedSource.lng]}\n            icon={createCustomIcon('#00C853')}\n          >\n            <Popup>Starting point</Popup>\n          </Marker>\n        )}\n        \n        {/* Display paths as polylines */}\n        {pathsWithCoordinates.map((path, idx) => (\n          <Polyline \n            key={`path-${path.id || idx}`} \n            positions={path.parsedRoute} \n            color={path.user_id === user?.id ? '#2196F3' : '#FF5722'} \n            weight={4}\n            opacity={0.7}\n          >\n            <Popup>\n              <div className=\"path-popup\">\n                <h4>Route Information</h4>\n                <p><strong>User:</strong> {path.username || 'Unknown'}</p>\n                <p><strong>Created:</strong> {formatTime(path.created_at)}</p>\n                {path.parsedRoute.length > 0 && (\n                  <>\n                    <p><strong>From:</strong> {path.parsedRoute[0][0].toFixed(4)}, {path.parsedRoute[0][1].toFixed(4)}</p>\n                    <p><strong>To:</strong> {path.parsedRoute[path.parsedRoute.length-1][0].toFixed(4)}, {path.parsedRoute[path.parsedRoute.length-1][1].toFixed(4)}</p>\n                    <p><strong>Points:</strong> {path.parsedRoute.length}</p>\n                  </>\n                )}\n              </div>\n            </Popup>\n          </Polyline>\n        ))}\n\n        {/* Map bounds updater component */}\n        <MapBoundsUpdater \n          users={usersWithLocation} \n          paths={pathsWithCoordinates} \n        />\n      </MapContainer>\n      \n      <div className=\"map-legend\">\n        <h4>Map Legend</h4>\n        <div className=\"legend-items\">\n          <div className=\"legend-item\">\n            <div className=\"legend-marker\" style={{ backgroundColor: '#4285F4' }}></div>\n            <span>Your location</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-marker\" style={{ backgroundColor: '#FF5722' }}></div>\n            <span>Other users</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-line\" style={{ backgroundColor: '#2196F3' }}></div>\n            <span>Your paths</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-line\" style={{ backgroundColor: '#FF5722' }}></div>\n            <span>Other users' paths</span>\n          </div>\n          {routeMode && (\n            <div className=\"legend-item\">\n              <div className=\"legend-marker\" style={{ backgroundColor: '#00C853' }}></div>\n              <span>Selected starting point</span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Display path information and active chats panel */}\n      <div className=\"map-info-panel\">\n        <h4>Statistics</h4>\n        <div className=\"map-stats\">\n          <div className=\"stat-item\">\n            <strong>Active Users:</strong> {usersWithLocation.length}\n          </div>\n          <div className=\"stat-item\">\n            <strong>Active Paths:</strong> {pathsWithCoordinates.length}\n          </div>\n          <div className=\"stat-item\">\n            <strong>Last Updated:</strong> {formatTime(lastUpdated)}\n          </div>\n        </div>\n        \n        {/* New Active Chats Panel */}\n        <div className=\"active-chats\">\n          <h4>\n            <FontAwesomeIcon icon={faComments} /> Active Chats\n          </h4>\n          <div className=\"chats-list\">\n            {activeChats && activeChats.length > 0 ? (\n              activeChats.map(chat => (\n                <div \n                  key={chat.id} \n                  className=\"chat-item\"\n                  onClick={() => openChat(chat.id)}\n                >\n                  <div className=\"chat-user\">\n                    {chat.otherParticipants && chat.otherParticipants.length > 0 \n                      ? chat.otherParticipants[0].username \n                      : 'Unknown User'}\n                  </div>\n                  {chat.unreadCount > 0 && (\n                    <span className=\"unread-badge\">{chat.unreadCount}</span>\n                  )}\n                </div>\n              ))\n            ) : (\n              <div className=\"no-chats\">No active chats</div>\n            )}\n          </div>\n        </div>\n        \n        {pathsWithCoordinates.length > 0 && (\n          <div className=\"recent-paths\">\n            <h4>Recent Paths</h4>\n            <div className=\"paths-list\">\n              {pathsWithCoordinates.slice(0, 5).map((path, idx) => (\n                <div key={idx} className=\"path-item\">\n                  <div className=\"path-header\">\n                    <strong>{path.username || 'Unknown user'}</strong>\n                    <span>{formatTime(path.created_at)}</span>\n                  </div>\n                  <div className=\"path-details\">\n                    {path.parsedRoute.length > 0 && (\n                      <>\n                        <small>\n                          From: {path.parsedRoute[0][0].toFixed(4)}, {path.parsedRoute[0][1].toFixed(4)}\n                        </small>\n                        <small>\n                          To: {path.parsedRoute[path.parsedRoute.length-1][0].toFixed(4)}, {path.parsedRoute[path.parsedRoute.length-1][1].toFixed(4)}\n                        </small>\n                        <small>\n                          Route Points: {path.parsedRoute.length}\n                        </small>\n                      </>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Chat dialog */}\n      {currentChat && <ChatDialog />}\n    </div>\n  );\n};\n\nexport default UserLocationMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}