{"ast":null,"code":"var _jsxFileName = \"/home/anubhav/project_6/auth-system/frontend/src/components/NotificationsPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { ChatContext } from '../context/ChatContext';\nimport ChatNotification from './ChatNotification';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\nimport './NotificationsPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationsPanel = ({\n  onClose\n}) => {\n  _s();\n  const {\n    notifications,\n    fetchNotifications\n  } = useContext(ChatContext);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [lastRefreshed, setLastRefreshed] = useState(new Date());\n\n  // Force refresh notifications\n  const handleRefreshNotifications = async () => {\n    setIsRefreshing(true);\n    try {\n      await fetchNotifications(true); // Force refresh by passing true\n      setLastRefreshed(new Date());\n    } catch (error) {\n      console.error('Failed to refresh notifications:', error);\n    } finally {\n      setIsRefreshing(false);\n    }\n  };\n\n  // Get current time in format HH:MM:SS\n  const getTimeString = () => {\n    return lastRefreshed.toLocaleTimeString();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"refresh-notifications-btn\",\n          onClick: handleRefreshNotifications,\n          disabled: isRefreshing,\n          title: \"Refresh notifications\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faSync,\n            spin: isRefreshing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"last-refreshed\",\n      children: [\"Last refreshed: \", getTimeString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notifications-list\",\n      children: notifications && notifications.length > 0 ? notifications.map(notification => /*#__PURE__*/_jsxDEV(ChatNotification, {\n        notification: notification\n      }, notification.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-notifications\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-notifications-sub\",\n          children: \"You will see chat requests and other notifications here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationsPanel, \"p7b68YMx98f5ho13yiDW5Ysc1iI=\");\n_c = NotificationsPanel;\nexport default NotificationsPanel;\nvar _c;\n$RefreshReg$(_c, \"NotificationsPanel\");","map":{"version":3,"names":["React","useContext","useEffect","useState","ChatContext","ChatNotification","FontAwesomeIcon","faSync","jsxDEV","_jsxDEV","NotificationsPanel","onClose","_s","notifications","fetchNotifications","isRefreshing","setIsRefreshing","lastRefreshed","setLastRefreshed","Date","handleRefreshNotifications","error","console","getTimeString","toLocaleTimeString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","title","icon","spin","length","map","notification","id","_c","$RefreshReg$"],"sources":["/home/anubhav/project_6/auth-system/frontend/src/components/NotificationsPanel.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { ChatContext } from '../context/ChatContext';\nimport ChatNotification from './ChatNotification';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\nimport './NotificationsPanel.css';\n\nconst NotificationsPanel = ({ onClose }) => {\n  const { notifications, fetchNotifications } = useContext(ChatContext);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [lastRefreshed, setLastRefreshed] = useState(new Date());\n\n  // Force refresh notifications\n  const handleRefreshNotifications = async () => {\n    setIsRefreshing(true);\n    try {\n      await fetchNotifications(true); // Force refresh by passing true\n      setLastRefreshed(new Date());\n    } catch (error) {\n      console.error('Failed to refresh notifications:', error);\n    } finally {\n      setIsRefreshing(false);\n    }\n  };\n\n  // Get current time in format HH:MM:SS\n  const getTimeString = () => {\n    return lastRefreshed.toLocaleTimeString();\n  };\n\n  return (\n    <div className=\"notifications-panel\">\n      <div className=\"notifications-header\">\n        <h3>Notifications</h3>\n        <div className=\"notification-actions\">\n          <button \n            className=\"refresh-notifications-btn\" \n            onClick={handleRefreshNotifications}\n            disabled={isRefreshing}\n            title=\"Refresh notifications\"\n          >\n            <FontAwesomeIcon icon={faSync} spin={isRefreshing} />\n          </button>\n          <button className=\"close-button\" onClick={onClose}>Ã—</button>\n        </div>\n      </div>\n      \n      <div className=\"last-refreshed\">\n        Last refreshed: {getTimeString()}\n      </div>\n      \n      <div className=\"notifications-list\">\n        {notifications && notifications.length > 0 ? (\n          notifications.map(notification => (\n            <ChatNotification \n              key={notification.id} \n              notification={notification} \n            />\n          ))\n        ) : (\n          <div className=\"no-notifications\">\n            <p>No notifications</p>\n            <p className=\"no-notifications-sub\">You will see chat requests and other notifications here</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NotificationsPanel;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}