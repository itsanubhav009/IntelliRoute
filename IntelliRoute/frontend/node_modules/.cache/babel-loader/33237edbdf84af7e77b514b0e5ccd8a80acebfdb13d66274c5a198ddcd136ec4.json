{"ast":null,"code":"var _jsxFileName = \"/home/anubhav/project_6/auth-system/frontend/src/components/ChatDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { ChatContext } from '../context/ChatContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faPaperPlane, faSpinner, faInfoCircle, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport './ChatDialog.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatDialog = () => {\n  _s();\n  const {\n    currentChat,\n    messages,\n    sendMessage,\n    closeChat,\n    fetchMessages,\n    chatStatus,\n    fetchActiveChats\n  } = useContext(ChatContext);\n  const [messageText, setMessageText] = useState('');\n  const [sending, setSending] = useState(false);\n  const [sendError, setSendError] = useState(null);\n  const [localChatState, setLocalChatState] = useState({\n    isActive: false,\n    hasJoined: false,\n    isReady: false\n  });\n  const messagesEndRef = useRef(null);\n\n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Effect to scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Effect to check and update chat status\n  useEffect(() => {\n    if (!currentChat) return;\n    console.log('Current chat state:', currentChat);\n\n    // Force active if we already have messages (a reliable indicator of an active chat)\n    const forceActive = messages && messages.length > 0;\n\n    // Update local state based on current chat and message presence\n    setLocalChatState({\n      isActive: forceActive || currentChat.isActive,\n      hasJoined: forceActive || currentChat.hasJoined,\n      isReady: forceActive || currentChat.isActive && currentChat.hasJoined\n    });\n\n    // If chat appears inactive but we have messages, refresh chat status\n    if (!currentChat.isActive && messages && messages.length > 0) {\n      console.log('Chat appears active (has messages) but status shows inactive. Refreshing...');\n      fetchActiveChats(true).then(updatedChats => {\n        const updatedChat = updatedChats.find(c => c.id === currentChat.id);\n        if (updatedChat) {\n          console.log('Updated chat status:', updatedChat);\n          if (updatedChat.isActive) {\n            setLocalChatState({\n              isActive: true,\n              hasJoined: true,\n              isReady: true\n            });\n          }\n        }\n      });\n    }\n\n    // Set up polling to check status if needed\n    let checkInterval;\n    if (!currentChat.isActive || !currentChat.hasJoined) {\n      console.log('Setting up status polling for chat room', currentChat.id);\n      checkInterval = setInterval(() => {\n        fetchActiveChats(true).then(updatedChats => {\n          const updatedChat = updatedChats.find(c => c.id === currentChat.id);\n          if (updatedChat && (updatedChat.isActive || messages.length > 0)) {\n            console.log('Updated chat status:', updatedChat);\n            setLocalChatState({\n              isActive: true,\n              hasJoined: true,\n              isReady: true\n            });\n            clearInterval(checkInterval);\n          }\n        });\n      }, 3000);\n    }\n\n    // Regular message polling\n    const messagePollingId = setInterval(() => {\n      fetchMessages(currentChat.id);\n    }, 5000);\n    return () => {\n      if (checkInterval) clearInterval(checkInterval);\n      clearInterval(messagePollingId);\n    };\n  }, [currentChat, messages, fetchActiveChats, fetchMessages]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!messageText.trim() || !currentChat) return;\n    try {\n      setSending(true);\n      setSendError(null);\n      await sendMessage(currentChat.id, messageText);\n      setMessageText('');\n\n      // If we successfully sent a message, the chat must be active\n      setLocalChatState({\n        isActive: true,\n        hasJoined: true,\n        isReady: true\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Failed to send message:', error);\n      setSendError('Failed to send message: ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message));\n\n      // Clear error after 5 seconds\n      setTimeout(() => setSendError(null), 5000);\n    } finally {\n      setSending(false);\n    }\n  };\n  if (!currentChat) return null;\n  const otherUser = currentChat.otherParticipants && currentChat.otherParticipants[0];\n  // Use the local state which may override the current chat state\n  const isActive = localChatState.isActive || messages && messages.length > 0;\n  const isReady = localChatState.isReady || messages && messages.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-dialog\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-title\",\n        children: [otherUser ? otherUser.username : 'Chat', !isActive && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chat-status-pill\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), isActive && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chat-status-pill active\",\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: closeChat,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), !isReady && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-pending-banner\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faInfoCircle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), \"Checking chat status...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this), isReady && messages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-active-banner\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCheck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), \"Chat is active. You can now send messages.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.length > 0 ? messages.map(msg => {\n        var _currentChat$otherPar, _msg$profiles;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.user_id === ((_currentChat$otherPar = currentChat.otherParticipants[0]) === null || _currentChat$otherPar === void 0 ? void 0 : _currentChat$otherPar.id) ? 'received' : 'sent'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-info\",\n            children: [((_msg$profiles = msg.profiles) === null || _msg$profiles === void 0 ? void 0 : _msg$profiles.username) || 'User', \" \\xB7 \", new Date(msg.created_at).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-messages\",\n        children: isReady ? \"No messages yet. Start the conversation!\" : \"Waiting for chat to activate. Messages will appear here once both users have joined.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), chatStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-dialog-status ${chatStatus.type}`,\n      children: chatStatus.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this), sendError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-dialog-status error\",\n      children: sendError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chat-input\",\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messageText,\n        onChange: e => setMessageText(e.target.value),\n        placeholder: isReady ? \"Type your message...\" : \"Waiting for chat to activate...\",\n        disabled: sending || !isReady\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: sending || !messageText.trim() || !isReady,\n        className: isReady ? \"active\" : \"\",\n        children: sending ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSpinner,\n          className: \"fa-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPaperPlane\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatDialog, \"feJ8xu8U71qcoEbzLWAcAfFpLAc=\");\n_c = ChatDialog;\nexport default ChatDialog;\nvar _c;\n$RefreshReg$(_c, \"ChatDialog\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","ChatContext","FontAwesomeIcon","faTimes","faPaperPlane","faSpinner","faInfoCircle","faCheck","jsxDEV","_jsxDEV","ChatDialog","_s","currentChat","messages","sendMessage","closeChat","fetchMessages","chatStatus","fetchActiveChats","messageText","setMessageText","sending","setSending","sendError","setSendError","localChatState","setLocalChatState","isActive","hasJoined","isReady","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","console","log","forceActive","length","then","updatedChats","updatedChat","find","c","id","checkInterval","setInterval","clearInterval","messagePollingId","handleSendMessage","e","preventDefault","trim","error","_error$response","_error$response$data","response","data","message","setTimeout","otherUser","otherParticipants","className","children","username","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","map","msg","_currentChat$otherPar","_msg$profiles","user_id","profiles","Date","created_at","toLocaleTimeString","hour","minute","ref","type","onSubmit","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/home/anubhav/project_6/auth-system/frontend/src/components/ChatDialog.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { ChatContext } from '../context/ChatContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faPaperPlane, faSpinner, faInfoCircle, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport './ChatDialog.css';\n\nconst ChatDialog = () => {\n  const { \n    currentChat, \n    messages, \n    sendMessage, \n    closeChat, \n    fetchMessages,\n    chatStatus,\n    fetchActiveChats\n  } = useContext(ChatContext);\n  \n  const [messageText, setMessageText] = useState('');\n  const [sending, setSending] = useState(false);\n  const [sendError, setSendError] = useState(null);\n  const [localChatState, setLocalChatState] = useState({\n    isActive: false,\n    hasJoined: false,\n    isReady: false\n  });\n  const messagesEndRef = useRef(null);\n  \n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n  \n  // Effect to scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  \n  // Effect to check and update chat status\n  useEffect(() => {\n    if (!currentChat) return;\n    \n    console.log('Current chat state:', currentChat);\n    \n    // Force active if we already have messages (a reliable indicator of an active chat)\n    const forceActive = messages && messages.length > 0;\n    \n    // Update local state based on current chat and message presence\n    setLocalChatState({\n      isActive: forceActive || currentChat.isActive,\n      hasJoined: forceActive || currentChat.hasJoined,\n      isReady: forceActive || (currentChat.isActive && currentChat.hasJoined)\n    });\n    \n    // If chat appears inactive but we have messages, refresh chat status\n    if (!currentChat.isActive && messages && messages.length > 0) {\n      console.log('Chat appears active (has messages) but status shows inactive. Refreshing...');\n      fetchActiveChats(true).then(updatedChats => {\n        const updatedChat = updatedChats.find(c => c.id === currentChat.id);\n        if (updatedChat) {\n          console.log('Updated chat status:', updatedChat);\n          if (updatedChat.isActive) {\n            setLocalChatState({\n              isActive: true,\n              hasJoined: true,\n              isReady: true\n            });\n          }\n        }\n      });\n    }\n    \n    // Set up polling to check status if needed\n    let checkInterval;\n    \n    if (!currentChat.isActive || !currentChat.hasJoined) {\n      console.log('Setting up status polling for chat room', currentChat.id);\n      \n      checkInterval = setInterval(() => {\n        fetchActiveChats(true).then(updatedChats => {\n          const updatedChat = updatedChats.find(c => c.id === currentChat.id);\n          if (updatedChat && (updatedChat.isActive || messages.length > 0)) {\n            console.log('Updated chat status:', updatedChat);\n            setLocalChatState({\n              isActive: true,\n              hasJoined: true, \n              isReady: true\n            });\n            clearInterval(checkInterval);\n          }\n        });\n      }, 3000);\n    }\n    \n    // Regular message polling\n    const messagePollingId = setInterval(() => {\n      fetchMessages(currentChat.id);\n    }, 5000);\n    \n    return () => {\n      if (checkInterval) clearInterval(checkInterval);\n      clearInterval(messagePollingId);\n    };\n  }, [currentChat, messages, fetchActiveChats, fetchMessages]);\n  \n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    \n    if (!messageText.trim() || !currentChat) return;\n    \n    try {\n      setSending(true);\n      setSendError(null);\n      await sendMessage(currentChat.id, messageText);\n      setMessageText('');\n      \n      // If we successfully sent a message, the chat must be active\n      setLocalChatState({\n        isActive: true,\n        hasJoined: true,\n        isReady: true\n      });\n    } catch (error) {\n      console.error('Failed to send message:', error);\n      setSendError('Failed to send message: ' + (error.response?.data?.message || error.message));\n      \n      // Clear error after 5 seconds\n      setTimeout(() => setSendError(null), 5000);\n    } finally {\n      setSending(false);\n    }\n  };\n  \n  if (!currentChat) return null;\n  \n  const otherUser = currentChat.otherParticipants && currentChat.otherParticipants[0];\n  // Use the local state which may override the current chat state\n  const isActive = localChatState.isActive || (messages && messages.length > 0);\n  const isReady = localChatState.isReady || (messages && messages.length > 0);\n  \n  return (\n    <div className=\"chat-dialog\">\n      <div className=\"chat-header\">\n        <div className=\"chat-title\">\n          {otherUser ? otherUser.username : 'Chat'}\n          {!isActive && <span className=\"chat-status-pill\">Pending</span>}\n          {isActive && <span className=\"chat-status-pill active\">Active</span>}\n        </div>\n        <button className=\"close-button\" onClick={closeChat}>\n          <FontAwesomeIcon icon={faTimes} />\n        </button>\n      </div>\n      \n      {!isReady && (\n        <div className=\"chat-pending-banner\">\n          <FontAwesomeIcon icon={faInfoCircle} />\n          Checking chat status...\n        </div>\n      )}\n      \n      {isReady && messages.length > 0 && (\n        <div className=\"chat-active-banner\">\n          <FontAwesomeIcon icon={faCheck} />\n          Chat is active. You can now send messages.\n        </div>\n      )}\n      \n      <div className=\"chat-messages\">\n        {messages.length > 0 ? (\n          messages.map((msg) => (\n            <div \n              key={msg.id} \n              className={`message ${msg.user_id === currentChat.otherParticipants[0]?.id ? 'received' : 'sent'}`}\n            >\n              <div className=\"message-bubble\">\n                {msg.message}\n              </div>\n              <div className=\"message-info\">\n                {msg.profiles?.username || 'User'} · {new Date(msg.created_at).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"no-messages\">\n            {isReady\n              ? \"No messages yet. Start the conversation!\"\n              : \"Waiting for chat to activate. Messages will appear here once both users have joined.\"}\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n      \n      {chatStatus && (\n        <div className={`chat-dialog-status ${chatStatus.type}`}>\n          {chatStatus.message}\n        </div>\n      )}\n      \n      {sendError && (\n        <div className=\"chat-dialog-status error\">\n          {sendError}\n        </div>\n      )}\n      \n      <form className=\"chat-input\" onSubmit={handleSendMessage}>\n        <input\n          type=\"text\"\n          value={messageText}\n          onChange={(e) => setMessageText(e.target.value)}\n          placeholder={isReady \n            ? \"Type your message...\" \n            : \"Waiting for chat to activate...\"}\n          disabled={sending || !isReady}\n        />\n        <button \n          type=\"submit\" \n          disabled={sending || !messageText.trim() || !isReady}\n          className={isReady ? \"active\" : \"\"}\n        >\n          {sending ? (\n            <FontAwesomeIcon icon={faSpinner} className=\"fa-spin\" />\n          ) : (\n            <FontAwesomeIcon icon={faPaperPlane} />\n          )}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatDialog;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}