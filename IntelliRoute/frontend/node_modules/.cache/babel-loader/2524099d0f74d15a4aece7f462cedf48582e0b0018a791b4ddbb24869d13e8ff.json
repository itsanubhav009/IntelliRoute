{"ast":null,"code":"var _jsxFileName = \"/home/anubhav/project_6/auth-system/frontend/src/components/ChatDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { ChatContext } from '../context/ChatContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faPaperPlane, faSpinner, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport './ChatDialog.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatDialog = () => {\n  _s();\n  const {\n    currentChat,\n    messages,\n    sendMessage,\n    closeChat,\n    fetchMessages,\n    chatStatus,\n    fetchActiveChats\n  } = useContext(ChatContext);\n  const [messageText, setMessageText] = useState('');\n  const [sending, setSending] = useState(false);\n  const [sendError, setSendError] = useState(null);\n  const messagesEndRef = useRef(null);\n  const pollingRef = useRef(null);\n\n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Effect to scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Effect to check if the chat is active\n  useEffect(() => {\n    if (currentChat) {\n      // Initial check if the chat is active\n      if (!currentChat.isActive) {\n        console.log('Chat is not active. Setting up polling to check status...');\n\n        // Start polling for chat status\n        const pollChatStatus = async () => {\n          try {\n            const updatedChats = await fetchActiveChats(true);\n            const updatedChat = updatedChats.find(c => c.id === currentChat.id);\n            if (updatedChat && updatedChat.isActive) {\n              console.log('Chat is now active!');\n              // Stop polling once active\n              clearInterval(pollingRef.current);\n              pollingRef.current = null;\n\n              // Refresh messages since the chat is now active\n              fetchMessages(currentChat.id, true);\n            }\n          } catch (error) {\n            console.error('Error polling chat status:', error);\n          }\n        };\n\n        // Poll every 2 seconds\n        pollingRef.current = setInterval(pollChatStatus, 2000);\n\n        // Initial poll\n        pollChatStatus();\n      } else {\n        // Chat is already active, start regular message polling\n        const messagePollingId = setInterval(() => {\n          fetchMessages(currentChat.id);\n        }, 5000);\n        return () => clearInterval(messagePollingId);\n      }\n\n      // Cleanup\n      return () => {\n        if (pollingRef.current) {\n          clearInterval(pollingRef.current);\n          pollingRef.current = null;\n        }\n      };\n    }\n  }, [currentChat, fetchActiveChats, fetchMessages]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!messageText.trim() || !currentChat) return;\n    try {\n      setSending(true);\n      setSendError(null);\n      await sendMessage(currentChat.id, messageText);\n      setMessageText('');\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      console.error('Failed to send message:', error);\n\n      // Set specific error messages based on the error\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error_code) === 'CHAT_INACTIVE') {\n        setSendError('The chat is not active yet. Please wait for activation.');\n      } else if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error_code) === 'NOT_JOINED') {\n        setSendError('You have not joined this chat. Please refresh and try again.');\n      } else {\n        var _error$response3, _error$response3$data;\n        setSendError('Failed to send message: ' + (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message));\n      }\n\n      // Clear error after 5 seconds\n      setTimeout(() => setSendError(null), 5000);\n    } finally {\n      setSending(false);\n    }\n  };\n  if (!currentChat) return null;\n  const otherUser = currentChat.otherParticipants && currentChat.otherParticipants[0];\n  const isActive = currentChat.isActive;\n  const hasJoined = currentChat.hasJoined;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-dialog\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-title\",\n        children: [otherUser ? otherUser.username : 'Chat', !isActive && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chat-status-pill\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: closeChat,\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTimes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), (!isActive || !hasJoined) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-pending-banner\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faInfoCircle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), !isActive ? \"Waiting for chat to become active. Both users need to accept the chat request.\" : \"You need to join this chat before sending messages.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.length > 0 ? messages.map(msg => {\n        var _currentChat$otherPar, _msg$profiles;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.user_id === ((_currentChat$otherPar = currentChat.otherParticipants[0]) === null || _currentChat$otherPar === void 0 ? void 0 : _currentChat$otherPar.id) ? 'received' : 'sent'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-info\",\n            children: [((_msg$profiles = msg.profiles) === null || _msg$profiles === void 0 ? void 0 : _msg$profiles.username) || 'User', \" \\xB7 \", new Date(msg.created_at).toLocaleTimeString([], {\n              hour: '2-digit',\n              minute: '2-digit'\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-messages\",\n        children: isActive && hasJoined ? \"No messages yet. Start the conversation!\" : \"Waiting for chat to become active. Messages will appear here once both users have joined.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), chatStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-dialog-status ${chatStatus.type}`,\n      children: chatStatus.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this), sendError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-dialog-status error\",\n      children: sendError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chat-input\",\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messageText,\n        onChange: e => setMessageText(e.target.value),\n        placeholder: isActive && hasJoined ? \"Type your message...\" : \"Waiting for chat to be activated...\",\n        disabled: sending || !isActive || !hasJoined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: sending || !messageText.trim() || !isActive || !hasJoined,\n        children: sending ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSpinner,\n          className: \"fa-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPaperPlane\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatDialog, \"xjLPl9yeOr635Kbk9xWbl0FTohI=\");\n_c = ChatDialog;\nexport default ChatDialog;\nvar _c;\n$RefreshReg$(_c, \"ChatDialog\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","ChatContext","FontAwesomeIcon","faTimes","faPaperPlane","faSpinner","faInfoCircle","jsxDEV","_jsxDEV","ChatDialog","_s","currentChat","messages","sendMessage","closeChat","fetchMessages","chatStatus","fetchActiveChats","messageText","setMessageText","sending","setSending","sendError","setSendError","messagesEndRef","pollingRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","isActive","console","log","pollChatStatus","updatedChats","updatedChat","find","c","id","clearInterval","error","setInterval","messagePollingId","handleSendMessage","e","preventDefault","trim","_error$response","_error$response$data","_error$response2","_error$response2$data","response","data","error_code","_error$response3","_error$response3$data","message","setTimeout","otherUser","otherParticipants","hasJoined","className","children","username","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","length","map","msg","_currentChat$otherPar","_msg$profiles","user_id","profiles","Date","created_at","toLocaleTimeString","hour","minute","ref","type","onSubmit","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/home/anubhav/project_6/auth-system/frontend/src/components/ChatDialog.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { ChatContext } from '../context/ChatContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes, faPaperPlane, faSpinner, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport './ChatDialog.css';\n\nconst ChatDialog = () => {\n  const { \n    currentChat, \n    messages, \n    sendMessage, \n    closeChat, \n    fetchMessages,\n    chatStatus,\n    fetchActiveChats\n  } = useContext(ChatContext);\n  \n  const [messageText, setMessageText] = useState('');\n  const [sending, setSending] = useState(false);\n  const [sendError, setSendError] = useState(null);\n  const messagesEndRef = useRef(null);\n  const pollingRef = useRef(null);\n  \n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n  \n  // Effect to scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  \n  // Effect to check if the chat is active\n  useEffect(() => {\n    if (currentChat) {\n      // Initial check if the chat is active\n      if (!currentChat.isActive) {\n        console.log('Chat is not active. Setting up polling to check status...');\n        \n        // Start polling for chat status\n        const pollChatStatus = async () => {\n          try {\n            const updatedChats = await fetchActiveChats(true);\n            const updatedChat = updatedChats.find(c => c.id === currentChat.id);\n            \n            if (updatedChat && updatedChat.isActive) {\n              console.log('Chat is now active!');\n              // Stop polling once active\n              clearInterval(pollingRef.current);\n              pollingRef.current = null;\n              \n              // Refresh messages since the chat is now active\n              fetchMessages(currentChat.id, true);\n            }\n          } catch (error) {\n            console.error('Error polling chat status:', error);\n          }\n        };\n        \n        // Poll every 2 seconds\n        pollingRef.current = setInterval(pollChatStatus, 2000);\n        \n        // Initial poll\n        pollChatStatus();\n      } else {\n        // Chat is already active, start regular message polling\n        const messagePollingId = setInterval(() => {\n          fetchMessages(currentChat.id);\n        }, 5000);\n        \n        return () => clearInterval(messagePollingId);\n      }\n      \n      // Cleanup\n      return () => {\n        if (pollingRef.current) {\n          clearInterval(pollingRef.current);\n          pollingRef.current = null;\n        }\n      };\n    }\n  }, [currentChat, fetchActiveChats, fetchMessages]);\n  \n  const handleSendMessage = async (e) => {\n    e.preventDefault();\n    \n    if (!messageText.trim() || !currentChat) return;\n    \n    try {\n      setSending(true);\n      setSendError(null);\n      await sendMessage(currentChat.id, messageText);\n      setMessageText('');\n    } catch (error) {\n      console.error('Failed to send message:', error);\n      \n      // Set specific error messages based on the error\n      if (error.response?.data?.error_code === 'CHAT_INACTIVE') {\n        setSendError('The chat is not active yet. Please wait for activation.');\n      } else if (error.response?.data?.error_code === 'NOT_JOINED') {\n        setSendError('You have not joined this chat. Please refresh and try again.');\n      } else {\n        setSendError('Failed to send message: ' + (error.response?.data?.message || error.message));\n      }\n      \n      // Clear error after 5 seconds\n      setTimeout(() => setSendError(null), 5000);\n    } finally {\n      setSending(false);\n    }\n  };\n  \n  if (!currentChat) return null;\n  \n  const otherUser = currentChat.otherParticipants && currentChat.otherParticipants[0];\n  const isActive = currentChat.isActive;\n  const hasJoined = currentChat.hasJoined;\n  \n  return (\n    <div className=\"chat-dialog\">\n      <div className=\"chat-header\">\n        <div className=\"chat-title\">\n          {otherUser ? otherUser.username : 'Chat'}\n          {!isActive && <span className=\"chat-status-pill\">Pending</span>}\n        </div>\n        <button className=\"close-button\" onClick={closeChat}>\n          <FontAwesomeIcon icon={faTimes} />\n        </button>\n      </div>\n      \n      {(!isActive || !hasJoined) && (\n        <div className=\"chat-pending-banner\">\n          <FontAwesomeIcon icon={faInfoCircle} />\n          {!isActive \n            ? \"Waiting for chat to become active. Both users need to accept the chat request.\"\n            : \"You need to join this chat before sending messages.\"}\n        </div>\n      )}\n      \n      <div className=\"chat-messages\">\n        {messages.length > 0 ? (\n          messages.map((msg) => (\n            <div \n              key={msg.id} \n              className={`message ${msg.user_id === currentChat.otherParticipants[0]?.id ? 'received' : 'sent'}`}\n            >\n              <div className=\"message-bubble\">\n                {msg.message}\n              </div>\n              <div className=\"message-info\">\n                {msg.profiles?.username || 'User'} · {new Date(msg.created_at).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}\n              </div>\n            </div>\n          ))\n        ) : (\n          <div className=\"no-messages\">\n            {isActive && hasJoined\n              ? \"No messages yet. Start the conversation!\"\n              : \"Waiting for chat to become active. Messages will appear here once both users have joined.\"}\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n      \n      {chatStatus && (\n        <div className={`chat-dialog-status ${chatStatus.type}`}>\n          {chatStatus.message}\n        </div>\n      )}\n      \n      {sendError && (\n        <div className=\"chat-dialog-status error\">\n          {sendError}\n        </div>\n      )}\n      \n      <form className=\"chat-input\" onSubmit={handleSendMessage}>\n        <input\n          type=\"text\"\n          value={messageText}\n          onChange={(e) => setMessageText(e.target.value)}\n          placeholder={isActive && hasJoined \n            ? \"Type your message...\" \n            : \"Waiting for chat to be activated...\"}\n          disabled={sending || !isActive || !hasJoined}\n        />\n        <button \n          type=\"submit\" \n          disabled={sending || !messageText.trim() || !isActive || !hasJoined}\n        >\n          {sending ? (\n            <FontAwesomeIcon icon={faSpinner} className=\"fa-spin\" />\n          ) : (\n            <FontAwesomeIcon icon={faPaperPlane} />\n          )}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatDialog;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}