{"ast":null,"code":"var _jsxFileName = \"/home/anubhav/project_6/auth-system/frontend/src/components/UserLocationMap.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState, useContext, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, useMap, useMapEvents } from 'react-leaflet';\nimport { LocationContext } from '../context/LocationContext';\nimport { AuthContext } from '../context/AuthContext';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './UserLocationMap.css';\nimport { ChatContext } from '../context/ChatContext';\nimport ChatDialog from './ChatDialog';\nimport NotificationsPanel from './NotificationsPanel';\n// Fix for default icons\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41]\n});\nconst {\n  sendChatRequest,\n  notifications,\n  currentChat,\n  openChat\n} = useContext(ChatContext);\nconst [showNotifications, setShowNotifications] = useState(false);\nL.Marker.prototype.options.icon = DefaultIcon;\nconst handleChatRequest = userId => {\n  if (userId === user.id) {\n    // Don't allow chatting with yourself\n    return;\n  }\n  sendChatRequest(userId).then(response => {\n    console.log('Chat request sent successfully:', response);\n  }).catch(error => {\n    console.error('Failed to send chat request:', error);\n  });\n};\n\n// Create custom icons\nconst createCustomIcon = color => {\n  return L.divIcon({\n    className: 'custom-div-icon',\n    html: `<div class=\"marker-pin\" style=\"background-color: ${color};\"></div>`,\n    iconSize: [30, 42],\n    iconAnchor: [15, 42]\n  });\n};\n\n// Helper to parse route data from PostGIS or OSRM\nconst parseRouteData = routeData => {\n  if (!routeData) return [];\n\n  // LINESTRING parsing\n  if (typeof routeData === 'string' && routeData.startsWith('LINESTRING')) {\n    try {\n      // Extract coordinates from LINESTRING(lng lat, lng lat, ...)\n      const coordsStr = routeData.substring(routeData.indexOf('(') + 1, routeData.lastIndexOf(')'));\n      return coordsStr.split(',').map(pair => {\n        const [lng, lat] = pair.trim().split(' ').map(parseFloat);\n        // Return [lat, lng] for Leaflet\n        return [lat, lng];\n      });\n    } catch (e) {\n      console.error('Error parsing LINESTRING:', e, routeData);\n      return [];\n    }\n  }\n\n  // If it's already an array, return it (assuming it's in Leaflet's [lat, lng] format)\n  if (Array.isArray(routeData)) {\n    return routeData;\n  }\n  return [];\n};\n\n// Component to update map bounds based on users' positions and routes\nfunction MapBoundsUpdater({\n  users,\n  paths\n}) {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    if (!users.length && !paths.length) return;\n    try {\n      const points = [];\n\n      // Add user points\n      users.forEach(user => {\n        if (user.latitude && user.longitude) {\n          points.push([user.latitude, user.longitude]);\n        }\n      });\n\n      // Add path points (with better handling for complex routes)\n      paths.forEach(path => {\n        if (path.parsedRoute && Array.isArray(path.parsedRoute)) {\n          // Don't add every point - just add first, last, and some in between\n          // to avoid overloading the bounds calculation with too many points\n          const routePoints = path.parsedRoute;\n          if (routePoints.length > 0) {\n            points.push(routePoints[0]); // Add first point\n\n            if (routePoints.length > 10) {\n              // Add a few points in the middle for long routes\n              points.push(routePoints[Math.floor(routePoints.length / 3)]);\n              points.push(routePoints[Math.floor(routePoints.length * 2 / 3)]);\n            }\n            if (routePoints.length > 1) {\n              points.push(routePoints[routePoints.length - 1]); // Add last point\n            }\n          }\n        }\n      });\n      if (points.length > 0) {\n        const bounds = L.latLngBounds(points);\n        map.fitBounds(bounds, {\n          padding: [50, 50]\n        });\n      }\n    } catch (error) {\n      console.error('Error updating map bounds:', error);\n    }\n  }, [users, paths, map]);\n  return null;\n}\n\n// Component to handle map clicks for route creation\n_s(MapBoundsUpdater, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = MapBoundsUpdater;\nfunction MapClickHandler({\n  routeMode,\n  selectedSource,\n  setSelectedSource,\n  createPath\n}) {\n  _s2();\n  useMapEvents({\n    click: e => {\n      if (!routeMode) return;\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      if (!selectedSource) {\n        // Set source\n        setSelectedSource({\n          lat,\n          lng\n        });\n      } else {\n        // Set destination and create path\n        const destination = {\n          lat,\n          lng\n        };\n        createPath(selectedSource, destination);\n\n        // Reset route mode (this will be handled by parent component)\n      }\n    }\n  });\n  return null;\n}\n_s2(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c2 = MapClickHandler;\nconst UserLocationMap = () => {\n  _s3();\n  const {\n    liveUsers,\n    fetchLiveUsers,\n    livePaths,\n    fetchLivePaths,\n    createPath\n  } = useContext(LocationContext);\n  const {\n    user\n  } = useContext(AuthContext);\n  const [usersWithLocation, setUsersWithLocation] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastUpdated, setLastUpdated] = useState(new Date());\n  const [pathsWithCoordinates, setPathsWithCoordinates] = useState([]);\n  const [routeMode, setRouteMode] = useState(false);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const mapRef = useRef(null);\n\n  // Replace your existing useEffect for data loading:\n\n  useEffect(() => {\n    let isMounted = true;\n    const loadMapData = async () => {\n      if (!isMounted || isLoading) return;\n      console.log(`Map data refresh at ${new Date().toLocaleTimeString()}`);\n      try {\n        // Only update if too much time has passed since last update\n        const timeSinceUpdate = new Date() - lastUpdated;\n        if (timeSinceUpdate > 25000) {\n          // 25 seconds minimum\n          setIsLoading(true);\n          await fetchLiveUsers();\n          await fetchLivePaths();\n          setLastUpdated(new Date());\n        } else {\n          console.log(`Skipping refresh - only ${Math.round(timeSinceUpdate / 1000)}s since last update`);\n        }\n      } catch (error) {\n        console.error('Error refreshing map data:', error);\n      } finally {\n        if (isMounted) {\n          setIsLoading(false);\n        }\n      }\n    };\n\n    // Initial load\n    loadMapData();\n\n    // Set up a controlled interval with a single timer\n    // Use 30 seconds to reduce server load\n    const intervalId = setInterval(loadMapData, 30000);\n    return () => {\n      isMounted = false;\n      clearInterval(intervalId);\n    };\n  }, [fetchLiveUsers, fetchLivePaths, lastUpdated]);\n  useEffect(() => {\n    if (liveUsers) {\n      const filtered = liveUsers.filter(u => u.latitude && u.longitude);\n      setUsersWithLocation(filtered);\n    }\n  }, [liveUsers]);\n  useEffect(() => {\n    if (livePaths) {\n      const parsed = livePaths.map(path => ({\n        ...path,\n        parsedRoute: parseRouteData(path.route)\n      })).filter(path => path.parsedRoute.length > 0);\n      setPathsWithCoordinates(parsed);\n    }\n  }, [livePaths]);\n  const toggleRouteMode = () => {\n    setRouteMode(!routeMode);\n    if (routeMode) {\n      // If turning off, clear selected source\n      setSelectedSource(null);\n    }\n  };\n  const handleCreatePath = (source, destination) => {\n    createPath(source, destination);\n    setRouteMode(false);\n    setSelectedSource(null);\n  };\n  const formatTime = date => {\n    if (!(date instanceof Date)) {\n      try {\n        date = new Date(date);\n      } catch (e) {\n        return 'Unknown';\n      }\n    }\n    return date.toLocaleTimeString();\n  };\n  if (isLoading && usersWithLocation.length === 0 && pathsWithCoordinates.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-loading\",\n      children: \"Loading map...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Calculate center point for map display or use a default\n  let centerLat = 0,\n    centerLng = 0;\n  if (usersWithLocation.length > 0) {\n    centerLat = usersWithLocation.reduce((sum, u) => sum + u.latitude, 0) / usersWithLocation.length;\n    centerLng = usersWithLocation.reduce((sum, u) => sum + u.longitude, 0) / usersWithLocation.length;\n  } else {\n    // Default to a central location if no users\n    centerLat = 0;\n    centerLng = 0;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Live User Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `route-button ${routeMode ? 'active' : ''}`,\n          onClick: toggleRouteMode,\n          children: routeMode ? 'Cancel Route' : 'Create Route'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), routeMode && !selectedSource && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-instructions\",\n          children: \"Click on map to set starting point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), routeMode && selectedSource && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-instructions\",\n          children: \"Click on map to set destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"last-updated\",\n          children: [\"Last updated: \", formatTime(lastUpdated)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"notification-button\",\n            onClick: () => setShowNotifications(!showNotifications),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-bell\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 9\n            }, this), notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"notification-badge\",\n              children: notifications.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 7\n          }, this), showNotifications && /*#__PURE__*/_jsxDEV(NotificationsPanel, {\n            onClose: () => setShowNotifications(false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [centerLat, centerLng],\n      zoom: 3,\n      style: {\n        height: '600px',\n        width: '100%'\n      },\n      ref: mapRef,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapClickHandler, {\n        routeMode: routeMode,\n        selectedSource: selectedSource,\n        setSelectedSource: setSelectedSource,\n        createPath: handleCreatePath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), usersWithLocation.map(u => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [u.latitude, u.longitude],\n        icon: createCustomIcon(u.id === (user === null || user === void 0 ? void 0 : user.id) ? '#4285F4' : '#FF5722'),\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-popup\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: u.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-status\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 11\n              }, this), \"Online\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-location\",\n              children: [\"Coordinates: \", parseFloat(u.latitude).toFixed(4), \", \", parseFloat(u.longitude).toFixed(4)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-last-active\",\n              children: [\"Last active: \", formatTime(u.last_active)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 9\n            }, this), u.id === (user === null || user === void 0 ? void 0 : user.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"current-user-tag\",\n              children: \"This is you\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 11\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-button-container\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chat-request-button\",\n                onClick: () => handleChatRequest(u.id),\n                children: [\"Chat with \", u.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 5\n        }, this)\n      }, `user-${u.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 3\n      }, this)), routeMode && selectedSource && /*#__PURE__*/_jsxDEV(Marker, {\n        position: [selectedSource.lat, selectedSource.lng],\n        icon: createCustomIcon('#00C853'),\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"Starting point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 11\n      }, this), pathsWithCoordinates.map((path, idx) => /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: path.parsedRoute,\n        color: path.user_id === (user === null || user === void 0 ? void 0 : user.id) ? '#2196F3' : '#FF5722',\n        weight: 4,\n        opacity: 0.7,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"path-popup\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Route Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"User:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 20\n              }, this), \" \", path.username || 'Unknown']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Created:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 20\n              }, this), \" \", formatTime(path.created_at)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this), path.parsedRoute.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"From:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 24\n                }, this), \" \", path.parsedRoute[0][0].toFixed(4), \", \", path.parsedRoute[0][1].toFixed(4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"To:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 24\n                }, this), \" \", path.parsedRoute[path.parsedRoute.length - 1][0].toFixed(4), \", \", path.parsedRoute[path.parsedRoute.length - 1][1].toFixed(4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Points:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 24\n                }, this), \" \", path.parsedRoute.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }, this)\n      }, `path-${path.id || idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(MapBoundsUpdater, {\n        users: usersWithLocation,\n        paths: pathsWithCoordinates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-legend\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Map Legend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-items\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-marker\",\n            style: {\n              backgroundColor: '#4285F4'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Your location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-marker\",\n            style: {\n              backgroundColor: '#FF5722'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Other users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-line\",\n            style: {\n              backgroundColor: '#2196F3'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Your paths\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-line\",\n            style: {\n              backgroundColor: '#FF5722'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Other users' paths\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), routeMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-marker\",\n            style: {\n              backgroundColor: '#00C853'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Selected starting point\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-info-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Active Users:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this), \" \", usersWithLocation.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Active Paths:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 13\n          }, this), \" \", pathsWithCoordinates.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Last Updated:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this), \" \", formatTime(lastUpdated)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), pathsWithCoordinates.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recent-paths\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Recent Paths\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paths-list\",\n          children: pathsWithCoordinates.slice(0, 5).map((path, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"path-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"path-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: path.username || 'Unknown user'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatTime(path.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"path-details\",\n              children: path.parsedRoute.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [\"From: \", path.parsedRoute[0][0].toFixed(4), \", \", path.parsedRoute[0][1].toFixed(4)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [\"To: \", path.parsedRoute[path.parsedRoute.length - 1][0].toFixed(4), \", \", path.parsedRoute[path.parsedRoute.length - 1][1].toFixed(4)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: [\"Route Points: \", path.parsedRoute.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 19\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this), currentChat && /*#__PURE__*/_jsxDEV(ChatDialog, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n};\n_s3(UserLocationMap, \"0HrCTNT000YMtTsNI1qXIF9GKiw=\");\n_c3 = UserLocationMap;\nexport default UserLocationMap;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MapBoundsUpdater\");\n$RefreshReg$(_c2, \"MapClickHandler\");\n$RefreshReg$(_c3, \"UserLocationMap\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useRef","MapContainer","TileLayer","Marker","Popup","Polyline","useMap","useMapEvents","LocationContext","AuthContext","L","ChatContext","ChatDialog","NotificationsPanel","icon","iconShadow","jsxDEV","_jsxDEV","Fragment","_Fragment","DefaultIcon","iconUrl","shadowUrl","iconSize","iconAnchor","sendChatRequest","notifications","currentChat","openChat","showNotifications","setShowNotifications","prototype","options","handleChatRequest","userId","user","id","then","response","console","log","catch","error","createCustomIcon","color","divIcon","className","html","parseRouteData","routeData","startsWith","coordsStr","substring","indexOf","lastIndexOf","split","map","pair","lng","lat","trim","parseFloat","e","Array","isArray","MapBoundsUpdater","users","paths","_s","length","points","forEach","latitude","longitude","push","path","parsedRoute","routePoints","Math","floor","bounds","latLngBounds","fitBounds","padding","_c","MapClickHandler","routeMode","selectedSource","setSelectedSource","createPath","_s2","click","latlng","destination","_c2","UserLocationMap","_s3","liveUsers","fetchLiveUsers","livePaths","fetchLivePaths","usersWithLocation","setUsersWithLocation","isLoading","setIsLoading","lastUpdated","setLastUpdated","Date","pathsWithCoordinates","setPathsWithCoordinates","setRouteMode","mapRef","isMounted","loadMapData","toLocaleTimeString","timeSinceUpdate","round","intervalId","setInterval","clearInterval","filtered","filter","u","parsed","route","toggleRouteMode","handleCreatePath","source","formatTime","date","children","fileName","_jsxFileName","lineNumber","columnNumber","centerLat","centerLng","reduce","sum","onClick","onClose","center","zoom","style","height","width","ref","attribution","url","position","username","toFixed","last_active","idx","positions","user_id","weight","opacity","created_at","backgroundColor","slice","_c3","$RefreshReg$"],"sources":["/home/anubhav/project_6/auth-system/frontend/src/components/UserLocationMap.js"],"sourcesContent":["import React, { useEffect, useState, useContext, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, useMap, useMapEvents } from 'react-leaflet';\nimport { LocationContext } from '../context/LocationContext';\nimport { AuthContext } from '../context/AuthContext';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './UserLocationMap.css';\nimport { ChatContext } from '../context/ChatContext';\nimport ChatDialog from './ChatDialog';\nimport NotificationsPanel from './NotificationsPanel';\n// Fix for default icons\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\n\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41]\n});\n\n\nconst { \n  sendChatRequest, \n  notifications, \n  currentChat, \n  openChat \n} = useContext(ChatContext);\n\nconst [showNotifications, setShowNotifications] = useState(false);\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\nconst handleChatRequest = (userId) => {\n  if (userId === user.id) {\n    // Don't allow chatting with yourself\n    return;\n  }\n  \n  sendChatRequest(userId)\n    .then((response) => {\n      console.log('Chat request sent successfully:', response);\n    })\n    .catch((error) => {\n      console.error('Failed to send chat request:', error);\n    });\n};\n\n// Create custom icons\nconst createCustomIcon = (color) => {\n  return L.divIcon({\n    className: 'custom-div-icon',\n    html: `<div class=\"marker-pin\" style=\"background-color: ${color};\"></div>`,\n    iconSize: [30, 42],\n    iconAnchor: [15, 42]\n  });\n};\n\n// Helper to parse route data from PostGIS or OSRM\nconst parseRouteData = (routeData) => {\n  if (!routeData) return [];\n  \n  // LINESTRING parsing\n  if (typeof routeData === 'string' && routeData.startsWith('LINESTRING')) {\n    try {\n      // Extract coordinates from LINESTRING(lng lat, lng lat, ...)\n      const coordsStr = routeData.substring(routeData.indexOf('(') + 1, routeData.lastIndexOf(')'));\n      return coordsStr.split(',').map(pair => {\n        const [lng, lat] = pair.trim().split(' ').map(parseFloat);\n        // Return [lat, lng] for Leaflet\n        return [lat, lng]; \n      });\n    } catch (e) {\n      console.error('Error parsing LINESTRING:', e, routeData);\n      return [];\n    }\n  }\n  \n  // If it's already an array, return it (assuming it's in Leaflet's [lat, lng] format)\n  if (Array.isArray(routeData)) {\n    return routeData;\n  }\n  \n  return [];\n};\n\n// Component to update map bounds based on users' positions and routes\nfunction MapBoundsUpdater({ users, paths }) {\n  const map = useMap();\n  \n  useEffect(() => {\n    if (!users.length && !paths.length) return;\n    \n    try {\n      const points = [];\n      \n      // Add user points\n      users.forEach(user => {\n        if (user.latitude && user.longitude) {\n          points.push([user.latitude, user.longitude]);\n        }\n      });\n      \n      // Add path points (with better handling for complex routes)\n      paths.forEach(path => {\n        if (path.parsedRoute && Array.isArray(path.parsedRoute)) {\n          // Don't add every point - just add first, last, and some in between\n          // to avoid overloading the bounds calculation with too many points\n          const routePoints = path.parsedRoute;\n          if (routePoints.length > 0) {\n            points.push(routePoints[0]); // Add first point\n            \n            if (routePoints.length > 10) {\n              // Add a few points in the middle for long routes\n              points.push(routePoints[Math.floor(routePoints.length / 3)]);\n              points.push(routePoints[Math.floor(routePoints.length * 2 / 3)]);\n            }\n            \n            if (routePoints.length > 1) {\n              points.push(routePoints[routePoints.length - 1]); // Add last point\n            }\n          }\n        }\n      });\n      \n      if (points.length > 0) {\n        const bounds = L.latLngBounds(points);\n        map.fitBounds(bounds, { padding: [50, 50] });\n      }\n    } catch (error) {\n      console.error('Error updating map bounds:', error);\n    }\n  }, [users, paths, map]);\n  \n  return null;\n}\n\n// Component to handle map clicks for route creation\nfunction MapClickHandler({ routeMode, selectedSource, setSelectedSource, createPath }) {\n  useMapEvents({\n    click: (e) => {\n      if (!routeMode) return;\n      \n      const { lat, lng } = e.latlng;\n      \n      if (!selectedSource) {\n        // Set source\n        setSelectedSource({ lat, lng });\n      } else {\n        // Set destination and create path\n        const destination = { lat, lng };\n        createPath(selectedSource, destination);\n        \n        // Reset route mode (this will be handled by parent component)\n      }\n    }\n  });\n  \n  return null;\n}\n\nconst UserLocationMap = () => {\n  const { liveUsers, fetchLiveUsers, livePaths, fetchLivePaths, createPath } = useContext(LocationContext);\n  const { user } = useContext(AuthContext);\n  const [usersWithLocation, setUsersWithLocation] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastUpdated, setLastUpdated] = useState(new Date());\n  const [pathsWithCoordinates, setPathsWithCoordinates] = useState([]);\n  const [routeMode, setRouteMode] = useState(false);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const mapRef = useRef(null);\n\n  // Replace your existing useEffect for data loading:\n\nuseEffect(() => {\n  let isMounted = true;\n  \n  const loadMapData = async () => {\n    if (!isMounted || isLoading) return;\n    \n    console.log(`Map data refresh at ${new Date().toLocaleTimeString()}`);\n    \n    try {\n      // Only update if too much time has passed since last update\n      const timeSinceUpdate = new Date() - lastUpdated;\n      if (timeSinceUpdate > 25000) { // 25 seconds minimum\n        setIsLoading(true);\n        await fetchLiveUsers();\n        await fetchLivePaths();\n        setLastUpdated(new Date());\n      } else {\n        console.log(`Skipping refresh - only ${Math.round(timeSinceUpdate/1000)}s since last update`);\n      }\n    } catch (error) {\n      console.error('Error refreshing map data:', error);\n    } finally {\n      if (isMounted) {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  // Initial load\n  loadMapData();\n  \n  // Set up a controlled interval with a single timer\n  // Use 30 seconds to reduce server load\n  const intervalId = setInterval(loadMapData, 30000);\n  \n  return () => {\n    isMounted = false;\n    clearInterval(intervalId);\n  };\n}, [fetchLiveUsers, fetchLivePaths, lastUpdated]);\n\n  useEffect(() => {\n    if (liveUsers) {\n      const filtered = liveUsers.filter(u => u.latitude && u.longitude);\n      setUsersWithLocation(filtered);\n    }\n  }, [liveUsers]);\n\n  useEffect(() => {\n    if (livePaths) {\n      const parsed = livePaths.map(path => ({\n        ...path,\n        parsedRoute: parseRouteData(path.route)\n      })).filter(path => path.parsedRoute.length > 0);\n      \n      setPathsWithCoordinates(parsed);\n    }\n  }, [livePaths]);\n\n  const toggleRouteMode = () => {\n    setRouteMode(!routeMode);\n    if (routeMode) {\n      // If turning off, clear selected source\n      setSelectedSource(null);\n    }\n  };\n\n  const handleCreatePath = (source, destination) => {\n    createPath(source, destination);\n    setRouteMode(false);\n    setSelectedSource(null);\n  };\n\n  const formatTime = (date) => {\n    if (!(date instanceof Date)) {\n      try {\n        date = new Date(date);\n      } catch (e) {\n        return 'Unknown';\n      }\n    }\n    return date.toLocaleTimeString();\n  };\n\n  if (isLoading && usersWithLocation.length === 0 && pathsWithCoordinates.length === 0) {\n    return <div className=\"map-loading\">Loading map...</div>;\n  }\n\n  // Calculate center point for map display or use a default\n  let centerLat = 0, centerLng = 0;\n  \n  if (usersWithLocation.length > 0) {\n    centerLat = usersWithLocation.reduce((sum, u) => sum + u.latitude, 0) / usersWithLocation.length;\n    centerLng = usersWithLocation.reduce((sum, u) => sum + u.longitude, 0) / usersWithLocation.length;\n  } else {\n    // Default to a central location if no users\n    centerLat = 0;\n    centerLng = 0;\n  }\n\n  return (\n    <div className=\"map-container\">\n      <div className=\"map-header\">\n        <h3>Live User Map</h3>\n        <div className=\"map-controls\">\n          <button \n            className={`route-button ${routeMode ? 'active' : ''}`} \n            onClick={toggleRouteMode}\n          >\n            {routeMode ? 'Cancel Route' : 'Create Route'}\n          </button>\n          \n          {routeMode && !selectedSource && (\n            <div className=\"route-instructions\">Click on map to set starting point</div>\n          )}\n          \n          {routeMode && selectedSource && (\n            <div className=\"route-instructions\">Click on map to set destination</div>\n          )}\n          \n          <span className=\"last-updated\">\n            Last updated: {formatTime(lastUpdated)}\n          </span>\n          <div className=\"notification-controls\">\n      <button\n        className=\"notification-button\"\n        onClick={() => setShowNotifications(!showNotifications)}\n      >\n        <i className=\"fas fa-bell\"></i>\n        {notifications.length > 0 && (\n          <span className=\"notification-badge\">{notifications.length}</span>\n        )}\n      </button>\n      \n      {showNotifications && (\n        <NotificationsPanel onClose={() => setShowNotifications(false)} />\n      )}\n    </div>\n        </div>\n      </div>\n      \n      <MapContainer \n        center={[centerLat, centerLng]} \n        zoom={3} \n        style={{ height: '600px', width: '100%' }}\n        ref={mapRef}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        \n        {/* Map click handler for route creation */}\n        <MapClickHandler \n          routeMode={routeMode} \n          selectedSource={selectedSource} \n          setSelectedSource={setSelectedSource} \n          createPath={handleCreatePath}\n        />\n        \n        {/* Display user markers */}\n        {usersWithLocation.map(u => (\n  <Marker \n    key={`user-${u.id}`} \n    position={[u.latitude, u.longitude]}\n    icon={createCustomIcon(u.id === user?.id ? '#4285F4' : '#FF5722')}\n  >\n    <Popup>\n      <div className=\"user-popup\">\n        <h3>{u.username}</h3>\n        <div className=\"user-status\">\n          <span className=\"status-dot\"></span>\n          Online\n        </div>\n        <div className=\"user-location\">\n          Coordinates: {parseFloat(u.latitude).toFixed(4)}, {parseFloat(u.longitude).toFixed(4)}\n        </div>\n        <div className=\"user-last-active\">\n          Last active: {formatTime(u.last_active)}\n        </div>\n        {u.id === user?.id ? (\n          <div className=\"current-user-tag\">This is you</div>\n        ) : (\n          <div className=\"chat-button-container\">\n            <button \n              className=\"chat-request-button\"\n              onClick={() => handleChatRequest(u.id)}\n            >\n              Chat with {u.username}\n            </button>\n          </div>\n        )}\n      </div>\n    </Popup>\n  </Marker>\n))}\n\n        \n        {/* Display route source marker if in route mode */}\n        {routeMode && selectedSource && (\n          <Marker \n            position={[selectedSource.lat, selectedSource.lng]}\n            icon={createCustomIcon('#00C853')}\n          >\n            <Popup>Starting point</Popup>\n          </Marker>\n        )}\n        \n        {/* Display paths as polylines */}\n        {pathsWithCoordinates.map((path, idx) => (\n          <Polyline \n            key={`path-${path.id || idx}`} \n            positions={path.parsedRoute} \n            color={path.user_id === user?.id ? '#2196F3' : '#FF5722'} \n            weight={4}\n            opacity={0.7}\n          >\n            <Popup>\n              <div className=\"path-popup\">\n                <h4>Route Information</h4>\n                <p><strong>User:</strong> {path.username || 'Unknown'}</p>\n                <p><strong>Created:</strong> {formatTime(path.created_at)}</p>\n                {path.parsedRoute.length > 0 && (\n                  <>\n                    <p><strong>From:</strong> {path.parsedRoute[0][0].toFixed(4)}, {path.parsedRoute[0][1].toFixed(4)}</p>\n                    <p><strong>To:</strong> {path.parsedRoute[path.parsedRoute.length-1][0].toFixed(4)}, {path.parsedRoute[path.parsedRoute.length-1][1].toFixed(4)}</p>\n                    <p><strong>Points:</strong> {path.parsedRoute.length}</p>\n                  </>\n                )}\n              </div>\n            </Popup>\n          </Polyline>\n        ))}\n\n        {/* Map bounds updater component */}\n        <MapBoundsUpdater \n          users={usersWithLocation} \n          paths={pathsWithCoordinates} \n        />\n      </MapContainer>\n      \n      <div className=\"map-legend\">\n        <h4>Map Legend</h4>\n        <div className=\"legend-items\">\n          <div className=\"legend-item\">\n            <div className=\"legend-marker\" style={{ backgroundColor: '#4285F4' }}></div>\n            <span>Your location</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-marker\" style={{ backgroundColor: '#FF5722' }}></div>\n            <span>Other users</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-line\" style={{ backgroundColor: '#2196F3' }}></div>\n            <span>Your paths</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-line\" style={{ backgroundColor: '#FF5722' }}></div>\n            <span>Other users' paths</span>\n          </div>\n          {routeMode && (\n            <div className=\"legend-item\">\n              <div className=\"legend-marker\" style={{ backgroundColor: '#00C853' }}></div>\n              <span>Selected starting point</span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Display path information */}\n      <div className=\"map-info-panel\">\n        <h4>Statistics</h4>\n        <div className=\"map-stats\">\n          <div className=\"stat-item\">\n            <strong>Active Users:</strong> {usersWithLocation.length}\n          </div>\n          <div className=\"stat-item\">\n            <strong>Active Paths:</strong> {pathsWithCoordinates.length}\n          </div>\n          <div className=\"stat-item\">\n            <strong>Last Updated:</strong> {formatTime(lastUpdated)}\n          </div>\n        </div>\n        \n        {pathsWithCoordinates.length > 0 && (\n          <div className=\"recent-paths\">\n            <h4>Recent Paths</h4>\n            <div className=\"paths-list\">\n              {pathsWithCoordinates.slice(0, 5).map((path, idx) => (\n                <div key={idx} className=\"path-item\">\n                  <div className=\"path-header\">\n                    <strong>{path.username || 'Unknown user'}</strong>\n                    <span>{formatTime(path.created_at)}</span>\n                  </div>\n                  <div className=\"path-details\">\n                    {path.parsedRoute.length > 0 && (\n                      <>\n                        <small>\n                          From: {path.parsedRoute[0][0].toFixed(4)}, {path.parsedRoute[0][1].toFixed(4)}\n                        </small>\n                        <small>\n                          To: {path.parsedRoute[path.parsedRoute.length-1][0].toFixed(4)}, {path.parsedRoute[path.parsedRoute.length-1][1].toFixed(4)}\n                        </small>\n                        <small>\n                          Route Points: {path.parsedRoute.length}\n                        </small>\n                      </>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n      {currentChat && <ChatDialog />}\n    </div>\n    \n  );\n};\n\nexport default UserLocationMap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}