{"ast":null,"code":"var _jsxFileName = \"/home/anubhav/project_6/auth-system/frontend/src/components/UserLocationMap.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState, useContext, useRef, useMemo, useCallback } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, CircleMarker, useMap, useMapEvents } from 'react-leaflet';\nimport { LocationContext } from '../context/LocationContext';\nimport { AuthContext } from '../context/AuthContext';\nimport { ChatContext } from '../context/ChatContext';\nimport ChatDialog from './ChatDialog';\nimport NotificationsPanel from './NotificationsPanel';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './UserLocationMap.css';\nimport NotificationButton from './NotificationButton';\n// Fix for default icons\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComments, faSync, faComment, faUser, faBell, faRuler, faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\n\n// Define default Leaflet icon\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\n\n// Debounce function to limit how often a function can be called\nconst debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// Optimized parse route function with caching\nconst routeCache = new Map();\nconst parseRouteData = routeData => {\n  if (!routeData) return [];\n\n  // Check cache first\n  const cacheKey = typeof routeData === 'string' ? routeData : JSON.stringify(routeData);\n  if (routeCache.has(cacheKey)) {\n    return routeCache.get(cacheKey);\n  }\n  let result = [];\n\n  // LINESTRING parsing\n  if (typeof routeData === 'string' && routeData.startsWith('LINESTRING')) {\n    try {\n      // Extract coordinates from LINESTRING(lng lat, lng lat, ...)\n      const coordsStr = routeData.substring(routeData.indexOf('(') + 1, routeData.lastIndexOf(')'));\n      result = coordsStr.split(',').map(pair => {\n        const [lng, lat] = pair.trim().split(' ').map(parseFloat);\n        // Return [lat, lng] for Leaflet\n        return [lat, lng];\n      });\n    } catch (e) {\n      console.error('Error parsing LINESTRING:', e);\n      result = [];\n    }\n  } else if (Array.isArray(routeData)) {\n    result = routeData;\n  }\n\n  // Store in cache for future calls\n  routeCache.set(cacheKey, result);\n  return result;\n};\n\n// Memoized MapBoundsUpdater component\nconst MapBoundsUpdater = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(({\n  users,\n  paths,\n  usersAlongPath\n}) => {\n  _s();\n  const map = useMap();\n  const boundsRef = useRef(null);\n  useEffect(() => {\n    if (!users.length && !paths.length && !usersAlongPath.length) return;\n\n    // Skip if bounds calculation already in progress\n    if (boundsRef.current) return;\n\n    // Defer bounds calculation to next animation frame\n    boundsRef.current = requestAnimationFrame(() => {\n      try {\n        const points = [];\n\n        // Add user points\n        users.forEach(user => {\n          if (user.latitude && user.longitude) {\n            points.push([user.latitude, user.longitude]);\n          }\n        });\n\n        // Add users along path\n        usersAlongPath.forEach(user => {\n          if (user.latitude && user.longitude) {\n            points.push([user.latitude, user.longitude]);\n          }\n        });\n\n        // Add path points more efficiently\n        paths.forEach(path => {\n          if (path.parsedRoute && Array.isArray(path.parsedRoute)) {\n            const routePoints = path.parsedRoute;\n            if (routePoints.length > 0) {\n              points.push(routePoints[0]); // First point\n\n              if (routePoints.length > 10) {\n                // Just sample a few points instead of processing all\n                points.push(routePoints[Math.floor(routePoints.length / 3)]);\n                points.push(routePoints[Math.floor(routePoints.length * 2 / 3)]);\n              }\n              if (routePoints.length > 1) {\n                points.push(routePoints[routePoints.length - 1]); // Last point\n              }\n            }\n          }\n        });\n        if (points.length > 0) {\n          const bounds = L.latLngBounds(points);\n          map.fitBounds(bounds, {\n            padding: [50, 50],\n            animate: false\n          }); // Disable animation for better performance\n        }\n      } catch (error) {\n        console.error('Error updating map bounds:', error);\n      }\n      boundsRef.current = null;\n    });\n    return () => {\n      if (boundsRef.current) {\n        cancelAnimationFrame(boundsRef.current);\n        boundsRef.current = null;\n      }\n    };\n  }, [users, paths, usersAlongPath, map]);\n  return null;\n}, \"/hf1KhZkzXgk31qaD7g+Tz1BcsQ=\", false, function () {\n  return [useMap];\n})), \"/hf1KhZkzXgk31qaD7g+Tz1BcsQ=\", false, function () {\n  return [useMap];\n});\n\n// Component to handle map clicks for route creation - optimized with useCallback\n_c2 = MapBoundsUpdater;\nfunction MapClickHandler({\n  routeMode,\n  selectedSource,\n  setSelectedSource,\n  createPath,\n  setClickPoint\n}) {\n  _s2();\n  const handleClick = useCallback(e => {\n    if (!routeMode) return;\n\n    // Get precise coordinates\n    const {\n      lat,\n      lng\n    } = e.latlng;\n\n    // Show click point indicator\n    if (setClickPoint) {\n      setClickPoint({\n        lat,\n        lng\n      });\n      setTimeout(() => setClickPoint(null), 1000);\n    }\n    console.log(`[2025-04-08 14:53:02] Map clicked at: [${lat}, ${lng}]`);\n    if (!selectedSource) {\n      // Set source with precise coordinates\n      setSelectedSource({\n        lat: parseFloat(lat.toFixed(6)),\n        lng: parseFloat(lng.toFixed(6))\n      });\n      console.log('[2025-04-08 14:53:02] Source point set');\n    } else {\n      // Set destination with precise coordinates\n      const destination = {\n        lat: parseFloat(lat.toFixed(6)),\n        lng: parseFloat(lng.toFixed(6))\n      };\n      console.log(`[2025-04-08 14:53:02] Creating path from [${selectedSource.lat}, ${selectedSource.lng}] to [${destination.lat}, ${destination.lng}]`);\n      createPath(selectedSource, destination);\n    }\n  }, [routeMode, selectedSource, setSelectedSource, createPath, setClickPoint]);\n  useMapEvents({\n    click: handleClick\n  });\n  return null;\n}\n\n// Memoized marker component to prevent unnecessary re-renders\n_s2(MapClickHandler, \"RKTe5pWvujnW7hpA8dwjfcW91eo=\", false, function () {\n  return [useMapEvents];\n});\n_c3 = MapClickHandler;\nconst UserMarker = /*#__PURE__*/React.memo(_c4 = ({\n  user,\n  currentUser,\n  handleChatRequest,\n  chatRequestSending,\n  formatTime,\n  createCustomIcon\n}) => {\n  // Parse coordinates once\n  const lat = parseFloat(user.latitude);\n  const lng = parseFloat(user.longitude);\n\n  // Skip invalid coordinates\n  if (isNaN(lat) || isNaN(lng) || Math.abs(lat) > 90 || Math.abs(lng) > 180) {\n    return null;\n  }\n  const markerIcon = user.id === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) ? createCustomIcon('#4285F4') : createCustomIcon('#FF5722');\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    position: [lat, lng],\n    icon: markerIcon,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), \" \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), \"Online\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-location\",\n          children: [\"Coordinates: \", lat.toFixed(4), \", \", lng.toFixed(4)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-last-active\",\n          children: [\"Last active: \", formatTime(user.last_active)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), user.id === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-user-tag\",\n          children: \"This is you\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chat-request-button\",\n            onClick: () => handleChatRequest(user.id, user.username),\n            disabled: chatRequestSending,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faComment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), \" Chat with \", user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, `user-${user.id}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n});\n\n// User along path marker component\n_c5 = UserMarker;\nconst PathUserMarker = /*#__PURE__*/React.memo(_c6 = ({\n  user,\n  currentUser,\n  handleChatRequest,\n  chatRequestSending,\n  formatTime\n}) => {\n  // Parse coordinates once\n  const lat = parseFloat(user.latitude);\n  const lng = parseFloat(user.longitude);\n\n  // Skip invalid coordinates\n  if (isNaN(lat) || isNaN(lng) || Math.abs(lat) > 90 || Math.abs(lng) > 180) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    position: [lat, lng],\n    icon: L.divIcon({\n      className: 'along-path-marker',\n      html: `<div class=\"marker-pin path-user\" style=\"background-color: #4CAF50;\"></div>`,\n      iconSize: [30, 42],\n      iconAnchor: [15, 42],\n      popupAnchor: [0, -42]\n    }),\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), \" \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-status path-user\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-dot path-user\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), \"Along Your Path\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-location\",\n          children: [\"Coordinates: \", lat.toFixed(4), \", \", lng.toFixed(4)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-last-active\",\n          children: [\"Last active: \", formatTime(user.last_active)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-distance\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faRuler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), \" Distance to path: \", user.distance_to_path ? `${Math.round(user.distance_to_path)}m` : 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), user.id !== (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chat-request-button path-user-chat\",\n            onClick: () => handleChatRequest(user.id, user.username),\n            disabled: chatRequestSending,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faComment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), \" Chat with \", user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)\n  }, `path-user-${user.id}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n});\n\n// Memoized path component to prevent unnecessary re-renders\n_c7 = PathUserMarker;\nconst RoutePolyline = /*#__PURE__*/React.memo(_c8 = ({\n  path,\n  idx,\n  currentUserId,\n  formatTime\n}) => {\n  return /*#__PURE__*/_jsxDEV(Polyline, {\n    positions: path.parsedRoute,\n    color: path.user_id === currentUserId ? '#2196F3' : path.intersects_with_user ? '#4CAF50' : '#FF5722',\n    weight: 4,\n    opacity: 0.7,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"path-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Route Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"User:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 14\n          }, this), \" \", path.username || 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Created:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 14\n          }, this), \" \", formatTime(path.created_at)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), path.intersects_with_user && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"intersecting-path-notice\",\n          children: \"This path intersects with your route!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), path.parsedRoute.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"From:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 18\n            }, this), \" \", path.parsedRoute[0][0].toFixed(4), \", \", path.parsedRoute[0][1].toFixed(4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"To:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 18\n            }, this), \" \", path.parsedRoute[path.parsedRoute.length - 1][0].toFixed(4), \", \", path.parsedRoute[path.parsedRoute.length - 1][1].toFixed(4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Points:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 18\n            }, this), \" \", path.parsedRoute.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this)\n  }, `path-${path.id || idx}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 5\n  }, this);\n});\n_c9 = RoutePolyline;\nconst UserLocationMap = () => {\n  _s3();\n  const {\n    liveUsers,\n    fetchLiveUsers,\n    livePaths,\n    fetchLivePaths,\n    createPath,\n    showIntersectingOnly,\n    toggleIntersectionFilter,\n    forceRefreshData,\n    usersAlongPath,\n    // New: users along the current path\n    fetchUsersAlongPath,\n    // New: function to fetch users along path\n    proximityRadius,\n    // New: radius for users along path\n    updateProximityRadius // New: function to update radius\n  } = useContext(LocationContext);\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    sendChatRequest,\n    notifications,\n    currentChat,\n    openChat,\n    activeChats,\n    fetchActiveChats,\n    fetchNotifications\n  } = useContext(ChatContext);\n  const [usersWithLocation, setUsersWithLocation] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastUpdated, setLastUpdated] = useState(new Date());\n  const [pathsWithCoordinates, setPathsWithCoordinates] = useState([]);\n  const [routeMode, setRouteMode] = useState(false);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [chatRequestSending, setChatRequestSending] = useState(false);\n  const [chatRequestStatus, setChatRequestStatus] = useState(null);\n  const [notificationLoading, setNotificationLoading] = useState(false);\n  const [clickPoint, setClickPoint] = useState(null);\n  const [showRadiusControl, setShowRadiusControl] = useState(false); // New: state for radius control UI\n\n  const mapRef = useRef(null);\n  const mapCenter = useRef([37.7749, -122.4194]);\n  const isInitialLoad = useRef(true);\n  const dataProcessingRef = useRef(false);\n\n  // Fixed createCustomIcon function - memoized for performance\n  const createCustomIcon = useCallback(color => {\n    return L.divIcon({\n      className: 'custom-div-icon',\n      html: `<div class=\"marker-pin\" style=\"background-color: ${color};\"></div>`,\n      iconSize: [30, 42],\n      iconAnchor: [15, 42],\n      // This should anchor at the bottom-center of the icon\n      popupAnchor: [0, -42] // This positions the popup above the icon\n    });\n  }, []);\n\n  // Handle radius changes - add this function\n  const handleRadiusChange = e => {\n    const newRadius = parseInt(e.target.value, 10);\n    updateProximityRadius(newRadius);\n  };\n\n  // Optimized chat request handler\n  const handleChatRequest = useCallback((userId, username) => {\n    if (!userId || userId === (user === null || user === void 0 ? void 0 : user.id) || chatRequestSending) {\n      if (userId === (user === null || user === void 0 ? void 0 : user.id)) {\n        setChatRequestStatus({\n          success: false,\n          message: 'You cannot chat with yourself.'\n        });\n      }\n      return;\n    }\n    setChatRequestSending(true);\n    setChatRequestStatus({\n      success: null,\n      message: `Sending chat request...`\n    });\n\n    // Use a small timeout to allow UI to update before API call\n    setTimeout(() => {\n      sendChatRequest(userId).then(() => {\n        setChatRequestStatus({\n          success: true,\n          message: `Chat request sent to ${username || 'user'}!`\n        });\n\n        // Queue notification refresh after successful request\n        setTimeout(() => {\n          if (fetchNotifications) fetchNotifications(true);\n        }, 100);\n      }).catch(error => {\n        setChatRequestStatus({\n          success: false,\n          message: `Failed to send chat request: ${error.message || 'Unknown error'}`\n        });\n      }).finally(() => {\n        setChatRequestSending(false);\n        // Clear status message after a delay\n        setTimeout(() => {\n          setChatRequestStatus(null);\n        }, 5000);\n      });\n    }, 50);\n  }, [user, sendChatRequest, fetchNotifications, chatRequestSending]);\n\n  // Handle refresh button click - debounced\n  const handleRefresh = useCallback(debounce(async () => {\n    if (isLoading) return;\n    try {\n      setIsLoading(true);\n\n      // Stagger requests to prevent UI blocking\n      setTimeout(async () => {\n        if (fetchNotifications) {\n          await fetchNotifications(true).catch(e => console.error('Notification refresh error:', e));\n        }\n        setTimeout(async () => {\n          if (forceRefreshData) {\n            await forceRefreshData().catch(e => console.error('Data refresh error:', e));\n          } else {\n            await Promise.all([fetchLiveUsers().catch(e => console.error('User fetch error:', e)), fetchLivePaths().catch(e => console.error('Path fetch error:', e)), fetchUsersAlongPath().catch(e => console.error('Users along path fetch error:', e))]);\n          }\n          setLastUpdated(new Date());\n          setIsLoading(false);\n        }, 50);\n      }, 10);\n    } catch (error) {\n      console.error('Refresh failed:', error);\n      setIsLoading(false);\n    }\n  }, 300), [fetchNotifications, forceRefreshData, fetchLiveUsers, fetchLivePaths, fetchUsersAlongPath, isLoading]);\n\n  // Optimized notification toggle\n  const toggleNotifications = useCallback(() => {\n    // Update UI immediately\n    setShowNotifications(prev => !prev);\n\n    // If we're opening the panel and not already loading, fetch notifications\n    if (!showNotifications && !notificationLoading && fetchNotifications) {\n      setNotificationLoading(true);\n\n      // Delay API call to allow UI to update first\n      requestAnimationFrame(() => {\n        fetchNotifications(true).catch(err => console.error('Notification refresh error:', err)).finally(() => setNotificationLoading(false));\n      });\n    }\n  }, [showNotifications, notificationLoading, fetchNotifications]);\n\n  // Fetch active chats on mount, with dependency optimization\n  useEffect(() => {\n    if (user && fetchActiveChats && !isLoading) {\n      fetchActiveChats().catch(e => console.error('Error fetching chats:', e));\n    }\n  }, [user, fetchActiveChats, isLoading]);\n\n  // Optimized effect for initial data load\n  useEffect(() => {\n    if (!user || !isInitialLoad.current) return;\n    const loadInitialData = async () => {\n      setIsLoading(true);\n      try {\n        // Load data sequentially to prevent UI blocking\n        await fetchLiveUsers().catch(e => console.error('Error loading users:', e));\n        await fetchLivePaths().catch(e => console.error('Error loading paths:', e));\n        await fetchUsersAlongPath().catch(e => console.error('Error loading users along path:', e));\n        setLastUpdated(new Date());\n      } catch (error) {\n        console.error('Initial data load error:', error);\n      } finally {\n        setIsLoading(false);\n        isInitialLoad.current = false;\n      }\n    };\n    loadInitialData();\n\n    // Setup periodic refresh that respects loading state\n    let isMounted = true;\n    let timeoutId = null;\n    const loadMapData = async () => {\n      if (!isMounted || isLoading) {\n        // Schedule next update\n        timeoutId = setTimeout(loadMapData, 60000);\n        return;\n      }\n      try {\n        const timeSinceUpdate = new Date() - lastUpdated;\n        if (timeSinceUpdate > 30000) {\n          // 30 seconds minimum\n          setIsLoading(true);\n          await fetchLiveUsers().catch(e => console.error('Background user fetch error:', e));\n          await fetchLivePaths().catch(e => console.error('Background path fetch error:', e));\n          await fetchUsersAlongPath().catch(e => console.error('Background users along path fetch error:', e));\n          if (isMounted) {\n            setLastUpdated(new Date());\n            setIsLoading(false);\n          }\n        }\n      } catch (error) {\n        console.error('Background refresh error:', error);\n        if (isMounted) setIsLoading(false);\n      }\n\n      // Schedule next update\n      if (isMounted) {\n        timeoutId = setTimeout(loadMapData, 60000);\n      }\n    };\n\n    // Start the refresh cycle after initial load\n    timeoutId = setTimeout(loadMapData, 60000);\n    return () => {\n      isMounted = false;\n      if (timeoutId) clearTimeout(timeoutId);\n    };\n  }, [user, fetchLiveUsers, fetchLivePaths, fetchUsersAlongPath, isLoading, lastUpdated]);\n\n  // Optimized effect to process user data without blocking UI\n  useEffect(() => {\n    if (!liveUsers || !Array.isArray(liveUsers) || dataProcessingRef.current) return;\n\n    // Prevent concurrent processing\n    dataProcessingRef.current = true;\n\n    // Process in next frame to avoid blocking UI\n    requestAnimationFrame(() => {\n      try {\n        // Filter users with valid coordinates\n        const filtered = liveUsers.filter(u => {\n          const lat = parseFloat(u.latitude);\n          const lng = parseFloat(u.longitude);\n          return !isNaN(lat) && !isNaN(lng) && Math.abs(lat) <= 90 && Math.abs(lng) <= 180;\n        });\n\n        // Update center only if we have users and it has changed\n        if (filtered.length > 0) {\n          const totalLat = filtered.reduce((sum, u) => sum + parseFloat(u.latitude), 0);\n          const totalLng = filtered.reduce((sum, u) => sum + parseFloat(u.longitude), 0);\n          const newCenter = [totalLat / filtered.length, totalLng / filtered.length];\n\n          // Only update ref if center has changed significantly\n          if (Math.abs(newCenter[0] - mapCenter.current[0]) > 0.001 || Math.abs(newCenter[1] - mapCenter.current[1]) > 0.001) {\n            mapCenter.current = newCenter;\n          }\n        }\n        setUsersWithLocation(filtered);\n      } catch (err) {\n        console.error('Error processing user data:', err);\n        setUsersWithLocation([]);\n      } finally {\n        dataProcessingRef.current = false;\n      }\n    });\n  }, [liveUsers]);\n\n  // Memoized path processing\n  const processedPaths = useMemo(() => {\n    if (!livePaths) return [];\n    try {\n      // Batch process paths\n      const parsed = livePaths.map(path => ({\n        ...path,\n        parsedRoute: parseRouteData(path.route)\n      })).filter(path => path.parsedRoute && path.parsedRoute.length > 0);\n      return parsed;\n    } catch (err) {\n      console.error('Error processing paths:', err);\n      return [];\n    }\n  }, [livePaths]);\n\n  // Update path state, but only when processed data changes\n  useEffect(() => {\n    setPathsWithCoordinates(processedPaths);\n  }, [processedPaths]);\n\n  // Optimized toggle functions\n  const toggleRouteMode = useCallback(() => {\n    setRouteMode(prev => !prev);\n    setSelectedSource(null);\n  }, []);\n  const handleCreatePath = useCallback((source, destination) => {\n    if (createPath) {\n      createPath(source, destination);\n    }\n    setRouteMode(false);\n    setSelectedSource(null);\n  }, [createPath]);\n  const handleToggleIntersectionFilter = useCallback(() => {\n    if (toggleIntersectionFilter) {\n      toggleIntersectionFilter();\n    }\n  }, [toggleIntersectionFilter]);\n\n  // Memoized time formatter for better performance\n  const formatTime = useCallback(date => {\n    if (!(date instanceof Date)) {\n      try {\n        date = new Date(date);\n      } catch (e) {\n        return 'Unknown';\n      }\n    }\n    return date.toLocaleTimeString();\n  }, []);\n\n  // Memoized center point calculation\n  const mapCenterPoint = useMemo(() => {\n    if (usersWithLocation.length > 0) {\n      return mapCenter.current;\n    } else {\n      return [37.7749, -122.4194]; // Default to San Francisco\n    }\n  }, [usersWithLocation]);\n\n  // Filter users to not show those already in usersAlongPath\n  const filteredUsers = useMemo(() => {\n    if (!usersWithLocation || !usersAlongPath) return usersWithLocation;\n\n    // Create a Set of user IDs from usersAlongPath for fast lookup\n    const pathUserIds = new Set(usersAlongPath.map(u => u.id));\n\n    // Filter out users that are in usersAlongPath\n    return usersWithLocation.filter(u => !pathUserIds.has(u.id));\n  }, [usersWithLocation, usersAlongPath]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Live User Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-controls\",\n          children: [/*#__PURE__*/_jsxDEV(NotificationButton, {\n            notificationCount: notifications ? notifications.length : 0,\n            onClick: toggleNotifications,\n            isLoading: notificationLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `refresh-button ${isLoading ? 'loading' : ''}`,\n            onClick: handleRefresh,\n            title: \"Refresh map data\",\n            disabled: isLoading,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSync,\n              className: isLoading ? 'rotating' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-button ${showIntersectingOnly ? 'active' : ''}`,\n            onClick: handleToggleIntersectionFilter,\n            title: \"Show only paths that intersect with your route\",\n            children: showIntersectingOnly ? 'Show All' : 'Show Intersecting'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `path-users-button ${usersAlongPath.length > 0 ? 'has-users' : ''}`,\n            onClick: () => setShowRadiusControl(prev => !prev),\n            title: \"Users along your path\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faMapMarkerAlt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 15\n            }, this), \" Path Users (\", usersAlongPath.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 691,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `route-button ${routeMode ? 'active' : ''}`,\n          onClick: toggleRouteMode,\n          children: routeMode ? 'Cancel Route' : 'Create Route'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 11\n        }, this), routeMode && !selectedSource && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-instructions\",\n          children: \"Click to set starting point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 13\n        }, this), routeMode && selectedSource && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-instructions\",\n          children: \"Click to set destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"last-updated\",\n          children: [\"Updated: \", formatTime(lastUpdated)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 7\n    }, this), chatRequestStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-request-status ${chatRequestStatus.success === true ? 'success' : chatRequestStatus.success === false ? 'error' : 'pending'}`,\n      children: chatRequestStatus.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 9\n    }, this), showNotifications && /*#__PURE__*/_jsxDEV(NotificationsPanel, {\n      onClose: () => setShowNotifications(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 9\n    }, this), showRadiusControl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"radius-control-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Users Along Path Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Proximity Radius: \", proximityRadius, \"m\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"100\",\n          max: \"2000\",\n          step: \"100\",\n          value: proximityRadius,\n          onChange: handleRadiusChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radius-info\",\n        children: [\"Shows users within \", proximityRadius, \"m of your path.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh-users-button\",\n        onClick: () => fetchUsersAlongPath(true),\n        disabled: isLoading,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faSync,\n          className: isLoading ? 'rotating' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 13\n        }, this), \"Refresh Users\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-panel-button\",\n        onClick: () => setShowRadiusControl(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 762,\n      columnNumber: 9\n    }, this), showIntersectingOnly && pathsWithCoordinates.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"intersection-filter-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-info-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 798,\n        columnNumber: 11\n      }, this), \"No intersecting paths found.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: mapCenterPoint,\n      zoom: 4,\n      style: {\n        height: '600px',\n        width: '100%'\n      },\n      ref: mapRef,\n      preferCanvas: true // Use canvas renderer for better performance\n      ,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapClickHandler, {\n        routeMode: routeMode,\n        selectedSource: selectedSource,\n        setSelectedSource: setSelectedSource,\n        createPath: handleCreatePath,\n        setClickPoint: setClickPoint\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 9\n      }, this), filteredUsers.slice(0, 100).map(u => /*#__PURE__*/_jsxDEV(UserMarker, {\n        user: u,\n        currentUser: user,\n        handleChatRequest: handleChatRequest,\n        chatRequestSending: chatRequestSending,\n        formatTime: formatTime,\n        createCustomIcon: createCustomIcon\n      }, `user-${u.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 11\n      }, this)), usersAlongPath.map(u => /*#__PURE__*/_jsxDEV(PathUserMarker, {\n        user: u,\n        currentUser: user,\n        handleChatRequest: handleChatRequest,\n        chatRequestSending: chatRequestSending,\n        formatTime: formatTime\n      }, `path-user-${u.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 839,\n        columnNumber: 11\n      }, this)), routeMode && selectedSource && /*#__PURE__*/_jsxDEV(Marker, {\n        position: [selectedSource.lat, selectedSource.lng],\n        icon: createCustomIcon('#00C853'),\n        zIndexOffset: 1000 // This ensures the source marker is on top of other markers\n        ,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"route-marker-popup\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Starting Point\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 859,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Lat: \", selectedSource.lat.toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 860,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Lng: \", selectedSource.lng.toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 861,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 858,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 13\n        }, this)\n      }, \"source-marker\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 11\n      }, this), pathsWithCoordinates.slice(0, 50).map((path, idx) => /*#__PURE__*/_jsxDEV(RoutePolyline, {\n        path: path,\n        idx: idx,\n        currentUserId: user === null || user === void 0 ? void 0 : user.id,\n        formatTime: formatTime\n      }, `path-${path.id || idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 869,\n        columnNumber: 11\n      }, this)), clickPoint && /*#__PURE__*/_jsxDEV(CircleMarker, {\n        center: [clickPoint.lat, clickPoint.lng],\n        radius: 5,\n        color: \"#3388ff\",\n        fill: true,\n        fillColor: \"#3388ff\",\n        fillOpacity: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MapBoundsUpdater, {\n        users: filteredUsers,\n        paths: pathsWithCoordinates,\n        usersAlongPath: usersAlongPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 891,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-legend\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Map Legend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-items\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-marker\",\n            style: {\n              backgroundColor: '#4285F4'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Your location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 903,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-marker\",\n            style: {\n              backgroundColor: '#FF5722'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 906,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Other users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-marker\",\n            style: {\n              backgroundColor: '#4CAF50'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Users along your path\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 911,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-line\",\n            style: {\n              backgroundColor: '#2196F3'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 914,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Your path\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 913,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-line\",\n            style: {\n              backgroundColor: '#4CAF50'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 918,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Intersecting paths\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-line\",\n            style: {\n              backgroundColor: '#FF5722'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Other users' paths\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 923,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 11\n        }, this), routeMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-marker\",\n            style: {\n              backgroundColor: '#00C853'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Starting point\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 928,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 898,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-info-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Active Users:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 13\n          }, this), \" \", usersWithLocation.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Active Paths:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 942,\n            columnNumber: 13\n          }, this), \" \", pathsWithCoordinates.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Last Updated:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 13\n          }, this), \" \", formatTime(lastUpdated)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-chats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faComments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 13\n          }, this), \" Active Chats\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chats-list\",\n          children: activeChats && activeChats.length > 0 ? activeChats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-item\",\n            onClick: () => openChat(chat.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-user\",\n              children: chat.otherParticipants && chat.otherParticipants.length > 0 ? chat.otherParticipants[0].username : 'Unknown User'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 962,\n              columnNumber: 19\n            }, this), chat.unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"unread-badge\",\n              children: chat.unreadCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 968,\n              columnNumber: 21\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 957,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-chats\",\n            children: \"No active chats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 973,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 954,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 950,\n        columnNumber: 9\n      }, this), usersAlongPath.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-along-path\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faMapMarkerAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 15\n          }, this), \" Users Along Your Path (\", usersAlongPath.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"users-list\",\n          children: usersAlongPath.map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-item\",\n            onClick: () => handleChatRequest(u.id, u.username),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-name\",\n              children: u.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 991,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-distance\",\n              children: u.distance_to_path ? `${Math.round(u.distance_to_path)}m from path` : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 992,\n              columnNumber: 19\n            }, this)]\n          }, `path-user-${u.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 986,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 984,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 980,\n        columnNumber: 11\n      }, this), pathsWithCoordinates.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recent-paths\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Recent Paths\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paths-list\",\n          children: pathsWithCoordinates.slice(0, 3).map((path, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `path-item ${path.intersects_with_user ? 'intersecting' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"path-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: path.username || 'Unknown user'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1008,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatTime(path.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1009,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1007,\n              columnNumber: 19\n            }, this), path.intersects_with_user && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"intersect-badge\",\n              children: \"Intersects with your route\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1012,\n              columnNumber: 21\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1006,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1002,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 935,\n      columnNumber: 7\n    }, this), currentChat && /*#__PURE__*/_jsxDEV(ChatDialog, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1022,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 687,\n    columnNumber: 5\n  }, this);\n};\n_s3(UserLocationMap, \"/xWh42CrlqAgKuyuAbiOPjSHdD0=\");\n_c10 = UserLocationMap;\nexport default _c11 = /*#__PURE__*/React.memo(UserLocationMap);\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"MapBoundsUpdater$React.memo\");\n$RefreshReg$(_c2, \"MapBoundsUpdater\");\n$RefreshReg$(_c3, \"MapClickHandler\");\n$RefreshReg$(_c4, \"UserMarker$React.memo\");\n$RefreshReg$(_c5, \"UserMarker\");\n$RefreshReg$(_c6, \"PathUserMarker$React.memo\");\n$RefreshReg$(_c7, \"PathUserMarker\");\n$RefreshReg$(_c8, \"RoutePolyline$React.memo\");\n$RefreshReg$(_c9, \"RoutePolyline\");\n$RefreshReg$(_c10, \"UserLocationMap\");\n$RefreshReg$(_c11, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useRef","useMemo","useCallback","MapContainer","TileLayer","Marker","Popup","Polyline","CircleMarker","useMap","useMapEvents","LocationContext","AuthContext","ChatContext","ChatDialog","NotificationsPanel","L","NotificationButton","icon","iconShadow","FontAwesomeIcon","faComments","faSync","faComment","faUser","faBell","faRuler","faMapMarkerAlt","jsxDEV","_jsxDEV","Fragment","_Fragment","DefaultIcon","iconUrl","shadowUrl","iconSize","iconAnchor","prototype","options","debounce","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout","routeCache","Map","parseRouteData","routeData","cacheKey","JSON","stringify","has","get","result","startsWith","coordsStr","substring","indexOf","lastIndexOf","split","map","pair","lng","lat","trim","parseFloat","e","console","error","Array","isArray","set","MapBoundsUpdater","_s","memo","_c","users","paths","usersAlongPath","boundsRef","length","current","requestAnimationFrame","points","forEach","user","latitude","longitude","push","path","parsedRoute","routePoints","Math","floor","bounds","latLngBounds","fitBounds","padding","animate","cancelAnimationFrame","_c2","MapClickHandler","routeMode","selectedSource","setSelectedSource","createPath","setClickPoint","_s2","handleClick","latlng","log","toFixed","destination","click","_c3","UserMarker","_c4","currentUser","handleChatRequest","chatRequestSending","formatTime","createCustomIcon","isNaN","abs","markerIcon","id","position","children","className","fileName","_jsxFileName","lineNumber","columnNumber","username","last_active","onClick","disabled","_c5","PathUserMarker","_c6","divIcon","html","popupAnchor","distance_to_path","round","_c7","RoutePolyline","_c8","idx","currentUserId","positions","color","user_id","intersects_with_user","weight","opacity","created_at","_c9","UserLocationMap","_s3","liveUsers","fetchLiveUsers","livePaths","fetchLivePaths","showIntersectingOnly","toggleIntersectionFilter","forceRefreshData","fetchUsersAlongPath","proximityRadius","updateProximityRadius","sendChatRequest","notifications","currentChat","openChat","activeChats","fetchActiveChats","fetchNotifications","usersWithLocation","setUsersWithLocation","isLoading","setIsLoading","lastUpdated","setLastUpdated","Date","pathsWithCoordinates","setPathsWithCoordinates","setRouteMode","showNotifications","setShowNotifications","setChatRequestSending","chatRequestStatus","setChatRequestStatus","notificationLoading","setNotificationLoading","clickPoint","showRadiusControl","setShowRadiusControl","mapRef","mapCenter","isInitialLoad","dataProcessingRef","handleRadiusChange","newRadius","parseInt","target","value","userId","success","message","then","catch","finally","handleRefresh","Promise","all","toggleNotifications","prev","err","loadInitialData","isMounted","timeoutId","loadMapData","timeSinceUpdate","filtered","filter","u","totalLat","reduce","sum","totalLng","newCenter","processedPaths","parsed","route","toggleRouteMode","handleCreatePath","source","handleToggleIntersectionFilter","date","toLocaleTimeString","mapCenterPoint","filteredUsers","pathUserIds","Set","notificationCount","title","onClose","type","min","max","step","onChange","center","zoom","style","height","width","ref","preferCanvas","attribution","url","slice","zIndexOffset","radius","fill","fillColor","fillOpacity","backgroundColor","chat","otherParticipants","unreadCount","_c10","_c11","$RefreshReg$"],"sources":["/home/anubhav/project_6/auth-system/frontend/src/components/UserLocationMap.js"],"sourcesContent":["import React, { useEffect, useState, useContext, useRef, useMemo, useCallback } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, CircleMarker, useMap, useMapEvents } from 'react-leaflet';\nimport { LocationContext } from '../context/LocationContext';\nimport { AuthContext } from '../context/AuthContext';\nimport { ChatContext } from '../context/ChatContext';\nimport ChatDialog from './ChatDialog';\nimport NotificationsPanel from './NotificationsPanel';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './UserLocationMap.css';\nimport NotificationButton from './NotificationButton';\n// Fix for default icons\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComments, faSync, faComment, faUser, faBell, faRuler, faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\n\n// Define default Leaflet icon\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41]\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\n// Debounce function to limit how often a function can be called\nconst debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// Optimized parse route function with caching\nconst routeCache = new Map();\nconst parseRouteData = (routeData) => {\n  if (!routeData) return [];\n  \n  // Check cache first\n  const cacheKey = typeof routeData === 'string' ? routeData : JSON.stringify(routeData);\n  if (routeCache.has(cacheKey)) {\n    return routeCache.get(cacheKey);\n  }\n  \n  let result = [];\n  \n  // LINESTRING parsing\n  if (typeof routeData === 'string' && routeData.startsWith('LINESTRING')) {\n    try {\n      // Extract coordinates from LINESTRING(lng lat, lng lat, ...)\n      const coordsStr = routeData.substring(routeData.indexOf('(') + 1, routeData.lastIndexOf(')'));\n      result = coordsStr.split(',').map(pair => {\n        const [lng, lat] = pair.trim().split(' ').map(parseFloat);\n        // Return [lat, lng] for Leaflet\n        return [lat, lng]; \n      });\n    } catch (e) {\n      console.error('Error parsing LINESTRING:', e);\n      result = [];\n    }\n  } else if (Array.isArray(routeData)) {\n    result = routeData;\n  }\n  \n  // Store in cache for future calls\n  routeCache.set(cacheKey, result);\n  return result;\n};\n\n// Memoized MapBoundsUpdater component\nconst MapBoundsUpdater = React.memo(({ users, paths, usersAlongPath }) => {\n  const map = useMap();\n  const boundsRef = useRef(null);\n  \n  useEffect(() => {\n    if (!users.length && !paths.length && !usersAlongPath.length) return;\n    \n    // Skip if bounds calculation already in progress\n    if (boundsRef.current) return;\n    \n    // Defer bounds calculation to next animation frame\n    boundsRef.current = requestAnimationFrame(() => {\n      try {\n        const points = [];\n        \n        // Add user points\n        users.forEach(user => {\n          if (user.latitude && user.longitude) {\n            points.push([user.latitude, user.longitude]);\n          }\n        });\n        \n        // Add users along path\n        usersAlongPath.forEach(user => {\n          if (user.latitude && user.longitude) {\n            points.push([user.latitude, user.longitude]);\n          }\n        });\n        \n        // Add path points more efficiently\n        paths.forEach(path => {\n          if (path.parsedRoute && Array.isArray(path.parsedRoute)) {\n            const routePoints = path.parsedRoute;\n            if (routePoints.length > 0) {\n              points.push(routePoints[0]); // First point\n              \n              if (routePoints.length > 10) {\n                // Just sample a few points instead of processing all\n                points.push(routePoints[Math.floor(routePoints.length / 3)]);\n                points.push(routePoints[Math.floor(routePoints.length * 2 / 3)]);\n              }\n              \n              if (routePoints.length > 1) {\n                points.push(routePoints[routePoints.length - 1]); // Last point\n              }\n            }\n          }\n        });\n        \n        if (points.length > 0) {\n          const bounds = L.latLngBounds(points);\n          map.fitBounds(bounds, { padding: [50, 50], animate: false }); // Disable animation for better performance\n        }\n      } catch (error) {\n        console.error('Error updating map bounds:', error);\n      }\n      \n      boundsRef.current = null;\n    });\n    \n    return () => {\n      if (boundsRef.current) {\n        cancelAnimationFrame(boundsRef.current);\n        boundsRef.current = null;\n      }\n    };\n  }, [users, paths, usersAlongPath, map]);\n  \n  return null;\n});\n\n// Component to handle map clicks for route creation - optimized with useCallback\nfunction MapClickHandler({ routeMode, selectedSource, setSelectedSource, createPath, setClickPoint }) {\n  const handleClick = useCallback((e) => {\n    if (!routeMode) return;\n    \n    // Get precise coordinates\n    const { lat, lng } = e.latlng;\n    \n    // Show click point indicator\n    if (setClickPoint) {\n      setClickPoint({ lat, lng });\n      setTimeout(() => setClickPoint(null), 1000);\n    }\n    \n    console.log(`[2025-04-08 14:53:02] Map clicked at: [${lat}, ${lng}]`);\n    \n    if (!selectedSource) {\n      // Set source with precise coordinates\n      setSelectedSource({ \n        lat: parseFloat(lat.toFixed(6)), \n        lng: parseFloat(lng.toFixed(6)) \n      });\n      console.log('[2025-04-08 14:53:02] Source point set');\n    } else {\n      // Set destination with precise coordinates\n      const destination = { \n        lat: parseFloat(lat.toFixed(6)), \n        lng: parseFloat(lng.toFixed(6)) \n      };\n      console.log(`[2025-04-08 14:53:02] Creating path from [${selectedSource.lat}, ${selectedSource.lng}] to [${destination.lat}, ${destination.lng}]`);\n      createPath(selectedSource, destination);\n    }\n  }, [routeMode, selectedSource, setSelectedSource, createPath, setClickPoint]);\n  \n  useMapEvents({\n    click: handleClick\n  });\n  \n  return null;\n}\n\n// Memoized marker component to prevent unnecessary re-renders\nconst UserMarker = React.memo(({ user, currentUser, handleChatRequest, chatRequestSending, formatTime, createCustomIcon }) => {\n  // Parse coordinates once\n  const lat = parseFloat(user.latitude);\n  const lng = parseFloat(user.longitude);\n  \n  // Skip invalid coordinates\n  if (isNaN(lat) || isNaN(lng) || Math.abs(lat) > 90 || Math.abs(lng) > 180) {\n    return null;\n  }\n  \n  const markerIcon = user.id === currentUser?.id ? \n    createCustomIcon('#4285F4') : createCustomIcon('#FF5722');\n  \n  return (\n    <Marker \n      key={`user-${user.id}`} \n      position={[lat, lng]}\n      icon={markerIcon}\n    >\n      <Popup>\n        <div className=\"user-popup\">\n          <h3><FontAwesomeIcon icon={faUser} /> {user.username}</h3>\n          <div className=\"user-status\">\n            <span className=\"status-dot\"></span>\n            Online\n          </div>\n          <div className=\"user-location\">\n            Coordinates: {lat.toFixed(4)}, {lng.toFixed(4)}\n          </div>\n          <div className=\"user-last-active\">\n            Last active: {formatTime(user.last_active)}\n          </div>\n          \n          {user.id === currentUser?.id ? (\n            <div className=\"current-user-tag\">This is you</div>\n          ) : (\n            <div className=\"chat-button-container\">\n              <button \n                className=\"chat-request-button\"\n                onClick={() => handleChatRequest(user.id, user.username)}\n                disabled={chatRequestSending}\n              >\n                <FontAwesomeIcon icon={faComment} /> Chat with {user.username}\n              </button>\n            </div>\n          )}\n        </div>\n      </Popup>\n    </Marker>\n  );\n});\n\n// User along path marker component\nconst PathUserMarker = React.memo(({ user, currentUser, handleChatRequest, chatRequestSending, formatTime }) => {\n  // Parse coordinates once\n  const lat = parseFloat(user.latitude);\n  const lng = parseFloat(user.longitude);\n  \n  // Skip invalid coordinates\n  if (isNaN(lat) || isNaN(lng) || Math.abs(lat) > 90 || Math.abs(lng) > 180) {\n    return null;\n  }\n  \n  return (\n    <Marker \n      key={`path-user-${user.id}`}\n      position={[lat, lng]}\n      icon={L.divIcon({\n        className: 'along-path-marker',\n        html: `<div class=\"marker-pin path-user\" style=\"background-color: #4CAF50;\"></div>`,\n        iconSize: [30, 42],\n        iconAnchor: [15, 42],\n        popupAnchor: [0, -42]\n      })}\n    >\n      <Popup>\n        <div className=\"user-popup\">\n          <h3><FontAwesomeIcon icon={faUser} /> {user.username}</h3>\n          <div className=\"user-status path-user\">\n            <span className=\"status-dot path-user\"></span>\n            Along Your Path\n          </div>\n          <div className=\"user-location\">\n            Coordinates: {lat.toFixed(4)}, {lng.toFixed(4)}\n          </div>\n          <div className=\"user-last-active\">\n            Last active: {formatTime(user.last_active)}\n          </div>\n          <div className=\"user-distance\">\n            <FontAwesomeIcon icon={faRuler} /> Distance to path: {user.distance_to_path ? `${Math.round(user.distance_to_path)}m` : 'Unknown'}\n          </div>\n          \n          {user.id !== currentUser?.id && (\n            <div className=\"chat-button-container\">\n              <button \n                className=\"chat-request-button path-user-chat\"\n                onClick={() => handleChatRequest(user.id, user.username)}\n                disabled={chatRequestSending}\n              >\n                <FontAwesomeIcon icon={faComment} /> Chat with {user.username}\n              </button>\n            </div>\n          )}\n        </div>\n      </Popup>\n    </Marker>\n  );\n});\n\n// Memoized path component to prevent unnecessary re-renders\nconst RoutePolyline = React.memo(({ path, idx, currentUserId, formatTime }) => {\n  return (\n    <Polyline \n      key={`path-${path.id || idx}`} \n      positions={path.parsedRoute} \n      color={path.user_id === currentUserId ? '#2196F3' : (path.intersects_with_user ? '#4CAF50' : '#FF5722')} \n      weight={4}\n      opacity={0.7}\n    >\n      <Popup>\n        <div className=\"path-popup\">\n          <h4>Route Information</h4>\n          <p><strong>User:</strong> {path.username || 'Unknown'}</p>\n          <p><strong>Created:</strong> {formatTime(path.created_at)}</p>\n          {path.intersects_with_user && (\n            <p className=\"intersecting-path-notice\">This path intersects with your route!</p>\n          )}\n          {path.parsedRoute.length > 0 && (\n            <>\n              <p><strong>From:</strong> {path.parsedRoute[0][0].toFixed(4)}, {path.parsedRoute[0][1].toFixed(4)}</p>\n              <p><strong>To:</strong> {path.parsedRoute[path.parsedRoute.length-1][0].toFixed(4)}, {path.parsedRoute[path.parsedRoute.length-1][1].toFixed(4)}</p>\n              <p><strong>Points:</strong> {path.parsedRoute.length}</p>\n            </>\n          )}\n        </div>\n      </Popup>\n    </Polyline>\n  );\n});\n\nconst UserLocationMap = () => {\n  const { \n    liveUsers, \n    fetchLiveUsers, \n    livePaths, \n    fetchLivePaths, \n    createPath, \n    showIntersectingOnly, \n    toggleIntersectionFilter,\n    forceRefreshData,\n    usersAlongPath, // New: users along the current path\n    fetchUsersAlongPath, // New: function to fetch users along path\n    proximityRadius, // New: radius for users along path\n    updateProximityRadius // New: function to update radius\n  } = useContext(LocationContext);\n  \n  const { user } = useContext(AuthContext);\n  const { \n    sendChatRequest, \n    notifications, \n    currentChat, \n    openChat,\n    activeChats,\n    fetchActiveChats,\n    fetchNotifications\n  } = useContext(ChatContext);\n  \n  const [usersWithLocation, setUsersWithLocation] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastUpdated, setLastUpdated] = useState(new Date());\n  const [pathsWithCoordinates, setPathsWithCoordinates] = useState([]);\n  const [routeMode, setRouteMode] = useState(false);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [chatRequestSending, setChatRequestSending] = useState(false);\n  const [chatRequestStatus, setChatRequestStatus] = useState(null);\n  const [notificationLoading, setNotificationLoading] = useState(false);\n  const [clickPoint, setClickPoint] = useState(null);\n  const [showRadiusControl, setShowRadiusControl] = useState(false); // New: state for radius control UI\n  \n  const mapRef = useRef(null);\n  const mapCenter = useRef([37.7749, -122.4194]);\n  const isInitialLoad = useRef(true);\n  const dataProcessingRef = useRef(false);\n  \n  // Fixed createCustomIcon function - memoized for performance\n  const createCustomIcon = useCallback((color) => {\n    return L.divIcon({\n      className: 'custom-div-icon',\n      html: `<div class=\"marker-pin\" style=\"background-color: ${color};\"></div>`,\n      iconSize: [30, 42],\n      iconAnchor: [15, 42], // This should anchor at the bottom-center of the icon\n      popupAnchor: [0, -42] // This positions the popup above the icon\n    });\n  }, []);\n\n  // Handle radius changes - add this function\n  const handleRadiusChange = (e) => {\n    const newRadius = parseInt(e.target.value, 10);\n    updateProximityRadius(newRadius);\n  };\n\n  // Optimized chat request handler\n  const handleChatRequest = useCallback((userId, username) => {\n    if (!userId || userId === user?.id || chatRequestSending) {\n      if (userId === user?.id) {\n        setChatRequestStatus({\n          success: false,\n          message: 'You cannot chat with yourself.'\n        });\n      }\n      return;\n    }\n    \n    setChatRequestSending(true);\n    setChatRequestStatus({\n      success: null,\n      message: `Sending chat request...`\n    });\n    \n    // Use a small timeout to allow UI to update before API call\n    setTimeout(() => {\n      sendChatRequest(userId)\n        .then(() => {\n          setChatRequestStatus({\n            success: true,\n            message: `Chat request sent to ${username || 'user'}!`\n          });\n          \n          // Queue notification refresh after successful request\n          setTimeout(() => {\n            if (fetchNotifications) fetchNotifications(true);\n          }, 100);\n        })\n        .catch((error) => {\n          setChatRequestStatus({\n            success: false,\n            message: `Failed to send chat request: ${error.message || 'Unknown error'}`\n          });\n        })\n        .finally(() => {\n          setChatRequestSending(false);\n          // Clear status message after a delay\n          setTimeout(() => {\n            setChatRequestStatus(null);\n          }, 5000);\n        });\n    }, 50);\n  }, [user, sendChatRequest, fetchNotifications, chatRequestSending]);\n\n  // Handle refresh button click - debounced\n  const handleRefresh = useCallback(debounce(async () => {\n    if (isLoading) return;\n    \n    try {\n      setIsLoading(true);\n      \n      // Stagger requests to prevent UI blocking\n      setTimeout(async () => {\n        if (fetchNotifications) {\n          await fetchNotifications(true).catch(e => console.error('Notification refresh error:', e));\n        }\n        \n        setTimeout(async () => {\n          if (forceRefreshData) {\n            await forceRefreshData().catch(e => console.error('Data refresh error:', e));\n          } else {\n            await Promise.all([\n              fetchLiveUsers().catch(e => console.error('User fetch error:', e)),\n              fetchLivePaths().catch(e => console.error('Path fetch error:', e)),\n              fetchUsersAlongPath().catch(e => console.error('Users along path fetch error:', e))\n            ]);\n          }\n          \n          setLastUpdated(new Date());\n          setIsLoading(false);\n        }, 50);\n      }, 10);\n    } catch (error) {\n      console.error('Refresh failed:', error);\n      setIsLoading(false);\n    }\n  }, 300), [fetchNotifications, forceRefreshData, fetchLiveUsers, fetchLivePaths, fetchUsersAlongPath, isLoading]);\n\n  // Optimized notification toggle\n  const toggleNotifications = useCallback(() => {\n    // Update UI immediately\n    setShowNotifications(prev => !prev);\n    \n    // If we're opening the panel and not already loading, fetch notifications\n    if (!showNotifications && !notificationLoading && fetchNotifications) {\n      setNotificationLoading(true);\n      \n      // Delay API call to allow UI to update first\n      requestAnimationFrame(() => {\n        fetchNotifications(true)\n          .catch(err => console.error('Notification refresh error:', err))\n          .finally(() => setNotificationLoading(false));\n      });\n    }\n  }, [showNotifications, notificationLoading, fetchNotifications]);\n\n  // Fetch active chats on mount, with dependency optimization\n  useEffect(() => {\n    if (user && fetchActiveChats && !isLoading) {\n      fetchActiveChats().catch(e => console.error('Error fetching chats:', e));\n    }\n  }, [user, fetchActiveChats, isLoading]);\n\n  // Optimized effect for initial data load\n  useEffect(() => {\n    if (!user || !isInitialLoad.current) return;\n    \n    const loadInitialData = async () => {\n      setIsLoading(true);\n      \n      try {\n        // Load data sequentially to prevent UI blocking\n        await fetchLiveUsers().catch(e => console.error('Error loading users:', e));\n        await fetchLivePaths().catch(e => console.error('Error loading paths:', e));\n        await fetchUsersAlongPath().catch(e => console.error('Error loading users along path:', e));\n        setLastUpdated(new Date());\n      } catch (error) {\n        console.error('Initial data load error:', error);\n      } finally {\n        setIsLoading(false);\n        isInitialLoad.current = false;\n      }\n    };\n    \n    loadInitialData();\n    \n    // Setup periodic refresh that respects loading state\n    let isMounted = true;\n    let timeoutId = null;\n    \n    const loadMapData = async () => {\n      if (!isMounted || isLoading) {\n        // Schedule next update\n        timeoutId = setTimeout(loadMapData, 60000);\n        return;\n      }\n      \n      try {\n        const timeSinceUpdate = new Date() - lastUpdated;\n        if (timeSinceUpdate > 30000) { // 30 seconds minimum\n          setIsLoading(true);\n          await fetchLiveUsers().catch(e => console.error('Background user fetch error:', e));\n          await fetchLivePaths().catch(e => console.error('Background path fetch error:', e));\n          await fetchUsersAlongPath().catch(e => console.error('Background users along path fetch error:', e));\n          if (isMounted) {\n            setLastUpdated(new Date());\n            setIsLoading(false);\n          }\n        }\n      } catch (error) {\n        console.error('Background refresh error:', error);\n        if (isMounted) setIsLoading(false);\n      }\n      \n      // Schedule next update\n      if (isMounted) {\n        timeoutId = setTimeout(loadMapData, 60000);\n      }\n    };\n    \n    // Start the refresh cycle after initial load\n    timeoutId = setTimeout(loadMapData, 60000);\n    \n    return () => {\n      isMounted = false;\n      if (timeoutId) clearTimeout(timeoutId);\n    };\n  }, [user, fetchLiveUsers, fetchLivePaths, fetchUsersAlongPath, isLoading, lastUpdated]);\n\n  // Optimized effect to process user data without blocking UI\n  useEffect(() => {\n    if (!liveUsers || !Array.isArray(liveUsers) || dataProcessingRef.current) return;\n    \n    // Prevent concurrent processing\n    dataProcessingRef.current = true;\n    \n    // Process in next frame to avoid blocking UI\n    requestAnimationFrame(() => {\n      try {\n        // Filter users with valid coordinates\n        const filtered = liveUsers.filter(u => {\n          const lat = parseFloat(u.latitude);\n          const lng = parseFloat(u.longitude);\n          return !isNaN(lat) && !isNaN(lng) && \n                 Math.abs(lat) <= 90 && Math.abs(lng) <= 180;\n        });\n        \n        // Update center only if we have users and it has changed\n        if (filtered.length > 0) {\n          const totalLat = filtered.reduce((sum, u) => sum + parseFloat(u.latitude), 0);\n          const totalLng = filtered.reduce((sum, u) => sum + parseFloat(u.longitude), 0);\n          \n          const newCenter = [\n            totalLat / filtered.length,\n            totalLng / filtered.length\n          ];\n          \n          // Only update ref if center has changed significantly\n          if (Math.abs(newCenter[0] - mapCenter.current[0]) > 0.001 || \n              Math.abs(newCenter[1] - mapCenter.current[1]) > 0.001) {\n            mapCenter.current = newCenter;\n          }\n        }\n        \n        setUsersWithLocation(filtered);\n      } catch (err) {\n        console.error('Error processing user data:', err);\n        setUsersWithLocation([]);\n      } finally {\n        dataProcessingRef.current = false;\n      }\n    });\n  }, [liveUsers]);\n\n  // Memoized path processing\n  const processedPaths = useMemo(() => {\n    if (!livePaths) return [];\n    \n    try {\n      // Batch process paths\n      const parsed = livePaths.map(path => ({\n        ...path,\n        parsedRoute: parseRouteData(path.route)\n      })).filter(path => path.parsedRoute && path.parsedRoute.length > 0);\n      \n      return parsed;\n    } catch (err) {\n      console.error('Error processing paths:', err);\n      return [];\n    }\n  }, [livePaths]);\n  \n  // Update path state, but only when processed data changes\n  useEffect(() => {\n    setPathsWithCoordinates(processedPaths);\n  }, [processedPaths]);\n\n  // Optimized toggle functions\n  const toggleRouteMode = useCallback(() => {\n    setRouteMode(prev => !prev);\n    setSelectedSource(null);\n  }, []);\n\n  const handleCreatePath = useCallback((source, destination) => {\n    if (createPath) {\n      createPath(source, destination);\n    }\n    setRouteMode(false);\n    setSelectedSource(null);\n  }, [createPath]);\n\n  const handleToggleIntersectionFilter = useCallback(() => {\n    if (toggleIntersectionFilter) {\n      toggleIntersectionFilter();\n    }\n  }, [toggleIntersectionFilter]);\n\n  // Memoized time formatter for better performance\n  const formatTime = useCallback((date) => {\n    if (!(date instanceof Date)) {\n      try {\n        date = new Date(date);\n      } catch (e) {\n        return 'Unknown';\n      }\n    }\n    return date.toLocaleTimeString();\n  }, []);\n\n  // Memoized center point calculation\n  const mapCenterPoint = useMemo(() => {\n    if (usersWithLocation.length > 0) {\n      return mapCenter.current;\n    } else {\n      return [37.7749, -122.4194]; // Default to San Francisco\n    }\n  }, [usersWithLocation]);\n\n  // Filter users to not show those already in usersAlongPath\n  const filteredUsers = useMemo(() => {\n    if (!usersWithLocation || !usersAlongPath) return usersWithLocation;\n    \n    // Create a Set of user IDs from usersAlongPath for fast lookup\n    const pathUserIds = new Set(usersAlongPath.map(u => u.id));\n    \n    // Filter out users that are in usersAlongPath\n    return usersWithLocation.filter(u => !pathUserIds.has(u.id));\n  }, [usersWithLocation, usersAlongPath]);\n\n  return (\n    <div className=\"map-container\">\n      <div className=\"map-header\">\n        <h3>Live User Map</h3>\n        <div className=\"map-controls\">\n          <div className=\"notification-controls\">\n            <NotificationButton \n              notificationCount={notifications ? notifications.length : 0}\n              onClick={toggleNotifications}\n              isLoading={notificationLoading}\n            />\n            \n            {/* Manual refresh button */}\n            <button \n              className={`refresh-button ${isLoading ? 'loading' : ''}`}\n              onClick={handleRefresh}\n              title=\"Refresh map data\"\n              disabled={isLoading}\n            >\n              <FontAwesomeIcon icon={faSync} className={isLoading ? 'rotating' : ''} />\n            </button>\n            \n            {/* Filter button */}\n            <button\n              className={`filter-button ${showIntersectingOnly ? 'active' : ''}`}\n              onClick={handleToggleIntersectionFilter}\n              title=\"Show only paths that intersect with your route\"\n            >\n              {showIntersectingOnly ? 'Show All' : 'Show Intersecting'}\n            </button>\n            \n            {/* Path users proximity control - NEW */}\n            <button\n              className={`path-users-button ${usersAlongPath.length > 0 ? 'has-users' : ''}`}\n              onClick={() => setShowRadiusControl(prev => !prev)}\n              title=\"Users along your path\"\n            >\n              <FontAwesomeIcon icon={faMapMarkerAlt} /> Path Users ({usersAlongPath.length})\n            </button>\n          </div>\n          \n          <button \n            className={`route-button ${routeMode ? 'active' : ''}`} \n            onClick={toggleRouteMode}\n          >\n            {routeMode ? 'Cancel Route' : 'Create Route'}\n          </button>\n          \n          {routeMode && !selectedSource && (\n            <div className=\"route-instructions\">Click to set starting point</div>\n          )}\n          \n          {routeMode && selectedSource && (\n            <div className=\"route-instructions\">Click to set destination</div>\n          )}\n          \n          <span className=\"last-updated\">\n            Updated: {formatTime(lastUpdated)}\n          </span>\n        </div>\n      </div>\n      \n      {/* Chat request status message */}\n      {chatRequestStatus && (\n        <div className={`chat-request-status ${chatRequestStatus.success === true ? 'success' : chatRequestStatus.success === false ? 'error' : 'pending'}`}>\n          {chatRequestStatus.message}\n        </div>\n      )}\n      \n      {/* Show notifications panel when toggled */}\n      {showNotifications && (\n        <NotificationsPanel onClose={() => setShowNotifications(false)} />\n      )}\n      \n      {/* Show radius control panel when toggled - NEW */}\n      {showRadiusControl && (\n        <div className=\"radius-control-panel\">\n          <h4>Users Along Path Settings</h4>\n          <label>\n            Proximity Radius: {proximityRadius}m\n            <input \n              type=\"range\" \n              min=\"100\" \n              max=\"2000\" \n              step=\"100\" \n              value={proximityRadius} \n              onChange={handleRadiusChange}\n            />\n          </label>\n          <div className=\"radius-info\">\n            Shows users within {proximityRadius}m of your path.\n          </div>\n          <button \n            className=\"refresh-users-button\"\n            onClick={() => fetchUsersAlongPath(true)}\n            disabled={isLoading}\n          >\n            <FontAwesomeIcon icon={faSync} className={isLoading ? 'rotating' : ''} /> \n            Refresh Users\n          </button>\n          <button \n            className=\"close-panel-button\"\n            onClick={() => setShowRadiusControl(false)}\n          >\n            Close\n          </button>\n        </div>\n      )}\n      \n      {/* Intersection filter info message */}\n      {showIntersectingOnly && pathsWithCoordinates.length === 0 && (\n        <div className=\"intersection-filter-info\">\n          <i className=\"fas fa-info-circle\"></i> \n          No intersecting paths found.\n        </div>\n      )}\n      \n      <MapContainer \n        center={mapCenterPoint} \n        zoom={4} \n        style={{ height: '600px', width: '100%' }}\n        ref={mapRef}\n        preferCanvas={true} // Use canvas renderer for better performance\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        \n        {/* Map click handler for route creation */}\n        <MapClickHandler \n          routeMode={routeMode} \n          selectedSource={selectedSource} \n          setSelectedSource={setSelectedSource} \n          createPath={handleCreatePath}\n          setClickPoint={setClickPoint}\n        />\n        \n        {/* Regular user markers - Skip those in usersAlongPath */}\n        {filteredUsers.slice(0, 100).map(u => (\n          <UserMarker\n            key={`user-${u.id}`}\n            user={u}\n            currentUser={user}\n            handleChatRequest={handleChatRequest}\n            chatRequestSending={chatRequestSending}\n            formatTime={formatTime}\n            createCustomIcon={createCustomIcon}\n          />\n        ))}\n\n        {/* Users along path markers - NEW */}\n        {usersAlongPath.map(u => (\n          <PathUserMarker \n            key={`path-user-${u.id}`}\n            user={u}\n            currentUser={user}\n            handleChatRequest={handleChatRequest}\n            chatRequestSending={chatRequestSending}\n            formatTime={formatTime}\n          />\n        ))}\n\n        {/* Display route source marker if in route mode */}\n        {routeMode && selectedSource && (\n          <Marker \n            key=\"source-marker\"\n            position={[selectedSource.lat, selectedSource.lng]}\n            icon={createCustomIcon('#00C853')}\n            zIndexOffset={1000} // This ensures the source marker is on top of other markers\n          >\n            <Popup>\n              <div className=\"route-marker-popup\">\n                <strong>Starting Point</strong>\n                <div>Lat: {selectedSource.lat.toFixed(6)}</div>\n                <div>Lng: {selectedSource.lng.toFixed(6)}</div>\n              </div>\n            </Popup>\n          </Marker>\n        )}\n        \n        {/* Display paths with performance optimizations */}\n        {pathsWithCoordinates.slice(0, 50).map((path, idx) => (\n          <RoutePolyline \n            key={`path-${path.id || idx}`}\n            path={path}\n            idx={idx}\n            currentUserId={user?.id}\n            formatTime={formatTime}\n          />\n        ))}\n\n        {/* Show click point indicator */}\n        {clickPoint && (\n          <CircleMarker\n            center={[clickPoint.lat, clickPoint.lng]}\n            radius={5}\n            color=\"#3388ff\"\n            fill={true}\n            fillColor=\"#3388ff\"\n            fillOpacity={0.5}\n          />\n        )}\n        \n        {/* Map bounds updater component - Updated to include usersAlongPath */}\n        <MapBoundsUpdater \n          users={filteredUsers} \n          paths={pathsWithCoordinates}\n          usersAlongPath={usersAlongPath}\n        />\n      </MapContainer>\n      \n      <div className=\"map-legend\">\n        <h4>Map Legend</h4>\n        <div className=\"legend-items\">\n          <div className=\"legend-item\">\n            <div className=\"legend-marker\" style={{ backgroundColor: '#4285F4' }}></div>\n            <span>Your location</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-marker\" style={{ backgroundColor: '#FF5722' }}></div>\n            <span>Other users</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-marker\" style={{ backgroundColor: '#4CAF50' }}></div>\n            <span>Users along your path</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-line\" style={{ backgroundColor: '#2196F3' }}></div>\n            <span>Your path</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-line\" style={{ backgroundColor: '#4CAF50' }}></div>\n            <span>Intersecting paths</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-line\" style={{ backgroundColor: '#FF5722' }}></div>\n            <span>Other users' paths</span>\n          </div>\n          {routeMode && (\n            <div className=\"legend-item\">\n              <div className=\"legend-marker\" style={{ backgroundColor: '#00C853' }}></div>\n              <span>Starting point</span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Display path information and active chats panel */}\n      <div className=\"map-info-panel\">\n        <h4>Statistics</h4>\n        <div className=\"map-stats\">\n          <div className=\"stat-item\">\n            <strong>Active Users:</strong> {usersWithLocation.length}\n          </div>\n          <div className=\"stat-item\">\n            <strong>Active Paths:</strong> {pathsWithCoordinates.length}\n          </div>\n          <div className=\"stat-item\">\n            <strong>Last Updated:</strong> {formatTime(lastUpdated)}\n          </div>\n        </div>\n        \n        {/* Active Chats Panel */}\n        <div className=\"active-chats\">\n          <h4>\n            <FontAwesomeIcon icon={faComments} /> Active Chats\n          </h4>\n          <div className=\"chats-list\">\n            {activeChats && activeChats.length > 0 ? (\n              activeChats.map(chat => (\n                <div \n                  key={chat.id} \n                  className=\"chat-item\"\n                  onClick={() => openChat(chat.id)}\n                >\n                  <div className=\"chat-user\">\n                    {chat.otherParticipants && chat.otherParticipants.length > 0 \n                      ? chat.otherParticipants[0].username \n                      : 'Unknown User'}\n                  </div>\n                  {chat.unreadCount > 0 && (\n                    <span className=\"unread-badge\">{chat.unreadCount}</span>\n                  )}\n                </div>\n              ))\n            ) : (\n              <div className=\"no-chats\">No active chats</div>\n            )}\n          </div>\n        </div>\n        \n        {/* Users Along Path Panel - NEW */}\n        {usersAlongPath.length > 0 && (\n          <div className=\"users-along-path\">\n            <h4>\n              <FontAwesomeIcon icon={faMapMarkerAlt} /> Users Along Your Path ({usersAlongPath.length})\n            </h4>\n            <div className=\"users-list\">\n              {usersAlongPath.map(u => (\n                <div \n                  key={`path-user-${u.id}`} \n                  className=\"user-item\"\n                  onClick={() => handleChatRequest(u.id, u.username)}\n                >\n                  <div className=\"user-name\">{u.username}</div>\n                  <div className=\"user-distance\">\n                    {u.distance_to_path ? `${Math.round(u.distance_to_path)}m from path` : ''}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n        \n        {pathsWithCoordinates.length > 0 && (\n          <div className=\"recent-paths\">\n            <h4>Recent Paths</h4>\n            <div className=\"paths-list\">\n              {pathsWithCoordinates.slice(0, 3).map((path, idx) => (\n                <div key={idx} className={`path-item ${path.intersects_with_user ? 'intersecting' : ''}`}>\n                  <div className=\"path-header\">\n                    <strong>{path.username || 'Unknown user'}</strong>\n                    <span>{formatTime(path.created_at)}</span>\n                  </div>\n                  {path.intersects_with_user && (\n                    <div className=\"intersect-badge\">Intersects with your route</div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Chat dialog */}\n      {currentChat && <ChatDialog />}\n    </div>\n  );\n};\n\nexport default React.memo(UserLocationMap);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}