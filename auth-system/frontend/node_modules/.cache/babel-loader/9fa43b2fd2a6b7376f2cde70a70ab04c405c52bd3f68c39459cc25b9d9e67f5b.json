{"ast":null,"code":"var _jsxFileName = \"/home/anubhav/Desktop/project_6/auth-system/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Create the context with a default value\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Simulate API calls\n  const api = {\n    post: async (url, data) => {\n      console.log(`API POST to ${url}:`, data);\n      if (url === '/auth/login') {\n        return {\n          data: {\n            token: 'fake-jwt-token',\n            user: {\n              id: 1,\n              username: 'itsanubhav009',\n              email: 'anubhav@example.com',\n              full_name: 'Anubhav',\n              created_at: '2025-03-25T12:00:00Z'\n            }\n          }\n        };\n      }\n      return {\n        data: {\n          success: true\n        }\n      };\n    },\n    get: async url => {\n      console.log(`API GET to ${url}`);\n      if (url === '/auth/profile') {\n        return {\n          data: {\n            id: 1,\n            username: 'itsanubhav009',\n            email: 'anubhav@example.com',\n            full_name: 'Anubhav',\n            created_at: '2025-03-25T12:00:00Z'\n          }\n        };\n      }\n      return {\n        data: {}\n      };\n    }\n  };\n\n  // Check if user is logged in on component mount\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      // Check if token exists in localStorage\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          // Fetch the user profile with the token\n          const response = await api.get('/auth/profile');\n          setUser(response.data);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Error validating token:', error);\n          // Invalid token, clear it\n          localStorage.removeItem('token');\n          setIsAuthenticated(false);\n          setUser(null);\n        }\n      }\n      setLoading(false);\n    };\n    checkLoggedIn();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Save token to localStorage\n      localStorage.setItem('token', token);\n\n      // Update state\n      setUser(user);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed. Please try again.'\n      };\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed. Please try again.'\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n\n    // Update state\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // For development purposes, let's auto-login\n  useEffect(() => {\n    if (!isAuthenticated && !loading) {\n      // Auto-login for development\n      const autoLogin = async () => {\n        await login('anubhav@example.com', 'password');\n      };\n      autoLogin();\n    }\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      loading,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"b4+7DbNXBEPJ9yvfWqnHeolhh+c=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","api","post","url","data","console","log","token","id","username","email","full_name","created_at","success","get","checkLoggedIn","localStorage","getItem","response","error","removeItem","login","password","setItem","_error$response","_error$response$data","message","register","userData","_error$response2","_error$response2$data","logout","autoLogin","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/anubhav/Desktop/project_6/auth-system/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\n// Create the context with a default value\nexport const AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Simulate API calls\n  const api = {\n    post: async (url, data) => {\n      console.log(`API POST to ${url}:`, data);\n      if (url === '/auth/login') {\n        return { \n          data: { \n            token: 'fake-jwt-token',\n            user: {\n              id: 1,\n              username: 'itsanubhav009',\n              email: 'anubhav@example.com',\n              full_name: 'Anubhav',\n              created_at: '2025-03-25T12:00:00Z'\n            }\n          }\n        };\n      }\n      return { data: { success: true } };\n    },\n    get: async (url) => {\n      console.log(`API GET to ${url}`);\n      if (url === '/auth/profile') {\n        return { \n          data: { \n            id: 1,\n            username: 'itsanubhav009',\n            email: 'anubhav@example.com',\n            full_name: 'Anubhav',\n            created_at: '2025-03-25T12:00:00Z'\n          } \n        };\n      }\n      return { data: {} };\n    }\n  };\n\n  // Check if user is logged in on component mount\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      // Check if token exists in localStorage\n      const token = localStorage.getItem('token');\n      \n      if (token) {\n        try {\n          // Fetch the user profile with the token\n          const response = await api.get('/auth/profile');\n          setUser(response.data);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Error validating token:', error);\n          // Invalid token, clear it\n          localStorage.removeItem('token');\n          setIsAuthenticated(false);\n          setUser(null);\n        }\n      }\n      \n      setLoading(false);\n    };\n    \n    checkLoggedIn();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', { email, password });\n      const { token, user } = response.data;\n      \n      // Save token to localStorage\n      localStorage.setItem('token', token);\n      \n      // Update state\n      setUser(user);\n      setIsAuthenticated(true);\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Login error:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Login failed. Please try again.' \n      };\n    }\n  };\n\n  // Register function\n  const register = async (userData) => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      return { success: true, data: response.data };\n    } catch (error) {\n      console.error('Registration error:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Registration failed. Please try again.' \n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n    \n    // Update state\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // For development purposes, let's auto-login\n  useEffect(() => {\n    if (!isAuthenticated && !loading) {\n      // Auto-login for development\n      const autoLogin = async () => {\n        await login('anubhav@example.com', 'password');\n      };\n      autoLogin();\n    }\n  }, [loading]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        login,\n        register,\n        logout\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}