{"ast":null,"code":"var _jsxFileName = \"/home/projectwork/project/project_6/auth-system/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport api from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          const response = await api.get('/auth/profile');\n          setUser(response.data);\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        // Token might be expired or invalid\n        localStorage.removeItem('token');\n        setUser(null);\n        setIsAuthenticated(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkLoggedIn();\n  }, []);\n\n  // Register user\n  const register = async userData => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.post('/auth/register', userData);\n      localStorage.setItem('token', response.data.token);\n      setUser(response.data);\n      setIsAuthenticated(true);\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login user\n  const login = async userData => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.post('/auth/login', userData);\n      localStorage.setItem('token', response.data.token);\n      setUser(response.data);\n      setIsAuthenticated(true);\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout user - UPDATED to mark user as offline first\n  const logout = async () => {\n    try {\n      setLoading(true);\n\n      // First mark the user as offline before logging out\n      const token = localStorage.getItem('token');\n      if (token && user) {\n        try {\n          console.log('Marking user as offline before logout');\n          await api.post('/location/offline');\n          console.log('User marked as offline successfully');\n        } catch (error) {\n          console.error('Failed to mark user as offline:', error);\n          // Continue with logout even if this fails\n        }\n      }\n\n      // Then proceed with logout\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setUser(null);\n      setIsAuthenticated(false);\n      console.log('User logged out successfully');\n    } catch (error) {\n      console.error('Logout error:', error);\n      setError('Logout failed: ' + (error.message || 'Unknown error'));\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      loading,\n      error,\n      register,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"UiON1ZH++zn0GBf7+ry+rtRn1s8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","isAuthenticated","setIsAuthenticated","checkLoggedIn","token","localStorage","getItem","response","get","data","removeItem","register","userData","post","setItem","_error$response","_error$response$data","message","login","_error$response2","_error$response2$data","logout","console","log","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/projectwork/project/project_6/auth-system/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport api from '../utils/api';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        \n        if (token) {\n          const response = await api.get('/auth/profile');\n          setUser(response.data);\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        // Token might be expired or invalid\n        localStorage.removeItem('token');\n        setUser(null);\n        setIsAuthenticated(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n\n  // Register user\n  const register = async (userData) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await api.post('/auth/register', userData);\n      localStorage.setItem('token', response.data.token);\n      setUser(response.data);\n      setIsAuthenticated(true);\n      \n      return response.data;\n    } catch (error) {\n      setError(error.response?.data?.message || 'Registration failed');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login user\n  const login = async (userData) => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      const response = await api.post('/auth/login', userData);\n      localStorage.setItem('token', response.data.token);\n      setUser(response.data);\n      setIsAuthenticated(true);\n      \n      return response.data;\n    } catch (error) {\n      setError(error.response?.data?.message || 'Login failed');\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout user - UPDATED to mark user as offline first\n  const logout = async () => {\n    try {\n      setLoading(true);\n      \n      // First mark the user as offline before logging out\n      const token = localStorage.getItem('token');\n      if (token && user) {\n        try {\n          console.log('Marking user as offline before logout');\n          await api.post('/location/offline');\n          console.log('User marked as offline successfully');\n        } catch (error) {\n          console.error('Failed to mark user as offline:', error);\n          // Continue with logout even if this fails\n        }\n      }\n      \n      // Then proceed with logout\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setUser(null);\n      setIsAuthenticated(false);\n      \n      console.log('User logged out successfully');\n    } catch (error) {\n      console.error('Logout error:', error);\n      setError('Logout failed: ' + (error.message || 'Unknown error'));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        error,\n        register,\n        login,\n        logout,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}