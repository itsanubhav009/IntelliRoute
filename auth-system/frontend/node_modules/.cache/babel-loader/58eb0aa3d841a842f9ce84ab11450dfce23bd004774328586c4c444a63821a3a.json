{"ast":null,"code":"var _jsxFileName = \"/home/anubhav/Desktop/project_6/auth-system/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport api from '../utils/api';\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is logged in on component mount\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      // Check if token exists in localStorage\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          // Try different variations of the profile endpoint\n          try {\n            // First try with /api prefix\n            const response = await api.get('/api/auth/profile');\n            setUser(response.data);\n            setIsAuthenticated(true);\n            console.log(\"Profile fetched with /api prefix\");\n          } catch (innerError) {\n            // Then try without /api prefix\n            const response = await api.get('/auth/profile');\n            setUser(response.data);\n            setIsAuthenticated(true);\n            console.log(\"Profile fetched without /api prefix\");\n          }\n        } catch (error) {\n          console.error('Error validating token:', error);\n          // Invalid token, clear it\n          localStorage.removeItem('token');\n          setIsAuthenticated(false);\n          setUser(null);\n        }\n      }\n      setLoading(false);\n    };\n    checkLoggedIn();\n  }, []);\n\n  // Login function with multiple endpoint attempts\n  const login = async (email, password) => {\n    try {\n      // Try different variations of the login endpoint\n      let response;\n      try {\n        // First try with /api prefix\n        console.log(\"Attempting login with /api prefix\");\n        response = await api.post('/api/auth/login', {\n          email,\n          password\n        });\n      } catch (innerError) {\n        if (innerError.response && innerError.response.status === 404) {\n          // Then try without /api prefix\n          console.log(\"First attempt failed, trying without /api prefix\");\n          response = await api.post('/auth/login', {\n            email,\n            password\n          });\n        } else {\n          throw innerError;\n        }\n      }\n      const {\n        token,\n        user\n      } = response.data;\n\n      // Save token to localStorage\n      localStorage.setItem('token', token);\n\n      // Update state\n      setUser(user);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed. Please try again.'\n      };\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      // Try different variations of the register endpoint\n      let response;\n      try {\n        // First try with /api prefix\n        response = await api.post('/api/auth/register', userData);\n      } catch (innerError) {\n        if (innerError.response && innerError.response.status === 404) {\n          // Then try without /api prefix\n          response = await api.post('/auth/register', userData);\n        } else {\n          throw innerError;\n        }\n      }\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed. Please try again.'\n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n\n    // Update state\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      loading,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"MIOyihIJe1jbesOAPrjh1+/HIzc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","loading","setLoading","checkLoggedIn","token","localStorage","getItem","response","get","data","console","log","innerError","error","removeItem","login","email","password","post","status","setItem","success","_error$response","_error$response$data","message","register","userData","_error$response2","_error$response2$data","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/anubhav/Desktop/project_6/auth-system/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport api from '../utils/api';\n\n// Create the context\nexport const AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is logged in on component mount\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      // Check if token exists in localStorage\n      const token = localStorage.getItem('token');\n      \n      if (token) {\n        try {\n          // Try different variations of the profile endpoint\n          try {\n            // First try with /api prefix\n            const response = await api.get('/api/auth/profile');\n            setUser(response.data);\n            setIsAuthenticated(true);\n            console.log(\"Profile fetched with /api prefix\");\n          } catch (innerError) {\n            // Then try without /api prefix\n            const response = await api.get('/auth/profile');\n            setUser(response.data);\n            setIsAuthenticated(true);\n            console.log(\"Profile fetched without /api prefix\");\n          }\n        } catch (error) {\n          console.error('Error validating token:', error);\n          // Invalid token, clear it\n          localStorage.removeItem('token');\n          setIsAuthenticated(false);\n          setUser(null);\n        }\n      }\n      \n      setLoading(false);\n    };\n    \n    checkLoggedIn();\n  }, []);\n\n  // Login function with multiple endpoint attempts\n  const login = async (email, password) => {\n    try {\n      // Try different variations of the login endpoint\n      let response;\n      try {\n        // First try with /api prefix\n        console.log(\"Attempting login with /api prefix\");\n        response = await api.post('/api/auth/login', { email, password });\n      } catch (innerError) {\n        if (innerError.response && innerError.response.status === 404) {\n          // Then try without /api prefix\n          console.log(\"First attempt failed, trying without /api prefix\");\n          response = await api.post('/auth/login', { email, password });\n        } else {\n          throw innerError;\n        }\n      }\n      \n      const { token, user } = response.data;\n      \n      // Save token to localStorage\n      localStorage.setItem('token', token);\n      \n      // Update state\n      setUser(user);\n      setIsAuthenticated(true);\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Login error:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Login failed. Please try again.' \n      };\n    }\n  };\n\n  // Register function\n  const register = async (userData) => {\n    try {\n      // Try different variations of the register endpoint\n      let response;\n      try {\n        // First try with /api prefix\n        response = await api.post('/api/auth/register', userData);\n      } catch (innerError) {\n        if (innerError.response && innerError.response.status === 404) {\n          // Then try without /api prefix\n          response = await api.post('/auth/register', userData);\n        } else {\n          throw innerError;\n        }\n      }\n      \n      return { success: true, data: response.data };\n    } catch (error) {\n      console.error('Registration error:', error);\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Registration failed. Please try again.' \n      };\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n    \n    // Update state\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        user,\n        loading,\n        login,\n        register,\n        logout\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}