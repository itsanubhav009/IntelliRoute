{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base URL and longer timeout\nconst api = axios.create({\n  baseURL: 'http://localhost:5000',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 15000 // 15 seconds\n});\n\n// Add a request interceptor to attach the JWT token to every request\napi.interceptors.request.use(config => {\n  var _config$method;\n  // Log all requests for debugging\n  console.log(`API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`, config.data);\n\n  // Get token from localStorage\n  const token = localStorage.getItem('token');\n\n  // If token exists, add it to the Authorization header\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle common errors\napi.interceptors.response.use(response => {\n  // Log all successful responses\n  console.log(`API Response Success: ${response.status}`, response.data);\n  return response;\n}, error => {\n  // Log detailed error information\n  if (error.response) {\n    console.error(`API Error ${error.response.status}:`, error.response.data);\n    console.error('Full error response:', error.response);\n  } else if (error.request) {\n    console.error('API Error: No response received', error.request);\n  } else {\n    console.error('API Error:', error.message);\n  }\n\n  // Handle 401 Unauthorized errors (token expired or invalid)\n  if (error.response && error.response.status === 401) {\n    // Clear localStorage only if not a login/register request\n    if (!error.config.url.includes('login') && !error.config.url.includes('register')) {\n      localStorage.removeItem('token');\n\n      // Only redirect if not already on login page\n      if (!window.location.pathname.includes('/login')) {\n        window.location.href = '/login';\n      }\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","timeout","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","data","token","localStorage","getItem","error","Promise","reject","response","status","message","includes","removeItem","window","location","pathname","href"],"sources":["/home/anubhav/Desktop/project_6/auth-system/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base URL and longer timeout\nconst api = axios.create({\n  baseURL: 'http://localhost:5000',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  timeout: 15000 // 15 seconds\n});\n\n// Add a request interceptor to attach the JWT token to every request\napi.interceptors.request.use(\n  (config) => {\n    // Log all requests for debugging\n    console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`, config.data);\n    \n    // Get token from localStorage\n    const token = localStorage.getItem('token');\n    \n    // If token exists, add it to the Authorization header\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    \n    return config;\n  },\n  (error) => {\n    console.error('API Request Error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor to handle common errors\napi.interceptors.response.use(\n  (response) => {\n    // Log all successful responses\n    console.log(`API Response Success: ${response.status}`, response.data);\n    return response;\n  },\n  (error) => {\n    // Log detailed error information\n    if (error.response) {\n      console.error(`API Error ${error.response.status}:`, error.response.data);\n      console.error('Full error response:', error.response);\n    } else if (error.request) {\n      console.error('API Error: No response received', error.request);\n    } else {\n      console.error('API Error:', error.message);\n    }\n    \n    // Handle 401 Unauthorized errors (token expired or invalid)\n    if (error.response && error.response.status === 401) {\n      // Clear localStorage only if not a login/register request\n      if (!error.config.url.includes('login') && !error.config.url.includes('register')) {\n        localStorage.removeItem('token');\n        \n        // Only redirect if not already on login page\n        if (!window.location.pathname.includes('/login')) {\n          window.location.href = '/login';\n        }\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,OAAO,EAAE,KAAK,CAAC;AACjB,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EAAA,IAAAC,cAAA;EACV;EACAC,OAAO,CAACC,GAAG,CAAC,iBAAAF,cAAA,GAAgBD,MAAM,CAACI,MAAM,cAAAH,cAAA,uBAAbA,cAAA,CAAeI,WAAW,CAAC,CAAC,IAAIL,MAAM,CAACM,GAAG,EAAE,EAAEN,MAAM,CAACO,IAAI,CAAC;;EAEtF;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;EAE3C;EACA,IAAIF,KAAK,EAAE;IACTR,MAAM,CAACL,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUa,KAAK,EAAE;EACrD;EAEA,OAAOR,MAAM;AACf,CAAC,EACAW,KAAK,IAAK;EACTT,OAAO,CAACS,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;EAC1C,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAnB,GAAG,CAACK,YAAY,CAACiB,QAAQ,CAACf,GAAG,CAC1Be,QAAQ,IAAK;EACZ;EACAZ,OAAO,CAACC,GAAG,CAAC,yBAAyBW,QAAQ,CAACC,MAAM,EAAE,EAAED,QAAQ,CAACP,IAAI,CAAC;EACtE,OAAOO,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACT;EACA,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClBZ,OAAO,CAACS,KAAK,CAAC,aAAaA,KAAK,CAACG,QAAQ,CAACC,MAAM,GAAG,EAAEJ,KAAK,CAACG,QAAQ,CAACP,IAAI,CAAC;IACzEL,OAAO,CAACS,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACG,QAAQ,CAAC;EACvD,CAAC,MAAM,IAAIH,KAAK,CAACb,OAAO,EAAE;IACxBI,OAAO,CAACS,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACb,OAAO,CAAC;EACjE,CAAC,MAAM;IACLI,OAAO,CAACS,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACK,OAAO,CAAC;EAC5C;;EAEA;EACA,IAAIL,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACnD;IACA,IAAI,CAACJ,KAAK,CAACX,MAAM,CAACM,GAAG,CAACW,QAAQ,CAAC,OAAO,CAAC,IAAI,CAACN,KAAK,CAACX,MAAM,CAACM,GAAG,CAACW,QAAQ,CAAC,UAAU,CAAC,EAAE;MACjFR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;;MAEhC;MACA,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACJ,QAAQ,CAAC,QAAQ,CAAC,EAAE;QAChDE,MAAM,CAACC,QAAQ,CAACE,IAAI,GAAG,QAAQ;MACjC;IACF;EACF;EAEA,OAAOV,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAenB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}