{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\n\n// Hook for enhanced console logging\nconst useConsoleLogger = (name, data, dependencies) => {\n  _s();\n  useEffect(() => {\n    // Create a collapsible group in console\n    console.group(`${name} - ${new Date().toLocaleTimeString()}`);\n\n    // Log the data\n    if (typeof data === 'function') {\n      console.log(data());\n    } else {\n      console.log(data);\n    }\n    console.groupEnd();\n  }, dependencies);\n};\n_s(useConsoleLogger, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useConsoleLogger;","map":{"version":3,"names":["useEffect","useConsoleLogger","name","data","dependencies","_s","console","group","Date","toLocaleTimeString","log","groupEnd"],"sources":["/home/anubhav/project_6/auth-system/frontend/src/hooks/useConsoleLogger.js"],"sourcesContent":["import { useEffect } from 'react';\n\n// Hook for enhanced console logging\nconst useConsoleLogger = (name, data, dependencies) => {\n  useEffect(() => {\n    // Create a collapsible group in console\n    console.group(`${name} - ${new Date().toLocaleTimeString()}`);\n    \n    // Log the data\n    if (typeof data === 'function') {\n      console.log(data());\n    } else {\n      console.log(data);\n    }\n    \n    console.groupEnd();\n  }, dependencies);\n};\n\nexport default useConsoleLogger;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;;AAEjC;AACA,MAAMC,gBAAgB,GAAGA,CAACC,IAAI,EAAEC,IAAI,EAAEC,YAAY,KAAK;EAAAC,EAAA;EACrDL,SAAS,CAAC,MAAM;IACd;IACAM,OAAO,CAACC,KAAK,CAAC,GAAGL,IAAI,MAAM,IAAIM,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAAE,CAAC;;IAE7D;IACA,IAAI,OAAON,IAAI,KAAK,UAAU,EAAE;MAC9BG,OAAO,CAACI,GAAG,CAACP,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM;MACLG,OAAO,CAACI,GAAG,CAACP,IAAI,CAAC;IACnB;IAEAG,OAAO,CAACK,QAAQ,CAAC,CAAC;EACpB,CAAC,EAAEP,YAAY,CAAC;AAClB,CAAC;AAACC,EAAA,CAdIJ,gBAAgB;AAgBtB,eAAeA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}