{"ast":null,"code":"var _jsxFileName = \"/home/anubhav/project_6/auth-system/frontend/src/components/UserLocationMap.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect, useState, useContext, useRef, useMemo, useCallback } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, useMap, useMapEvents } from 'react-leaflet';\nimport { LocationContext } from '../context/LocationContext';\nimport { AuthContext } from '../context/AuthContext';\nimport { ChatContext } from '../context/ChatContext';\nimport ChatDialog from './ChatDialog';\nimport NotificationsPanel from './NotificationsPanel';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './UserLocationMap.css';\nimport NotificationButton from './NotificationButton';\n// Fix for default icons\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComments, faSync, faComment, faUser, faBell } from '@fortawesome/free-solid-svg-icons';\n\n// Define default Leaflet icon\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\n\n// Debounce function to limit how often a function can be called\nconst debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// Optimized parse route function with caching\nconst routeCache = new Map();\nconst parseRouteData = routeData => {\n  if (!routeData) return [];\n\n  // Check cache first\n  const cacheKey = typeof routeData === 'string' ? routeData : JSON.stringify(routeData);\n  if (routeCache.has(cacheKey)) {\n    return routeCache.get(cacheKey);\n  }\n  let result = [];\n\n  // LINESTRING parsing\n  if (typeof routeData === 'string' && routeData.startsWith('LINESTRING')) {\n    try {\n      // Extract coordinates from LINESTRING(lng lat, lng lat, ...)\n      const coordsStr = routeData.substring(routeData.indexOf('(') + 1, routeData.lastIndexOf(')'));\n      result = coordsStr.split(',').map(pair => {\n        const [lng, lat] = pair.trim().split(' ').map(parseFloat);\n        // Return [lat, lng] for Leaflet\n        return [lat, lng];\n      });\n    } catch (e) {\n      console.error('Error parsing LINESTRING:', e);\n      result = [];\n    }\n  } else if (Array.isArray(routeData)) {\n    result = routeData;\n  }\n\n  // Store in cache for future calls\n  routeCache.set(cacheKey, result);\n  return result;\n};\n\n// Memoized MapBoundsUpdater component\nconst MapBoundsUpdater = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(({\n  users,\n  paths\n}) => {\n  _s();\n  const map = useMap();\n  const boundsRef = useRef(null);\n  useEffect(() => {\n    if (!users.length && !paths.length) return;\n\n    // Skip if bounds calculation already in progress\n    if (boundsRef.current) return;\n\n    // Defer bounds calculation to next animation frame\n    boundsRef.current = requestAnimationFrame(() => {\n      try {\n        const points = [];\n\n        // Add user points\n        users.forEach(user => {\n          if (user.latitude && user.longitude) {\n            points.push([user.latitude, user.longitude]);\n          }\n        });\n\n        // Add path points more efficiently\n        paths.forEach(path => {\n          if (path.parsedRoute && Array.isArray(path.parsedRoute)) {\n            const routePoints = path.parsedRoute;\n            if (routePoints.length > 0) {\n              points.push(routePoints[0]); // First point\n\n              if (routePoints.length > 10) {\n                // Just sample a few points instead of processing all\n                points.push(routePoints[Math.floor(routePoints.length / 3)]);\n                points.push(routePoints[Math.floor(routePoints.length * 2 / 3)]);\n              }\n              if (routePoints.length > 1) {\n                points.push(routePoints[routePoints.length - 1]); // Last point\n              }\n            }\n          }\n        });\n        if (points.length > 0) {\n          const bounds = L.latLngBounds(points);\n          map.fitBounds(bounds, {\n            padding: [50, 50],\n            animate: false\n          }); // Disable animation for better performance\n        }\n      } catch (error) {\n        console.error('Error updating map bounds:', error);\n      }\n      boundsRef.current = null;\n    });\n    return () => {\n      if (boundsRef.current) {\n        cancelAnimationFrame(boundsRef.current);\n        boundsRef.current = null;\n      }\n    };\n  }, [users, paths, map]);\n  return null;\n}, \"/hf1KhZkzXgk31qaD7g+Tz1BcsQ=\", false, function () {\n  return [useMap];\n})), \"/hf1KhZkzXgk31qaD7g+Tz1BcsQ=\", false, function () {\n  return [useMap];\n});\n\n// Component to handle map clicks for route creation - optimized with useCallback\n_c2 = MapBoundsUpdater;\nfunction MapClickHandler({\n  routeMode,\n  selectedSource,\n  setSelectedSource,\n  createPath\n}) {\n  _s2();\n  const handleClick = useCallback(e => {\n    if (!routeMode) return;\n    const {\n      lat,\n      lng\n    } = e.latlng;\n    if (!selectedSource) {\n      setSelectedSource({\n        lat,\n        lng\n      });\n    } else {\n      const destination = {\n        lat,\n        lng\n      };\n      createPath(selectedSource, destination);\n    }\n  }, [routeMode, selectedSource, setSelectedSource, createPath]);\n  useMapEvents({\n    click: handleClick\n  });\n  return null;\n}\n\n// Memoized marker component to prevent unnecessary re-renders\n_s2(MapClickHandler, \"RKTe5pWvujnW7hpA8dwjfcW91eo=\", false, function () {\n  return [useMapEvents];\n});\n_c3 = MapClickHandler;\nconst UserMarker = /*#__PURE__*/React.memo(_c4 = ({\n  user,\n  currentUser,\n  handleChatRequest,\n  chatRequestSending,\n  formatTime,\n  createCustomIcon\n}) => {\n  // Parse coordinates once\n  const lat = parseFloat(user.latitude);\n  const lng = parseFloat(user.longitude);\n\n  // Skip invalid coordinates\n  if (isNaN(lat) || isNaN(lng) || Math.abs(lat) > 90 || Math.abs(lng) > 180) {\n    return null;\n  }\n  const markerIcon = user.id === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) ? createCustomIcon('#4285F4') : createCustomIcon('#FF5722');\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    position: [lat, lng],\n    icon: markerIcon,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), \" \", user.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), \"Online\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-location\",\n          children: [\"Coordinates: \", lat.toFixed(4), \", \", lng.toFixed(4)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-last-active\",\n          children: [\"Last active: \", formatTime(user.last_active)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), user.id === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-user-tag\",\n          children: \"This is you\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"chat-request-button\",\n            onClick: () => handleChatRequest(user.id, user.username),\n            disabled: chatRequestSending,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faComment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), \" Chat with \", user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)\n  }, `user-${user.id}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n});\n\n// Memoized path component to prevent unnecessary re-renders\n_c5 = UserMarker;\nconst RoutePolyline = /*#__PURE__*/React.memo(_c6 = ({\n  path,\n  idx,\n  currentUserId,\n  formatTime\n}) => {\n  return /*#__PURE__*/_jsxDEV(Polyline, {\n    positions: path.parsedRoute,\n    color: path.user_id === currentUserId ? '#2196F3' : path.intersects_with_user ? '#4CAF50' : '#FF5722',\n    weight: 4,\n    opacity: 0.7,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"path-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Route Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"User:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 14\n          }, this), \" \", path.username || 'Unknown']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Created:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 14\n          }, this), \" \", formatTime(path.created_at)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), path.intersects_with_user && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"intersecting-path-notice\",\n          children: \"This path intersects with your route!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), path.parsedRoute.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"From:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 18\n            }, this), \" \", path.parsedRoute[0][0].toFixed(4), \", \", path.parsedRoute[0][1].toFixed(4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"To:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 18\n            }, this), \" \", path.parsedRoute[path.parsedRoute.length - 1][0].toFixed(4), \", \", path.parsedRoute[path.parsedRoute.length - 1][1].toFixed(4)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Points:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 18\n            }, this), \" \", path.parsedRoute.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)\n  }, `path-${path.id || idx}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n});\n_c7 = RoutePolyline;\nconst UserLocationMap = () => {\n  _s3();\n  const {\n    liveUsers,\n    fetchLiveUsers,\n    livePaths,\n    fetchLivePaths,\n    createPath,\n    showIntersectingOnly,\n    toggleIntersectionFilter,\n    forceRefreshData\n  } = useContext(LocationContext);\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    sendChatRequest,\n    notifications,\n    currentChat,\n    openChat,\n    activeChats,\n    fetchActiveChats,\n    fetchNotifications\n  } = useContext(ChatContext);\n  const [usersWithLocation, setUsersWithLocation] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastUpdated, setLastUpdated] = useState(new Date());\n  const [pathsWithCoordinates, setPathsWithCoordinates] = useState([]);\n  const [routeMode, setRouteMode] = useState(false);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [chatRequestSending, setChatRequestSending] = useState(false);\n  const [chatRequestStatus, setChatRequestStatus] = useState(null);\n  const [notificationLoading, setNotificationLoading] = useState(false);\n  const mapRef = useRef(null);\n  const mapCenter = useRef([37.7749, -122.4194]);\n  const isInitialLoad = useRef(true);\n  const dataProcessingRef = useRef(false);\n\n  // Fixed createCustomIcon function - memoized for performance\n  const createCustomIcon = useCallback(color => {\n    return L.divIcon({\n      className: 'custom-div-icon',\n      html: `<div class=\"marker-pin\" style=\"background-color: ${color};\"></div>`,\n      iconSize: [30, 42],\n      iconAnchor: [15, 42]\n    });\n  }, []);\n\n  // Optimized chat request handler\n  const handleChatRequest = useCallback((userId, username) => {\n    if (!userId || userId === (user === null || user === void 0 ? void 0 : user.id) || chatRequestSending) {\n      if (userId === (user === null || user === void 0 ? void 0 : user.id)) {\n        setChatRequestStatus({\n          success: false,\n          message: 'You cannot chat with yourself.'\n        });\n      }\n      return;\n    }\n    setChatRequestSending(true);\n    setChatRequestStatus({\n      success: null,\n      message: `Sending chat request...`\n    });\n\n    // Use a small timeout to allow UI to update before API call\n    setTimeout(() => {\n      sendChatRequest(userId).then(() => {\n        setChatRequestStatus({\n          success: true,\n          message: `Chat request sent to ${username || 'user'}!`\n        });\n\n        // Queue notification refresh after successful request\n        setTimeout(() => {\n          if (fetchNotifications) fetchNotifications(true);\n        }, 100);\n      }).catch(error => {\n        setChatRequestStatus({\n          success: false,\n          message: `Failed to send chat request: ${error.message || 'Unknown error'}`\n        });\n      }).finally(() => {\n        setChatRequestSending(false);\n        // Clear status message after a delay\n        setTimeout(() => {\n          setChatRequestStatus(null);\n        }, 5000);\n      });\n    }, 50);\n  }, [user, sendChatRequest, fetchNotifications, chatRequestSending]);\n\n  // Handle refresh button click - debounced\n  const handleRefresh = useCallback(debounce(async () => {\n    if (isLoading) return;\n    try {\n      setIsLoading(true);\n\n      // Stagger requests to prevent UI blocking\n      setTimeout(async () => {\n        if (fetchNotifications) {\n          await fetchNotifications(true).catch(e => console.error('Notification refresh error:', e));\n        }\n        setTimeout(async () => {\n          if (forceRefreshData) {\n            await forceRefreshData().catch(e => console.error('Data refresh error:', e));\n          } else {\n            await Promise.all([fetchLiveUsers().catch(e => console.error('User fetch error:', e)), fetchLivePaths().catch(e => console.error('Path fetch error:', e))]);\n          }\n          setLastUpdated(new Date());\n          setIsLoading(false);\n        }, 50);\n      }, 10);\n    } catch (error) {\n      console.error('Refresh failed:', error);\n      setIsLoading(false);\n    }\n  }, 300), [fetchNotifications, forceRefreshData, fetchLiveUsers, fetchLivePaths, isLoading]);\n\n  // Optimized notification toggle\n  const toggleNotifications = useCallback(() => {\n    // Update UI immediately\n    setShowNotifications(prev => !prev);\n\n    // If we're opening the panel and not already loading, fetch notifications\n    if (!showNotifications && !notificationLoading && fetchNotifications) {\n      setNotificationLoading(true);\n\n      // Delay API call to allow UI to update first\n      requestAnimationFrame(() => {\n        fetchNotifications(true).catch(err => console.error('Notification refresh error:', err)).finally(() => setNotificationLoading(false));\n      });\n    }\n  }, [showNotifications, notificationLoading, fetchNotifications]);\n\n  // Fetch active chats on mount, with dependency optimization\n  useEffect(() => {\n    if (user && fetchActiveChats && !isLoading) {\n      fetchActiveChats().catch(e => console.error('Error fetching chats:', e));\n    }\n  }, [user, fetchActiveChats, isLoading]);\n\n  // Optimized effect for initial data load\n  useEffect(() => {\n    if (!user || !isInitialLoad.current) return;\n    const loadInitialData = async () => {\n      setIsLoading(true);\n      try {\n        // Load data sequentially to prevent UI blocking\n        await fetchLiveUsers().catch(e => console.error('Error loading users:', e));\n        await fetchLivePaths().catch(e => console.error('Error loading paths:', e));\n        setLastUpdated(new Date());\n      } catch (error) {\n        console.error('Initial data load error:', error);\n      } finally {\n        setIsLoading(false);\n        isInitialLoad.current = false;\n      }\n    };\n    loadInitialData();\n\n    // Setup periodic refresh that respects loading state\n    let isMounted = true;\n    let timeoutId = null;\n    const loadMapData = async () => {\n      if (!isMounted || isLoading) {\n        // Schedule next update\n        timeoutId = setTimeout(loadMapData, 60000);\n        return;\n      }\n      try {\n        const timeSinceUpdate = new Date() - lastUpdated;\n        if (timeSinceUpdate > 30000) {\n          // 30 seconds minimum\n          setIsLoading(true);\n          await fetchLiveUsers().catch(e => console.error('Background user fetch error:', e));\n          await fetchLivePaths().catch(e => console.error('Background path fetch error:', e));\n          if (isMounted) {\n            setLastUpdated(new Date());\n            setIsLoading(false);\n          }\n        }\n      } catch (error) {\n        console.error('Background refresh error:', error);\n        if (isMounted) setIsLoading(false);\n      }\n\n      // Schedule next update\n      if (isMounted) {\n        timeoutId = setTimeout(loadMapData, 60000);\n      }\n    };\n\n    // Start the refresh cycle after initial load\n    timeoutId = setTimeout(loadMapData, 60000);\n    return () => {\n      isMounted = false;\n      if (timeoutId) clearTimeout(timeoutId);\n    };\n  }, [user, fetchLiveUsers, fetchLivePaths, isLoading, lastUpdated]);\n\n  // Optimized effect to process user data without blocking UI\n  useEffect(() => {\n    if (!liveUsers || !Array.isArray(liveUsers) || dataProcessingRef.current) return;\n\n    // Prevent concurrent processing\n    dataProcessingRef.current = true;\n\n    // Process in next frame to avoid blocking UI\n    requestAnimationFrame(() => {\n      try {\n        // Filter users with valid coordinates\n        const filtered = liveUsers.filter(u => {\n          const lat = parseFloat(u.latitude);\n          const lng = parseFloat(u.longitude);\n          return !isNaN(lat) && !isNaN(lng) && Math.abs(lat) <= 90 && Math.abs(lng) <= 180;\n        });\n\n        // Update center only if we have users and it has changed\n        if (filtered.length > 0) {\n          const totalLat = filtered.reduce((sum, u) => sum + parseFloat(u.latitude), 0);\n          const totalLng = filtered.reduce((sum, u) => sum + parseFloat(u.longitude), 0);\n          const newCenter = [totalLat / filtered.length, totalLng / filtered.length];\n\n          // Only update ref if center has changed significantly\n          if (Math.abs(newCenter[0] - mapCenter.current[0]) > 0.001 || Math.abs(newCenter[1] - mapCenter.current[1]) > 0.001) {\n            mapCenter.current = newCenter;\n          }\n        }\n        setUsersWithLocation(filtered);\n      } catch (err) {\n        console.error('Error processing user data:', err);\n        setUsersWithLocation([]);\n      } finally {\n        dataProcessingRef.current = false;\n      }\n    });\n  }, [liveUsers]);\n\n  // Memoized path processing\n  const processedPaths = useMemo(() => {\n    if (!livePaths) return [];\n    try {\n      // Batch process paths\n      const parsed = livePaths.map(path => ({\n        ...path,\n        parsedRoute: parseRouteData(path.route)\n      })).filter(path => path.parsedRoute && path.parsedRoute.length > 0);\n      return parsed;\n    } catch (err) {\n      console.error('Error processing paths:', err);\n      return [];\n    }\n  }, [livePaths]);\n\n  // Update path state, but only when processed data changes\n  useEffect(() => {\n    setPathsWithCoordinates(processedPaths);\n  }, [processedPaths]);\n\n  // Optimized toggle functions\n  const toggleRouteMode = useCallback(() => {\n    setRouteMode(prev => !prev);\n    setSelectedSource(null);\n  }, []);\n  const handleCreatePath = useCallback((source, destination) => {\n    if (createPath) {\n      createPath(source, destination);\n    }\n    setRouteMode(false);\n    setSelectedSource(null);\n  }, [createPath]);\n  const handleToggleIntersectionFilter = useCallback(() => {\n    if (toggleIntersectionFilter) {\n      toggleIntersectionFilter();\n    }\n  }, [toggleIntersectionFilter]);\n\n  // Memoized time formatter for better performance\n  const formatTime = useCallback(date => {\n    if (!(date instanceof Date)) {\n      try {\n        date = new Date(date);\n      } catch (e) {\n        return 'Unknown';\n      }\n    }\n    return date.toLocaleTimeString();\n  }, []);\n\n  // Memoized center point calculation\n  const mapCenterPoint = useMemo(() => {\n    if (usersWithLocation.length > 0) {\n      return mapCenter.current;\n    } else {\n      return [37.7749, -122.4194]; // Default to San Francisco\n    }\n  }, [usersWithLocation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Live User Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-controls\",\n          children: [/*#__PURE__*/_jsxDEV(NotificationButton, {\n            notificationCount: notifications ? notifications.length : 0,\n            onClick: toggleNotifications,\n            isLoading: notificationLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `refresh-button ${isLoading ? 'loading' : ''}`,\n            onClick: handleRefresh,\n            title: \"Refresh map data\",\n            disabled: isLoading,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSync,\n              className: isLoading ? 'rotating' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `filter-button ${showIntersectingOnly ? 'active' : ''}`,\n            onClick: handleToggleIntersectionFilter,\n            title: \"Show only paths that intersect with your route\",\n            children: showIntersectingOnly ? 'Show All' : 'Show Intersecting'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `route-button ${routeMode ? 'active' : ''}`,\n          onClick: toggleRouteMode,\n          children: routeMode ? 'Cancel Route' : 'Create Route'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 11\n        }, this), routeMode && !selectedSource && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-instructions\",\n          children: \"Click to set starting point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 13\n        }, this), routeMode && selectedSource && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-instructions\",\n          children: \"Click to set destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"last-updated\",\n          children: [\"Updated: \", formatTime(lastUpdated)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 7\n    }, this), chatRequestStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-request-status ${chatRequestStatus.success === true ? 'success' : chatRequestStatus.success === false ? 'error' : 'pending'}`,\n      children: chatRequestStatus.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 9\n    }, this), showNotifications && /*#__PURE__*/_jsxDEV(NotificationsPanel, {\n      onClose: () => setShowNotifications(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 9\n    }, this), showIntersectingOnly && pathsWithCoordinates.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"intersection-filter-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-info-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 11\n      }, this), \"No intersecting paths found.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: mapCenterPoint,\n      zoom: 4,\n      style: {\n        height: '600px',\n        width: '100%'\n      },\n      ref: mapRef,\n      preferCanvas: true // Use canvas renderer for better performance\n      ,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapClickHandler, {\n        routeMode: routeMode,\n        selectedSource: selectedSource,\n        setSelectedSource: setSelectedSource,\n        createPath: handleCreatePath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 9\n      }, this), usersWithLocation.slice(0, 100).map(u => /*#__PURE__*/_jsxDEV(UserMarker, {\n        user: u,\n        currentUser: user,\n        handleChatRequest: handleChatRequest,\n        chatRequestSending: chatRequestSending,\n        formatTime: formatTime,\n        createCustomIcon: createCustomIcon\n      }, `user-${u.id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 11\n      }, this)), routeMode && selectedSource && /*#__PURE__*/_jsxDEV(Marker, {\n        position: [selectedSource.lat, selectedSource.lng],\n        icon: createCustomIcon('#00C853'),\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"Starting point\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 11\n      }, this), pathsWithCoordinates.slice(0, 50).map((path, idx) => /*#__PURE__*/_jsxDEV(RoutePolyline, {\n        path: path,\n        idx: idx,\n        currentUserId: user === null || user === void 0 ? void 0 : user.id,\n        formatTime: formatTime\n      }, `path-${path.id || idx}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(MapBoundsUpdater, {\n        users: usersWithLocation,\n        paths: pathsWithCoordinates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-legend\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Map Legend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"legend-items\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-marker\",\n            style: {\n              backgroundColor: '#4285F4'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Your location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-marker\",\n            style: {\n              backgroundColor: '#FF5722'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Other users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-line\",\n            style: {\n              backgroundColor: '#2196F3'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Your path\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-line\",\n            style: {\n              backgroundColor: '#4CAF50'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Intersecting paths\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-line\",\n            style: {\n              backgroundColor: '#FF5722'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Other users' paths\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 11\n        }, this), routeMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-marker\",\n            style: {\n              backgroundColor: '#00C853'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Starting point\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-info-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Active Users:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 13\n          }, this), \" \", usersWithLocation.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Active Paths:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 13\n          }, this), \" \", pathsWithCoordinates.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Last Updated:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 13\n          }, this), \" \", formatTime(lastUpdated)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"active-chats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faComments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 13\n          }, this), \" Active Chats\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chats-list\",\n          children: activeChats && activeChats.length > 0 ? activeChats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-item\",\n            onClick: () => openChat(chat.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-user\",\n              children: chat.otherParticipants && chat.otherParticipants.length > 0 ? chat.otherParticipants[0].username : 'Unknown User'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 19\n            }, this), chat.unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"unread-badge\",\n              children: chat.unreadCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 21\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-chats\",\n            children: \"No active chats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 9\n      }, this), pathsWithCoordinates.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recent-paths\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Recent Paths\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"paths-list\",\n          children: pathsWithCoordinates.slice(0, 3).map((path, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `path-item ${path.intersects_with_user ? 'intersecting' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"path-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: path.username || 'Unknown user'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 793,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: formatTime(path.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 19\n            }, this), path.intersects_with_user && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"intersect-badge\",\n              children: \"Intersects with your route\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 21\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 7\n    }, this), currentChat && /*#__PURE__*/_jsxDEV(ChatDialog, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 577,\n    columnNumber: 5\n  }, this);\n};\n_s3(UserLocationMap, \"iGrvdwA337GKLCdOcnqHowi2UD4=\");\n_c8 = UserLocationMap;\nexport default _c9 = /*#__PURE__*/React.memo(UserLocationMap);\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"MapBoundsUpdater$React.memo\");\n$RefreshReg$(_c2, \"MapBoundsUpdater\");\n$RefreshReg$(_c3, \"MapClickHandler\");\n$RefreshReg$(_c4, \"UserMarker$React.memo\");\n$RefreshReg$(_c5, \"UserMarker\");\n$RefreshReg$(_c6, \"RoutePolyline$React.memo\");\n$RefreshReg$(_c7, \"RoutePolyline\");\n$RefreshReg$(_c8, \"UserLocationMap\");\n$RefreshReg$(_c9, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useRef","useMemo","useCallback","MapContainer","TileLayer","Marker","Popup","Polyline","useMap","useMapEvents","LocationContext","AuthContext","ChatContext","ChatDialog","NotificationsPanel","L","NotificationButton","icon","iconShadow","FontAwesomeIcon","faComments","faSync","faComment","faUser","faBell","jsxDEV","_jsxDEV","Fragment","_Fragment","DefaultIcon","iconUrl","shadowUrl","iconSize","iconAnchor","prototype","options","debounce","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout","routeCache","Map","parseRouteData","routeData","cacheKey","JSON","stringify","has","get","result","startsWith","coordsStr","substring","indexOf","lastIndexOf","split","map","pair","lng","lat","trim","parseFloat","e","console","error","Array","isArray","set","MapBoundsUpdater","_s","memo","_c","users","paths","boundsRef","length","current","requestAnimationFrame","points","forEach","user","latitude","longitude","push","path","parsedRoute","routePoints","Math","floor","bounds","latLngBounds","fitBounds","padding","animate","cancelAnimationFrame","_c2","MapClickHandler","routeMode","selectedSource","setSelectedSource","createPath","_s2","handleClick","latlng","destination","click","_c3","UserMarker","_c4","currentUser","handleChatRequest","chatRequestSending","formatTime","createCustomIcon","isNaN","abs","markerIcon","id","position","children","className","fileName","_jsxFileName","lineNumber","columnNumber","username","toFixed","last_active","onClick","disabled","_c5","RoutePolyline","_c6","idx","currentUserId","positions","color","user_id","intersects_with_user","weight","opacity","created_at","_c7","UserLocationMap","_s3","liveUsers","fetchLiveUsers","livePaths","fetchLivePaths","showIntersectingOnly","toggleIntersectionFilter","forceRefreshData","sendChatRequest","notifications","currentChat","openChat","activeChats","fetchActiveChats","fetchNotifications","usersWithLocation","setUsersWithLocation","isLoading","setIsLoading","lastUpdated","setLastUpdated","Date","pathsWithCoordinates","setPathsWithCoordinates","setRouteMode","showNotifications","setShowNotifications","setChatRequestSending","chatRequestStatus","setChatRequestStatus","notificationLoading","setNotificationLoading","mapRef","mapCenter","isInitialLoad","dataProcessingRef","divIcon","html","userId","success","message","then","catch","finally","handleRefresh","Promise","all","toggleNotifications","prev","err","loadInitialData","isMounted","timeoutId","loadMapData","timeSinceUpdate","filtered","filter","u","totalLat","reduce","sum","totalLng","newCenter","processedPaths","parsed","route","toggleRouteMode","handleCreatePath","source","handleToggleIntersectionFilter","date","toLocaleTimeString","mapCenterPoint","notificationCount","title","onClose","center","zoom","style","height","width","ref","preferCanvas","attribution","url","slice","backgroundColor","chat","otherParticipants","unreadCount","_c8","_c9","$RefreshReg$"],"sources":["/home/anubhav/project_6/auth-system/frontend/src/components/UserLocationMap.js"],"sourcesContent":["import React, { useEffect, useState, useContext, useRef, useMemo, useCallback } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, useMap, useMapEvents } from 'react-leaflet';\nimport { LocationContext } from '../context/LocationContext';\nimport { AuthContext } from '../context/AuthContext';\nimport { ChatContext } from '../context/ChatContext';\nimport ChatDialog from './ChatDialog';\nimport NotificationsPanel from './NotificationsPanel';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './UserLocationMap.css';\nimport NotificationButton from './NotificationButton';\n// Fix for default icons\nimport icon from 'leaflet/dist/images/marker-icon.png';\nimport iconShadow from 'leaflet/dist/images/marker-shadow.png';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComments, faSync, faComment, faUser, faBell } from '@fortawesome/free-solid-svg-icons';\n\n// Define default Leaflet icon\nlet DefaultIcon = L.icon({\n  iconUrl: icon,\n  shadowUrl: iconShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41]\n});\n\nL.Marker.prototype.options.icon = DefaultIcon;\n\n// Debounce function to limit how often a function can be called\nconst debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n// Optimized parse route function with caching\nconst routeCache = new Map();\nconst parseRouteData = (routeData) => {\n  if (!routeData) return [];\n  \n  // Check cache first\n  const cacheKey = typeof routeData === 'string' ? routeData : JSON.stringify(routeData);\n  if (routeCache.has(cacheKey)) {\n    return routeCache.get(cacheKey);\n  }\n  \n  let result = [];\n  \n  // LINESTRING parsing\n  if (typeof routeData === 'string' && routeData.startsWith('LINESTRING')) {\n    try {\n      // Extract coordinates from LINESTRING(lng lat, lng lat, ...)\n      const coordsStr = routeData.substring(routeData.indexOf('(') + 1, routeData.lastIndexOf(')'));\n      result = coordsStr.split(',').map(pair => {\n        const [lng, lat] = pair.trim().split(' ').map(parseFloat);\n        // Return [lat, lng] for Leaflet\n        return [lat, lng]; \n      });\n    } catch (e) {\n      console.error('Error parsing LINESTRING:', e);\n      result = [];\n    }\n  } else if (Array.isArray(routeData)) {\n    result = routeData;\n  }\n  \n  // Store in cache for future calls\n  routeCache.set(cacheKey, result);\n  return result;\n};\n\n// Memoized MapBoundsUpdater component\nconst MapBoundsUpdater = React.memo(({ users, paths }) => {\n  const map = useMap();\n  const boundsRef = useRef(null);\n  \n  useEffect(() => {\n    if (!users.length && !paths.length) return;\n    \n    // Skip if bounds calculation already in progress\n    if (boundsRef.current) return;\n    \n    // Defer bounds calculation to next animation frame\n    boundsRef.current = requestAnimationFrame(() => {\n      try {\n        const points = [];\n        \n        // Add user points\n        users.forEach(user => {\n          if (user.latitude && user.longitude) {\n            points.push([user.latitude, user.longitude]);\n          }\n        });\n        \n        // Add path points more efficiently\n        paths.forEach(path => {\n          if (path.parsedRoute && Array.isArray(path.parsedRoute)) {\n            const routePoints = path.parsedRoute;\n            if (routePoints.length > 0) {\n              points.push(routePoints[0]); // First point\n              \n              if (routePoints.length > 10) {\n                // Just sample a few points instead of processing all\n                points.push(routePoints[Math.floor(routePoints.length / 3)]);\n                points.push(routePoints[Math.floor(routePoints.length * 2 / 3)]);\n              }\n              \n              if (routePoints.length > 1) {\n                points.push(routePoints[routePoints.length - 1]); // Last point\n              }\n            }\n          }\n        });\n        \n        if (points.length > 0) {\n          const bounds = L.latLngBounds(points);\n          map.fitBounds(bounds, { padding: [50, 50], animate: false }); // Disable animation for better performance\n        }\n      } catch (error) {\n        console.error('Error updating map bounds:', error);\n      }\n      \n      boundsRef.current = null;\n    });\n    \n    return () => {\n      if (boundsRef.current) {\n        cancelAnimationFrame(boundsRef.current);\n        boundsRef.current = null;\n      }\n    };\n  }, [users, paths, map]);\n  \n  return null;\n});\n\n// Component to handle map clicks for route creation - optimized with useCallback\nfunction MapClickHandler({ routeMode, selectedSource, setSelectedSource, createPath }) {\n  const handleClick = useCallback((e) => {\n    if (!routeMode) return;\n    \n    const { lat, lng } = e.latlng;\n    \n    if (!selectedSource) {\n      setSelectedSource({ lat, lng });\n    } else {\n      const destination = { lat, lng };\n      createPath(selectedSource, destination);\n    }\n  }, [routeMode, selectedSource, setSelectedSource, createPath]);\n  \n  useMapEvents({\n    click: handleClick\n  });\n  \n  return null;\n}\n\n// Memoized marker component to prevent unnecessary re-renders\nconst UserMarker = React.memo(({ user, currentUser, handleChatRequest, chatRequestSending, formatTime, createCustomIcon }) => {\n  // Parse coordinates once\n  const lat = parseFloat(user.latitude);\n  const lng = parseFloat(user.longitude);\n  \n  // Skip invalid coordinates\n  if (isNaN(lat) || isNaN(lng) || Math.abs(lat) > 90 || Math.abs(lng) > 180) {\n    return null;\n  }\n  \n  const markerIcon = user.id === currentUser?.id ? \n    createCustomIcon('#4285F4') : createCustomIcon('#FF5722');\n  \n  return (\n    <Marker \n      key={`user-${user.id}`} \n      position={[lat, lng]}\n      icon={markerIcon}\n    >\n      <Popup>\n        <div className=\"user-popup\">\n          <h3><FontAwesomeIcon icon={faUser} /> {user.username}</h3>\n          <div className=\"user-status\">\n            <span className=\"status-dot\"></span>\n            Online\n          </div>\n          <div className=\"user-location\">\n            Coordinates: {lat.toFixed(4)}, {lng.toFixed(4)}\n          </div>\n          <div className=\"user-last-active\">\n            Last active: {formatTime(user.last_active)}\n          </div>\n          \n          {user.id === currentUser?.id ? (\n            <div className=\"current-user-tag\">This is you</div>\n          ) : (\n            <div className=\"chat-button-container\">\n              <button \n                className=\"chat-request-button\"\n                onClick={() => handleChatRequest(user.id, user.username)}\n                disabled={chatRequestSending}\n              >\n                <FontAwesomeIcon icon={faComment} /> Chat with {user.username}\n              </button>\n            </div>\n          )}\n        </div>\n      </Popup>\n    </Marker>\n  );\n});\n\n// Memoized path component to prevent unnecessary re-renders\nconst RoutePolyline = React.memo(({ path, idx, currentUserId, formatTime }) => {\n  return (\n    <Polyline \n      key={`path-${path.id || idx}`} \n      positions={path.parsedRoute} \n      color={path.user_id === currentUserId ? '#2196F3' : (path.intersects_with_user ? '#4CAF50' : '#FF5722')} \n      weight={4}\n      opacity={0.7}\n    >\n      <Popup>\n        <div className=\"path-popup\">\n          <h4>Route Information</h4>\n          <p><strong>User:</strong> {path.username || 'Unknown'}</p>\n          <p><strong>Created:</strong> {formatTime(path.created_at)}</p>\n          {path.intersects_with_user && (\n            <p className=\"intersecting-path-notice\">This path intersects with your route!</p>\n          )}\n          {path.parsedRoute.length > 0 && (\n            <>\n              <p><strong>From:</strong> {path.parsedRoute[0][0].toFixed(4)}, {path.parsedRoute[0][1].toFixed(4)}</p>\n              <p><strong>To:</strong> {path.parsedRoute[path.parsedRoute.length-1][0].toFixed(4)}, {path.parsedRoute[path.parsedRoute.length-1][1].toFixed(4)}</p>\n              <p><strong>Points:</strong> {path.parsedRoute.length}</p>\n            </>\n          )}\n        </div>\n      </Popup>\n    </Polyline>\n  );\n});\n\nconst UserLocationMap = () => {\n  const { \n    liveUsers, \n    fetchLiveUsers, \n    livePaths, \n    fetchLivePaths, \n    createPath, \n    showIntersectingOnly, \n    toggleIntersectionFilter,\n    forceRefreshData\n  } = useContext(LocationContext);\n  \n  const { user } = useContext(AuthContext);\n  const { \n    sendChatRequest, \n    notifications, \n    currentChat, \n    openChat,\n    activeChats,\n    fetchActiveChats,\n    fetchNotifications\n  } = useContext(ChatContext);\n  \n  const [usersWithLocation, setUsersWithLocation] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [lastUpdated, setLastUpdated] = useState(new Date());\n  const [pathsWithCoordinates, setPathsWithCoordinates] = useState([]);\n  const [routeMode, setRouteMode] = useState(false);\n  const [selectedSource, setSelectedSource] = useState(null);\n  const [showNotifications, setShowNotifications] = useState(false);\n  const [chatRequestSending, setChatRequestSending] = useState(false);\n  const [chatRequestStatus, setChatRequestStatus] = useState(null);\n  const [notificationLoading, setNotificationLoading] = useState(false);\n  \n  const mapRef = useRef(null);\n  const mapCenter = useRef([37.7749, -122.4194]);\n  const isInitialLoad = useRef(true);\n  const dataProcessingRef = useRef(false);\n  \n  // Fixed createCustomIcon function - memoized for performance\n  const createCustomIcon = useCallback((color) => {\n    return L.divIcon({\n      className: 'custom-div-icon',\n      html: `<div class=\"marker-pin\" style=\"background-color: ${color};\"></div>`,\n      iconSize: [30, 42],\n      iconAnchor: [15, 42]\n    });\n  }, []);\n\n  // Optimized chat request handler\n  const handleChatRequest = useCallback((userId, username) => {\n    if (!userId || userId === user?.id || chatRequestSending) {\n      if (userId === user?.id) {\n        setChatRequestStatus({\n          success: false,\n          message: 'You cannot chat with yourself.'\n        });\n      }\n      return;\n    }\n    \n    setChatRequestSending(true);\n    setChatRequestStatus({\n      success: null,\n      message: `Sending chat request...`\n    });\n    \n    // Use a small timeout to allow UI to update before API call\n    setTimeout(() => {\n      sendChatRequest(userId)\n        .then(() => {\n          setChatRequestStatus({\n            success: true,\n            message: `Chat request sent to ${username || 'user'}!`\n          });\n          \n          // Queue notification refresh after successful request\n          setTimeout(() => {\n            if (fetchNotifications) fetchNotifications(true);\n          }, 100);\n        })\n        .catch((error) => {\n          setChatRequestStatus({\n            success: false,\n            message: `Failed to send chat request: ${error.message || 'Unknown error'}`\n          });\n        })\n        .finally(() => {\n          setChatRequestSending(false);\n          // Clear status message after a delay\n          setTimeout(() => {\n            setChatRequestStatus(null);\n          }, 5000);\n        });\n    }, 50);\n  }, [user, sendChatRequest, fetchNotifications, chatRequestSending]);\n\n  // Handle refresh button click - debounced\n  const handleRefresh = useCallback(debounce(async () => {\n    if (isLoading) return;\n    \n    try {\n      setIsLoading(true);\n      \n      // Stagger requests to prevent UI blocking\n      setTimeout(async () => {\n        if (fetchNotifications) {\n          await fetchNotifications(true).catch(e => console.error('Notification refresh error:', e));\n        }\n        \n        setTimeout(async () => {\n          if (forceRefreshData) {\n            await forceRefreshData().catch(e => console.error('Data refresh error:', e));\n          } else {\n            await Promise.all([\n              fetchLiveUsers().catch(e => console.error('User fetch error:', e)),\n              fetchLivePaths().catch(e => console.error('Path fetch error:', e))\n            ]);\n          }\n          \n          setLastUpdated(new Date());\n          setIsLoading(false);\n        }, 50);\n      }, 10);\n    } catch (error) {\n      console.error('Refresh failed:', error);\n      setIsLoading(false);\n    }\n  }, 300), [fetchNotifications, forceRefreshData, fetchLiveUsers, fetchLivePaths, isLoading]);\n\n  // Optimized notification toggle\n  const toggleNotifications = useCallback(() => {\n    // Update UI immediately\n    setShowNotifications(prev => !prev);\n    \n    // If we're opening the panel and not already loading, fetch notifications\n    if (!showNotifications && !notificationLoading && fetchNotifications) {\n      setNotificationLoading(true);\n      \n      // Delay API call to allow UI to update first\n      requestAnimationFrame(() => {\n        fetchNotifications(true)\n          .catch(err => console.error('Notification refresh error:', err))\n          .finally(() => setNotificationLoading(false));\n      });\n    }\n  }, [showNotifications, notificationLoading, fetchNotifications]);\n\n  // Fetch active chats on mount, with dependency optimization\n  useEffect(() => {\n    if (user && fetchActiveChats && !isLoading) {\n      fetchActiveChats().catch(e => console.error('Error fetching chats:', e));\n    }\n  }, [user, fetchActiveChats, isLoading]);\n\n  // Optimized effect for initial data load\n  useEffect(() => {\n    if (!user || !isInitialLoad.current) return;\n    \n    const loadInitialData = async () => {\n      setIsLoading(true);\n      \n      try {\n        // Load data sequentially to prevent UI blocking\n        await fetchLiveUsers().catch(e => console.error('Error loading users:', e));\n        await fetchLivePaths().catch(e => console.error('Error loading paths:', e));\n        setLastUpdated(new Date());\n      } catch (error) {\n        console.error('Initial data load error:', error);\n      } finally {\n        setIsLoading(false);\n        isInitialLoad.current = false;\n      }\n    };\n    \n    loadInitialData();\n    \n    // Setup periodic refresh that respects loading state\n    let isMounted = true;\n    let timeoutId = null;\n    \n    const loadMapData = async () => {\n      if (!isMounted || isLoading) {\n        // Schedule next update\n        timeoutId = setTimeout(loadMapData, 60000);\n        return;\n      }\n      \n      try {\n        const timeSinceUpdate = new Date() - lastUpdated;\n        if (timeSinceUpdate > 30000) { // 30 seconds minimum\n          setIsLoading(true);\n          await fetchLiveUsers().catch(e => console.error('Background user fetch error:', e));\n          await fetchLivePaths().catch(e => console.error('Background path fetch error:', e));\n          if (isMounted) {\n            setLastUpdated(new Date());\n            setIsLoading(false);\n          }\n        }\n      } catch (error) {\n        console.error('Background refresh error:', error);\n        if (isMounted) setIsLoading(false);\n      }\n      \n      // Schedule next update\n      if (isMounted) {\n        timeoutId = setTimeout(loadMapData, 60000);\n      }\n    };\n    \n    // Start the refresh cycle after initial load\n    timeoutId = setTimeout(loadMapData, 60000);\n    \n    return () => {\n      isMounted = false;\n      if (timeoutId) clearTimeout(timeoutId);\n    };\n  }, [user, fetchLiveUsers, fetchLivePaths, isLoading, lastUpdated]);\n\n  // Optimized effect to process user data without blocking UI\n  useEffect(() => {\n    if (!liveUsers || !Array.isArray(liveUsers) || dataProcessingRef.current) return;\n    \n    // Prevent concurrent processing\n    dataProcessingRef.current = true;\n    \n    // Process in next frame to avoid blocking UI\n    requestAnimationFrame(() => {\n      try {\n        // Filter users with valid coordinates\n        const filtered = liveUsers.filter(u => {\n          const lat = parseFloat(u.latitude);\n          const lng = parseFloat(u.longitude);\n          return !isNaN(lat) && !isNaN(lng) && \n                 Math.abs(lat) <= 90 && Math.abs(lng) <= 180;\n        });\n        \n        // Update center only if we have users and it has changed\n        if (filtered.length > 0) {\n          const totalLat = filtered.reduce((sum, u) => sum + parseFloat(u.latitude), 0);\n          const totalLng = filtered.reduce((sum, u) => sum + parseFloat(u.longitude), 0);\n          \n          const newCenter = [\n            totalLat / filtered.length,\n            totalLng / filtered.length\n          ];\n          \n          // Only update ref if center has changed significantly\n          if (Math.abs(newCenter[0] - mapCenter.current[0]) > 0.001 || \n              Math.abs(newCenter[1] - mapCenter.current[1]) > 0.001) {\n            mapCenter.current = newCenter;\n          }\n        }\n        \n        setUsersWithLocation(filtered);\n      } catch (err) {\n        console.error('Error processing user data:', err);\n        setUsersWithLocation([]);\n      } finally {\n        dataProcessingRef.current = false;\n      }\n    });\n  }, [liveUsers]);\n\n  // Memoized path processing\n  const processedPaths = useMemo(() => {\n    if (!livePaths) return [];\n    \n    try {\n      // Batch process paths\n      const parsed = livePaths.map(path => ({\n        ...path,\n        parsedRoute: parseRouteData(path.route)\n      })).filter(path => path.parsedRoute && path.parsedRoute.length > 0);\n      \n      return parsed;\n    } catch (err) {\n      console.error('Error processing paths:', err);\n      return [];\n    }\n  }, [livePaths]);\n  \n  // Update path state, but only when processed data changes\n  useEffect(() => {\n    setPathsWithCoordinates(processedPaths);\n  }, [processedPaths]);\n\n  // Optimized toggle functions\n  const toggleRouteMode = useCallback(() => {\n    setRouteMode(prev => !prev);\n    setSelectedSource(null);\n  }, []);\n\n  const handleCreatePath = useCallback((source, destination) => {\n    if (createPath) {\n      createPath(source, destination);\n    }\n    setRouteMode(false);\n    setSelectedSource(null);\n  }, [createPath]);\n\n  const handleToggleIntersectionFilter = useCallback(() => {\n    if (toggleIntersectionFilter) {\n      toggleIntersectionFilter();\n    }\n  }, [toggleIntersectionFilter]);\n\n  // Memoized time formatter for better performance\n  const formatTime = useCallback((date) => {\n    if (!(date instanceof Date)) {\n      try {\n        date = new Date(date);\n      } catch (e) {\n        return 'Unknown';\n      }\n    }\n    return date.toLocaleTimeString();\n  }, []);\n\n  // Memoized center point calculation\n  const mapCenterPoint = useMemo(() => {\n    if (usersWithLocation.length > 0) {\n      return mapCenter.current;\n    } else {\n      return [37.7749, -122.4194]; // Default to San Francisco\n    }\n  }, [usersWithLocation]);\n\n  return (\n    <div className=\"map-container\">\n      <div className=\"map-header\">\n        <h3>Live User Map</h3>\n        <div className=\"map-controls\">\n          <div className=\"notification-controls\">\n            <NotificationButton \n              notificationCount={notifications ? notifications.length : 0}\n              onClick={toggleNotifications}\n              isLoading={notificationLoading}\n            />\n            \n            {/* Manual refresh button */}\n            <button \n              className={`refresh-button ${isLoading ? 'loading' : ''}`}\n              onClick={handleRefresh}\n              title=\"Refresh map data\"\n              disabled={isLoading}\n            >\n              <FontAwesomeIcon icon={faSync} className={isLoading ? 'rotating' : ''} />\n            </button>\n            \n            {/* Filter button */}\n            <button\n              className={`filter-button ${showIntersectingOnly ? 'active' : ''}`}\n              onClick={handleToggleIntersectionFilter}\n              title=\"Show only paths that intersect with your route\"\n            >\n              {showIntersectingOnly ? 'Show All' : 'Show Intersecting'}\n            </button>\n          </div>\n          \n          <button \n            className={`route-button ${routeMode ? 'active' : ''}`} \n            onClick={toggleRouteMode}\n          >\n            {routeMode ? 'Cancel Route' : 'Create Route'}\n          </button>\n          \n          {routeMode && !selectedSource && (\n            <div className=\"route-instructions\">Click to set starting point</div>\n          )}\n          \n          {routeMode && selectedSource && (\n            <div className=\"route-instructions\">Click to set destination</div>\n          )}\n          \n          <span className=\"last-updated\">\n            Updated: {formatTime(lastUpdated)}\n          </span>\n        </div>\n      </div>\n      \n      {/* Chat request status message */}\n      {chatRequestStatus && (\n        <div className={`chat-request-status ${chatRequestStatus.success === true ? 'success' : chatRequestStatus.success === false ? 'error' : 'pending'}`}>\n          {chatRequestStatus.message}\n        </div>\n      )}\n      \n      {/* Show notifications panel when toggled */}\n      {showNotifications && (\n        <NotificationsPanel onClose={() => setShowNotifications(false)} />\n      )}\n      \n      {/* Intersection filter info message */}\n      {showIntersectingOnly && pathsWithCoordinates.length === 0 && (\n        <div className=\"intersection-filter-info\">\n          <i className=\"fas fa-info-circle\"></i> \n          No intersecting paths found.\n        </div>\n      )}\n      \n      <MapContainer \n        center={mapCenterPoint} \n        zoom={4} \n        style={{ height: '600px', width: '100%' }}\n        ref={mapRef}\n        preferCanvas={true} // Use canvas renderer for better performance\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        \n        {/* Map click handler for route creation */}\n        <MapClickHandler \n          routeMode={routeMode} \n          selectedSource={selectedSource} \n          setSelectedSource={setSelectedSource} \n          createPath={handleCreatePath}\n        />\n        \n        {/* Optimized user markers rendering */}\n        {usersWithLocation.slice(0, 100).map(u => (\n          <UserMarker\n            key={`user-${u.id}`}\n            user={u}\n            currentUser={user}\n            handleChatRequest={handleChatRequest}\n            chatRequestSending={chatRequestSending}\n            formatTime={formatTime}\n            createCustomIcon={createCustomIcon}\n          />\n        ))}\n\n        {/* Display route source marker if in route mode */}\n        {routeMode && selectedSource && (\n          <Marker \n            position={[selectedSource.lat, selectedSource.lng]}\n            icon={createCustomIcon('#00C853')}\n          >\n            <Popup>Starting point</Popup>\n          </Marker>\n        )}\n        \n        {/* Display paths with performance optimizations */}\n        {pathsWithCoordinates.slice(0, 50).map((path, idx) => (\n          <RoutePolyline \n            key={`path-${path.id || idx}`}\n            path={path}\n            idx={idx}\n            currentUserId={user?.id}\n            formatTime={formatTime}\n          />\n        ))}\n\n        {/* Map bounds updater component */}\n        <MapBoundsUpdater \n          users={usersWithLocation} \n          paths={pathsWithCoordinates} \n        />\n      </MapContainer>\n      \n      <div className=\"map-legend\">\n        <h4>Map Legend</h4>\n        <div className=\"legend-items\">\n          <div className=\"legend-item\">\n            <div className=\"legend-marker\" style={{ backgroundColor: '#4285F4' }}></div>\n            <span>Your location</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-marker\" style={{ backgroundColor: '#FF5722' }}></div>\n            <span>Other users</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-line\" style={{ backgroundColor: '#2196F3' }}></div>\n            <span>Your path</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-line\" style={{ backgroundColor: '#4CAF50' }}></div>\n            <span>Intersecting paths</span>\n          </div>\n          <div className=\"legend-item\">\n            <div className=\"legend-line\" style={{ backgroundColor: '#FF5722' }}></div>\n            <span>Other users' paths</span>\n          </div>\n          {routeMode && (\n            <div className=\"legend-item\">\n              <div className=\"legend-marker\" style={{ backgroundColor: '#00C853' }}></div>\n              <span>Starting point</span>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Display path information and active chats panel */}\n      <div className=\"map-info-panel\">\n        <h4>Statistics</h4>\n        <div className=\"map-stats\">\n          <div className=\"stat-item\">\n            <strong>Active Users:</strong> {usersWithLocation.length}\n          </div>\n          <div className=\"stat-item\">\n            <strong>Active Paths:</strong> {pathsWithCoordinates.length}\n          </div>\n          <div className=\"stat-item\">\n            <strong>Last Updated:</strong> {formatTime(lastUpdated)}\n          </div>\n        </div>\n        \n        {/* Active Chats Panel */}\n        <div className=\"active-chats\">\n          <h4>\n            <FontAwesomeIcon icon={faComments} /> Active Chats\n          </h4>\n          <div className=\"chats-list\">\n            {activeChats && activeChats.length > 0 ? (\n              activeChats.map(chat => (\n                <div \n                  key={chat.id} \n                  className=\"chat-item\"\n                  onClick={() => openChat(chat.id)}\n                >\n                  <div className=\"chat-user\">\n                    {chat.otherParticipants && chat.otherParticipants.length > 0 \n                      ? chat.otherParticipants[0].username \n                      : 'Unknown User'}\n                  </div>\n                  {chat.unreadCount > 0 && (\n                    <span className=\"unread-badge\">{chat.unreadCount}</span>\n                  )}\n                </div>\n              ))\n            ) : (\n              <div className=\"no-chats\">No active chats</div>\n            )}\n          </div>\n        </div>\n        \n        {pathsWithCoordinates.length > 0 && (\n          <div className=\"recent-paths\">\n            <h4>Recent Paths</h4>\n            <div className=\"paths-list\">\n              {pathsWithCoordinates.slice(0, 3).map((path, idx) => (\n                <div key={idx} className={`path-item ${path.intersects_with_user ? 'intersecting' : ''}`}>\n                  <div className=\"path-header\">\n                    <strong>{path.username || 'Unknown user'}</strong>\n                    <span>{formatTime(path.created_at)}</span>\n                  </div>\n                  {path.intersects_with_user && (\n                    <div className=\"intersect-badge\">Intersects with your route</div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Chat dialog */}\n      {currentChat && <ChatDialog />}\n    </div>\n  );\n};\n\nexport default React.memo(UserLocationMap);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}