{"ast":null,"code":"var _jsxFileName = \"/home/anubhav/project_6/auth-system/frontend/src/components/ChatDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect, useRef } from 'react';\nimport { ChatContext } from '../context/ChatContext';\nimport { AuthContext } from '../context/AuthContext';\nimport './ChatDialog.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatDialog = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const {\n    currentChat,\n    messages,\n    sendMessage,\n    closeChat,\n    loading,\n    fetchMessages\n  } = useContext(ChatContext);\n  const [newMessage, setNewMessage] = useState('');\n  const [sendingMessage, setSendingMessage] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  const messagesContainerRef = useRef(null);\n  useEffect(() => {\n    // Scroll to bottom on new messages\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  }, [messages]);\n\n  // Re-fetch messages periodically while chat is open\n  useEffect(() => {\n    if (currentChat) {\n      // Initial fetch\n      fetchMessages(currentChat.id);\n\n      // Set up polling for new messages\n      const intervalId = setInterval(() => {\n        fetchMessages(currentChat.id);\n      }, 5000);\n      return () => clearInterval(intervalId);\n    }\n  }, [currentChat, fetchMessages]);\n  const handleSend = async e => {\n    e.preventDefault();\n    if (!newMessage.trim() || sendingMessage) return;\n    try {\n      setSendingMessage(true);\n      setError(null);\n      await sendMessage(currentChat.id, newMessage.trim());\n      setNewMessage('');\n    } catch (error) {\n      console.error('Failed to send message', error);\n      setError('Failed to send message. Please try again.');\n    } finally {\n      setSendingMessage(false);\n    }\n  };\n\n  // Safety check\n  if (!currentChat) {\n    return null;\n  }\n\n  // Get the name of the other participant\n  const otherParticipant = currentChat.otherParticipants && currentChat.otherParticipants.length > 0 ? currentChat.otherParticipants[0] : null;\n  const chatName = otherParticipant ? otherParticipant.username : 'Chat';\n\n  // Format time\n  const formatTime = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-dialog-overlay\",\n    onClick: e => {\n      // Close when clicking outside the dialog\n      if (e.target.className === 'chat-dialog-overlay') {\n        closeChat();\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-dialog\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: chatName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: closeChat,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        ref: messagesContainerRef,\n        children: [loading && messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-messages\",\n          children: \"Loading messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this) : messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-messages\",\n          children: \"No messages yet. Say hello!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this) : messages.map(msg => {\n          // Determine if this is my message or the other person's\n          const isMyMessage = msg.user_id === user.id;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${isMyMessage ? 'sent' : 'received'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: msg.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: formatTime(msg.created_at)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"chat-input-form\",\n        onSubmit: handleSend,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type a message...\",\n          className: \"chat-input\",\n          disabled: sendingMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          disabled: !newMessage.trim() || sendingMessage,\n          children: sendingMessage ? 'Sending...' : 'Send'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatDialog, \"sCWgEQTfB0LNcHJGxDsYfPPfm/k=\");\n_c = ChatDialog;\nexport default ChatDialog;\nvar _c;\n$RefreshReg$(_c, \"ChatDialog\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useRef","ChatContext","AuthContext","jsxDEV","_jsxDEV","ChatDialog","_s","user","currentChat","messages","sendMessage","closeChat","loading","fetchMessages","newMessage","setNewMessage","sendingMessage","setSendingMessage","error","setError","messagesEndRef","messagesContainerRef","current","scrollIntoView","behavior","id","intervalId","setInterval","clearInterval","handleSend","e","preventDefault","trim","console","otherParticipant","otherParticipants","length","chatName","username","formatTime","dateString","date","Date","toLocaleTimeString","hour","minute","className","onClick","target","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","msg","isMyMessage","user_id","message","created_at","onSubmit","type","value","onChange","placeholder","disabled","_c","$RefreshReg$"],"sources":["/home/anubhav/project_6/auth-system/frontend/src/components/ChatDialog.js"],"sourcesContent":["import React, { useState, useContext, useEffect, useRef } from 'react';\nimport { ChatContext } from '../context/ChatContext';\nimport { AuthContext } from '../context/AuthContext';\nimport './ChatDialog.css';\n\nconst ChatDialog = () => {\n  const { user } = useContext(AuthContext);\n  const { \n    currentChat, \n    messages, \n    sendMessage, \n    closeChat, \n    loading,\n    fetchMessages\n  } = useContext(ChatContext);\n  \n  const [newMessage, setNewMessage] = useState('');\n  const [sendingMessage, setSendingMessage] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  const messagesContainerRef = useRef(null);\n\n  useEffect(() => {\n    // Scroll to bottom on new messages\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  // Re-fetch messages periodically while chat is open\n  useEffect(() => {\n    if (currentChat) {\n      // Initial fetch\n      fetchMessages(currentChat.id);\n      \n      // Set up polling for new messages\n      const intervalId = setInterval(() => {\n        fetchMessages(currentChat.id);\n      }, 5000);\n      \n      return () => clearInterval(intervalId);\n    }\n  }, [currentChat, fetchMessages]);\n\n  const handleSend = async (e) => {\n    e.preventDefault();\n    if (!newMessage.trim() || sendingMessage) return;\n    \n    try {\n      setSendingMessage(true);\n      setError(null);\n      \n      await sendMessage(currentChat.id, newMessage.trim());\n      setNewMessage('');\n    } catch (error) {\n      console.error('Failed to send message', error);\n      setError('Failed to send message. Please try again.');\n    } finally {\n      setSendingMessage(false);\n    }\n  };\n\n  // Safety check\n  if (!currentChat) {\n    return null;\n  }\n\n  // Get the name of the other participant\n  const otherParticipant = currentChat.otherParticipants && \n                          currentChat.otherParticipants.length > 0 ? \n                          currentChat.otherParticipants[0] : null;\n  const chatName = otherParticipant ? otherParticipant.username : 'Chat';\n\n  // Format time\n  const formatTime = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  return (\n    <div className=\"chat-dialog-overlay\" onClick={(e) => {\n      // Close when clicking outside the dialog\n      if (e.target.className === 'chat-dialog-overlay') {\n        closeChat();\n      }\n    }}>\n      <div className=\"chat-dialog\">\n        <div className=\"chat-header\">\n          <h3>{chatName}</h3>\n          <button className=\"close-button\" onClick={closeChat}>×</button>\n        </div>\n        \n        <div className=\"chat-messages\" ref={messagesContainerRef}>\n          {loading && messages.length === 0 ? (\n            <div className=\"loading-messages\">Loading messages...</div>\n          ) : messages.length === 0 ? (\n            <div className=\"no-messages\">No messages yet. Say hello!</div>\n          ) : (\n            messages.map(msg => {\n              // Determine if this is my message or the other person's\n              const isMyMessage = msg.user_id === user.id;\n              \n              return (\n                <div \n                  key={msg.id}\n                  className={`message ${isMyMessage ? 'sent' : 'received'}`}\n                >\n                  <div className=\"message-content\">{msg.message}</div>\n                  <div className=\"message-time\">{formatTime(msg.created_at)}</div>\n                </div>\n              );\n            })\n          )}\n          <div ref={messagesEndRef} />\n        </div>\n        \n        {error && <div className=\"chat-error\">{error}</div>}\n        \n        <form className=\"chat-input-form\" onSubmit={handleSend}>\n          <input\n            type=\"text\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n            placeholder=\"Type a message...\"\n            className=\"chat-input\"\n            disabled={sendingMessage}\n          />\n          <button \n            type=\"submit\" \n            className=\"send-button\" \n            disabled={!newMessage.trim() || sendingMessage}\n          >\n            {sendingMessage ? 'Sending...' : 'Send'}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatDialog;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}